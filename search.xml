<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>C程序设计语言课后习题答案</title>
    <url>/C%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80%E8%AF%BE%E5%90%8E%E4%B9%A0%E9%A2%98%E7%AD%94%E6%A1%88/</url>
    <content><![CDATA[<blockquote>
<p>刚好在读这本书，故将习题代码进行分享，经过测试均可以运行。</p>
<p>如果有所帮助，也希望收到你的正向反馈～</p>
<p>目录为题目的一个简要描述，方便回溯代码。</p>
<p>仓库地址：</p>
</blockquote>
<p>[TOC]</p>
<h1 id="第一章"><a href="#第一章" class="headerlink" title="第一章"></a>第一章</h1><h2 id="1-8-统计空白字符个数"><a href="#1-8-统计空白字符个数" class="headerlink" title="1-8: 统计空白字符个数"></a>1-8: 统计空白字符个数</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Count blank characters</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">   <span class="keyword">int</span> c;</span><br><span class="line">   <span class="keyword">int</span> space, tab, nl;</span><br><span class="line">   </span><br><span class="line">   space = tab = nl = <span class="number">0</span>;</span><br><span class="line">   <span class="keyword">while</span> ((c = getchar()) != EOF)&#123;</span><br><span class="line">       <span class="keyword">if</span> (c == <span class="string">&#x27; &#x27;</span>)</span><br><span class="line">           ++space;</span><br><span class="line">       <span class="keyword">if</span> (c == <span class="string">&#x27;\t&#x27;</span>)</span><br><span class="line">           ++tab;</span><br><span class="line">       <span class="keyword">if</span> (c == <span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">           ++nl;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="comment">// 注意，采用 &#x27;\&#x27; 可以实现句内换行，但其前面的空白会被打印至输出</span></span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;Space: %d\</span></span><br><span class="line"><span class="string">            Tab: %d\</span></span><br><span class="line"><span class="string">            Newline: %d\n&quot;</span>, space, tab, nl);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="1-9-复制输入到输出，多个空格转一个"><a href="#1-9-复制输入到输出，多个空格转一个" class="headerlink" title="1-9: 复制输入到输出，多个空格转一个"></a>1-9: 复制输入到输出，多个空格转一个</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Ignore extra space</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> c;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span> ((c = getchar()) != EOF)&#123;</span><br><span class="line">        <span class="built_in">putchar</span>(c);</span><br><span class="line">        <span class="keyword">if</span> (c == <span class="string">&#x27; &#x27;</span>)  <span class="comment">// 打印第一个空格，其他的略去</span></span><br><span class="line">            <span class="keyword">while</span> ((c = getchar()) == <span class="string">&#x27; &#x27;</span>)</span><br><span class="line">                ;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="1-10-复制输入到输出，可视化制表符，回退符及反斜杠"><a href="#1-10-复制输入到输出，可视化制表符，回退符及反斜杠" class="headerlink" title="1-10: 复制输入到输出，可视化制表符，回退符及反斜杠"></a>1-10: 复制输入到输出，可视化制表符，回退符及反斜杠</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// exercise 1-10</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> c;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 关闭输入缓存机制，让 getchar() 达到 getch() 的效果</span></span><br><span class="line">    <span class="comment">// -icanon: Enable (disable) canonical input (ERASE and KILL processing). -- From manual of stty</span></span><br><span class="line">    <span class="comment">// Ps: Mac 没有 conio.h 库</span></span><br><span class="line">    system(<span class="string">&quot;stty -icanon&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span> ((c = getchar()) != EOF)&#123;</span><br><span class="line">        <span class="keyword">if</span> (c == <span class="string">&#x27;\t&#x27;</span>)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;\\t&quot;</span>);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (c == <span class="string">&#x27;\b&#x27;</span>)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;\\b&quot;</span>);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (c == <span class="string">&#x27;\\&#x27;</span>)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;\\\\&quot;</span>);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">putchar</span>(c);</span><br><span class="line">    &#125;</span><br><span class="line">    system(<span class="string">&quot;stty -icanon&quot;</span>);  <span class="comment">// 重新打开缓存机制，不然会影响到其他 exercise 的运行</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h2 id="1-12-以每行一个单词的形式输出"><a href="#1-12-以每行一个单词的形式输出" class="headerlink" title="1-12: 以每行一个单词的形式输出"></a>1-12: 以每行一个单词的形式输出</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// exercise 1-12</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> IN   1  <span class="comment">/* inside a word */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> OUT  0  <span class="comment">/* outside a word */</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> c, state;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span> ((c = getchar()) != EOF) &#123;</span><br><span class="line">        <span class="built_in">putchar</span>(c);</span><br><span class="line">        <span class="keyword">if</span> (c == <span class="string">&#x27; &#x27;</span> || c == <span class="string">&#x27;\n&#x27;</span> || c == <span class="string">&#x27;\t&#x27;</span>)</span><br><span class="line">            <span class="built_in">putchar</span>(<span class="string">&#x27;\n&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h2 id="1-13-a-水平打印单词长度直方图"><a href="#1-13-a-水平打印单词长度直方图" class="headerlink" title="1-13-a: 水平打印单词长度直方图"></a>1-13-a: 水平打印单词长度直方图</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LENGTH 10</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> c, i, j, lw;</span><br><span class="line">    <span class="keyword">int</span> lws[LENGTH];</span><br><span class="line"></span><br><span class="line">    lw = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; LENGTH; ++i)</span><br><span class="line">        lws[i] = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> ((c = getchar()) != EOF) &#123;</span><br><span class="line">        <span class="keyword">if</span> (c == <span class="string">&#x27; &#x27;</span> || c == <span class="string">&#x27;\n&#x27;</span> || c == <span class="string">&#x27;\t&#x27;</span>)&#123;</span><br><span class="line">            ++lws[lw];</span><br><span class="line">            lw = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            ++lw;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; LENGTH; ++i)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d |&quot;</span>, i);</span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; lws[i]; ++j)</span><br><span class="line">            <span class="built_in">putchar</span>(<span class="string">&#x27;#&#x27;</span>);</span><br><span class="line">        <span class="built_in">putchar</span>(<span class="string">&#x27;\n&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>


<h2 id="1-13-b-垂直打印单词长度直方图"><a href="#1-13-b-垂直打印单词长度直方图" class="headerlink" title="1-13-b: 垂直打印单词长度直方图"></a>1-13-b: 垂直打印单词长度直方图</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LENGTH 10</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> HAVEUNPRINTED 1 <span class="comment">// 还没打印完</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EOP 0 <span class="comment">// End of printing</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> c, i, j, lw, state;</span><br><span class="line">    <span class="keyword">int</span> lws[LENGTH];</span><br><span class="line"></span><br><span class="line">    lw = <span class="number">0</span>;</span><br><span class="line">    state = HAVEUNPRINTED;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; LENGTH; ++i)</span><br><span class="line">        lws[i] = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> ((c = getchar()) != EOF) &#123;</span><br><span class="line">        <span class="keyword">if</span> (c == <span class="string">&#x27; &#x27;</span> || c == <span class="string">&#x27;\n&#x27;</span> || c == <span class="string">&#x27;\t&#x27;</span>)&#123;</span><br><span class="line">            ++lws[lw];</span><br><span class="line">            lw = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            ++lw;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 这里打印一下“坐标”，之所以和上面循环分开是因为这样可能更易读 :)</span></span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; LENGTH; ++i)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\t&quot;</span>, i);</span><br><span class="line">    <span class="built_in">putchar</span>(<span class="string">&#x27;\n&#x27;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; LENGTH; ++i)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;-\t&quot;</span>);</span><br><span class="line">    <span class="built_in">putchar</span>(<span class="string">&#x27;\n&#x27;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span> (state)&#123;</span><br><span class="line">        j = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; LENGTH; ++i)&#123;</span><br><span class="line">            <span class="keyword">if</span> (lws[i] &gt; <span class="number">0</span>)&#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;#\t&quot;</span>);</span><br><span class="line">                --lws[i]; <span class="comment">// 打印完后频数-1</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="built_in">putchar</span>(<span class="string">&#x27;\t&#x27;</span>);</span><br><span class="line">                j++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">putchar</span>(<span class="string">&#x27;\n&#x27;</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (j == LENGTH)</span><br><span class="line">            state = EOP; <span class="comment">//当所有频数为 0 时，j == LENGTH</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="1-15-重新编写温度转换程序"><a href="#1-15-重新编写温度转换程序" class="headerlink" title="1-15: 重新编写温度转换程序"></a>1-15: 重新编写温度转换程序</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> FAHR 0</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> UPPER 300</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> STEP 20</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">temperature_convert</span><span class="params">(<span class="keyword">int</span> fahr, <span class="keyword">int</span> upper, <span class="keyword">int</span> step)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    temperature_convert(FAHR, UPPER, STEP);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">temperature_convert</span><span class="params">(<span class="keyword">int</span> fahr, <span class="keyword">int</span> upper, <span class="keyword">int</span> step)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> celsius;</span><br><span class="line">     <span class="keyword">while</span> (fahr &lt;= upper) &#123;</span><br><span class="line">        celsius = <span class="number">5</span> * (fahr<span class="number">-32</span>) / <span class="number">9</span>;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\t%d\n&quot;</span>, fahr, celsius);</span><br><span class="line">        fahr = fahr + step;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h2 id="1-16-打印任意长度输出行"><a href="#1-16-打印任意长度输出行" class="headerlink" title="1-16: 打印任意长度输出行"></a>1-16: 打印任意长度输出行</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXLINE 1000 <span class="comment">/*maximum input line length*/</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">get_line</span><span class="params">(<span class="keyword">char</span> line[], <span class="keyword">int</span> maxline)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* print input line and length */</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> len; <span class="comment">/* current line length */</span></span><br><span class="line">    <span class="keyword">char</span> line[MAXLINE]; <span class="comment">/* current input line */</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span> ((len = get_line(line, MAXLINE)) &gt; <span class="number">0</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Length: %d \nline: %s&quot;</span>, len, line);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* getline: read a line into s, return length */</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">get_line</span><span class="params">(<span class="keyword">char</span> s[],<span class="keyword">int</span> lim)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> c, i;</span><br><span class="line">    c = <span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">0</span>; i &lt; lim<span class="number">-1</span> &amp;&amp; (c=getchar())!=EOF &amp;&amp; c!=<span class="string">&#x27;\n&#x27;</span>; ++i)</span><br><span class="line">        s[i] = c;</span><br><span class="line">    <span class="keyword">if</span> (c == <span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        s[i] = c;</span><br><span class="line">        ++i;</span><br><span class="line">    &#125;</span><br><span class="line">    s[i] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">    <span class="keyword">return</span> i<span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>


<h2 id="1-17-打印大于长度80的行"><a href="#1-17-打印大于长度80的行" class="headerlink" title="1-17: 打印大于长度80的行"></a>1-17: 打印大于长度80的行</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXLINE 1000 <span class="comment">/*maximum input line length*/</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">get_line</span><span class="params">(<span class="keyword">char</span> line[], <span class="keyword">int</span> maxline)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* print input line and length */</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> len; <span class="comment">/* current line length */</span></span><br><span class="line">    <span class="keyword">char</span> line[MAXLINE]; <span class="comment">/* current input line */</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span> ((len = get_line(line, MAXLINE)) &gt; <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">if</span>(len &gt; <span class="number">80</span>)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%s&quot;</span>, line);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* getline: read a line into s, return length */</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">get_line</span><span class="params">(<span class="keyword">char</span> s[],<span class="keyword">int</span> lim)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> c, i;</span><br><span class="line">    c = <span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">0</span>; i &lt; lim<span class="number">-1</span> &amp;&amp; (c=getchar())!=EOF &amp;&amp; c!=<span class="string">&#x27;\n&#x27;</span>; ++i)</span><br><span class="line">        s[i] = c;</span><br><span class="line">    <span class="keyword">if</span> (c == <span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        s[i] = c;</span><br><span class="line">        ++i;</span><br><span class="line">    &#125;</span><br><span class="line">    s[i] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">    <span class="keyword">return</span> i<span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* copy: copy &#x27;from&#x27; into &#x27;to&#x27;; assume to is big enough */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">copy_then_print_length</span><span class="params">(<span class="keyword">char</span> to[], <span class="keyword">char</span> from[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> ((to[i] = from[i]) != <span class="string">&#x27;\0&#x27;</span>)</span><br><span class="line">        ++i;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Length: %d&quot;</span>, i);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h2 id="1-18-删除行末尾的空白和全为空白字符的行"><a href="#1-18-删除行末尾的空白和全为空白字符的行" class="headerlink" title="1-18: 删除行末尾的空白和全为空白字符的行"></a>1-18: 删除行末尾的空白和全为空白字符的行</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXLINE 10000 <span class="comment">/*maximum input text length*/</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">get_text</span><span class="params">(<span class="keyword">char</span> text[], <span class="keyword">int</span> maxline)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">delete_space</span><span class="params">(<span class="keyword">char</span> text[])</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 可以看到本段程序中有重复的代码和一些可以优化的地方 */</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> text[MAXLINE]; <span class="comment">/* current input text */</span></span><br><span class="line">    </span><br><span class="line">    get_text(text, MAXLINE);</span><br><span class="line">    </span><br><span class="line">    delete_space(text); <span class="comment">/* 删除每一行末尾的空格*/</span></span><br><span class="line">    delete_space(text); <span class="comment">/* 第二次删除原来有空格的行*/</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%s&quot;</span>, text);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* getline: read text into s */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">get_text</span><span class="params">(<span class="keyword">char</span> s[],<span class="keyword">int</span> lim)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> c, i;</span><br><span class="line">    c = <span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">0</span>; i &lt; lim<span class="number">-1</span> &amp;&amp; (c=getchar())!=EOF; ++i)</span><br><span class="line">        s[i] = c;</span><br><span class="line">    s[i] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 删除每行后多余的空白字符（就地修改） */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">delete_space</span><span class="params">(<span class="keyword">char</span> text[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i, j, space; <span class="comment">/* i, j 双指针，space用于记录行尾空白字符（除换行符）的数量，以更新 j 的位置 */</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">/* 利用 j 对 text[] 进行就地修改 */</span></span><br><span class="line">    <span class="keyword">for</span> (i = j = space = <span class="number">0</span>; text[i] != <span class="string">&#x27;\0&#x27;</span>; ++i, ++j)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (text[i] == <span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (j == <span class="number">0</span>) <span class="comment">/* 防止数组在下面的判断中越界 */</span></span><br><span class="line">            &#123;</span><br><span class="line">                --j;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (text[i] == text[j<span class="number">-1</span>]) <span class="comment">/* 判断是否是连续的空行 */</span></span><br><span class="line">                --j;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (space != <span class="number">0</span>) <span class="comment">/* 判断换行符前是否有空白，其实 space != 0 可以删去，加上便于理解 */</span></span><br><span class="line">                j -= space;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (text[i] == <span class="string">&#x27; &#x27;</span> || text[i] == <span class="string">&#x27;\t&#x27;</span>)</span><br><span class="line">            ++space; <span class="comment">/* 下一次循环起作用 */</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            space = <span class="number">0</span>;</span><br><span class="line">        </span><br><span class="line">        text[j] = text[i];</span><br><span class="line">    &#125;</span><br><span class="line">    text[j] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h2 id="1-19-颠倒每行的字符"><a href="#1-19-颠倒每行的字符" class="headerlink" title="1-19: 颠倒每行的字符"></a>1-19: 颠倒每行的字符</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXLINE 10000 <span class="comment">/*maximum input text length*/</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">get_text</span><span class="params">(<span class="keyword">char</span> text[], <span class="keyword">int</span> maxline)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">reverse</span><span class="params">(<span class="keyword">char</span> text[], <span class="keyword">int</span> i, <span class="keyword">int</span> j)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> text[MAXLINE]; <span class="comment">/* current input text */</span></span><br><span class="line">    </span><br><span class="line">    get_text(text, MAXLINE);</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%s&quot;</span>, text);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* getline: read text into s */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">get_text</span><span class="params">(<span class="keyword">char</span> s[],<span class="keyword">int</span> lim)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> c, i, j; <span class="comment">/* i, j 记录当前行首和行尾的位置 */</span></span><br><span class="line">    c = <span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">0</span>, j=<span class="number">0</span>; i &lt; lim<span class="number">-1</span> &amp;&amp; (c=getchar())!=EOF; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        s[i] = c;</span><br><span class="line">        <span class="keyword">if</span> (c == <span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            reverse(s, i<span class="number">-1</span>, j);</span><br><span class="line">            j = i + <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    s[i] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 颠倒顺序 */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">reverse</span><span class="params">(<span class="keyword">char</span> text[], <span class="keyword">int</span> i, <span class="keyword">int</span> j)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> temp;</span><br><span class="line">    <span class="keyword">while</span> (i &gt; j)</span><br><span class="line">    &#123;</span><br><span class="line">        temp = text[i];</span><br><span class="line">        text[i] = text[j];</span><br><span class="line">        text[j] = temp;</span><br><span class="line">        --i;</span><br><span class="line">        ++j;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h2 id="1-20-tab转space"><a href="#1-20-tab转space" class="headerlink" title="1-20: tab转space"></a>1-20: tab转space</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXLINE 10000 <span class="comment">/*maximum input text length*/</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> TSPACE 4 <span class="comment">/* Tab = 4 space */</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">get_text</span><span class="params">(<span class="keyword">char</span> text[], <span class="keyword">int</span> maxline)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">detab</span><span class="params">(<span class="keyword">char</span> s[], <span class="keyword">int</span> i)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> text[MAXLINE]; <span class="comment">/* current input text */</span></span><br><span class="line">    </span><br><span class="line">    get_text(text, MAXLINE);</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%s&quot;</span>, text);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* get_text: read text into s */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">get_text</span><span class="params">(<span class="keyword">char</span> s[],<span class="keyword">int</span> lim)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> c, i;</span><br><span class="line">    c = <span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">0</span>; i &lt; lim<span class="number">-1</span> &amp;&amp; (c=getchar())!=EOF; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        s[i] = c;</span><br><span class="line">        <span class="keyword">if</span> (c == <span class="string">&#x27;\t&#x27;</span>)</span><br><span class="line">            i = detab(s, i);</span><br><span class="line">    &#125;</span><br><span class="line">    s[i] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 替换制表符，返回索引 i */</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">detab</span><span class="params">(<span class="keyword">char</span> s[], <span class="keyword">int</span> i)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> fill_space;</span><br><span class="line">    </span><br><span class="line">    fill_space = TSPACE - i % TSPACE; <span class="comment">/* 计算填充的空格数量，i 从 0 开始索引，故 TSPACE-，否则 (TSPACE+1)- */</span></span><br><span class="line">    <span class="keyword">while</span>(fill_space--)&#123;</span><br><span class="line">        s[i] = <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">        ++i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> i<span class="number">-1</span>; <span class="comment">/* 最后需要让i-1，因为循环会自动加1，若不进行抵消程序会出错，当然，应当可以优化代码 &amp; 下次一定 */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h2 id="1-21-space转tab"><a href="#1-21-space转tab" class="headerlink" title="1-21: space转tab"></a>1-21: space转tab</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXLINE 10000 <span class="comment">/*maximum input text length*/</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> TSPACE 4 <span class="comment">/* Tab = 4 space */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> KEEPSPACE 1 <span class="comment">/* 1: 倾向于保留空格，0: 倾向于替换空格为制表符 */</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">get_text_entab</span><span class="params">(<span class="keyword">char</span> text[], <span class="keyword">int</span> maxline)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">detab</span><span class="params">(<span class="keyword">char</span> s[], <span class="keyword">int</span> i)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> text[MAXLINE]; <span class="comment">/* current input text */</span></span><br><span class="line">    </span><br><span class="line">    get_text_entab(text, MAXLINE);</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%s&quot;</span>, text);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* get_text: read text into s*/</span></span><br><span class="line"><span class="comment">/* entab: 替换空格为制表符，本质上来说，这题和18题很像，均是减少数组内字符的操作 */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">get_text_entab</span><span class="params">(<span class="keyword">char</span> s[],<span class="keyword">int</span> lim)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> c, i, redundant_space; <span class="comment">/* redundant_space 记录多余的空格，或者说替换时 i 需要倒退的次数 */</span></span><br><span class="line">    c = <span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">0</span>, redundant_space=<span class="number">-1</span>; i &lt; lim<span class="number">-1</span> &amp;&amp; (c=getchar())!=EOF; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        s[i] = c;</span><br><span class="line">        <span class="keyword">if</span> (c == <span class="string">&#x27; &#x27;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            ++redundant_space;</span><br><span class="line">            <span class="keyword">if</span> (i % TSPACE == (TSPACE<span class="number">-1</span>))</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">/* 若KEEPSPACE==1，那么当一个空格后是制表符终止位时，不进行替换，此时goto到else后的语句重置 redundant_space（这么写是为了简洁，然后熟悉一下goto语句）*/</span></span><br><span class="line">                <span class="keyword">if</span> (KEEPSPACE &amp;&amp; redundant_space == <span class="number">0</span>)</span><br><span class="line">                    <span class="keyword">goto</span> keepspace;</span><br><span class="line">                i = i - redundant_space; <span class="comment">/* 若记录的是（连续）空格的数量，此处需要 +1，否则会覆盖空格前面的字符 */</span></span><br><span class="line">                s[i] = <span class="string">&#x27;\t&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            keepspace:</span><br><span class="line">            redundant_space = <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    s[i] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h2 id="1-22-“折”行"><a href="#1-22-“折”行" class="headerlink" title="1-22: “折”行"></a>1-22: “折”行</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXLINE 10000 <span class="comment">/*maximum input text length*/</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LENGTH 3 <span class="comment">/* 每行的字符数 */</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">get_text</span><span class="params">(<span class="keyword">char</span> text[], <span class="keyword">int</span> maxline)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 此程序未对tab进行空格的替换从而使得真正分行，结合1-20的detab程序可以实现，不过还需处理多余的空格 */</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> text[MAXLINE]; <span class="comment">/* current input text */</span></span><br><span class="line">    get_text(text, MAXLINE);</span><br><span class="line">    </span><br><span class="line"><span class="comment">//    forcing_newline(text, LENGTH);</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%s&quot;</span>, text);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* getline: read text into s */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">get_text</span><span class="params">(<span class="keyword">char</span> s[],<span class="keyword">int</span> lim)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> c, i, j;</span><br><span class="line">    c = <span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">0</span>, j=<span class="number">0</span>; i &lt; lim<span class="number">-1</span> &amp;&amp; (c=getchar())!=EOF; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        </span><br><span class="line">            </span><br><span class="line">        s[i] = c;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (s[i] == <span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">            j = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            ++j;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (j == LENGTH)&#123;</span><br><span class="line">            s[++i] = <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line"><span class="comment">//            s[++i] = c;</span></span><br><span class="line">            j = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    s[i] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



]]></content>
      <categories>
        <category>C</category>
      </categories>
      <tags>
        <tag>C</tag>
      </tags>
  </entry>
  <entry>
    <title>Git随笔</title>
    <url>/Git%E9%9A%8F%E7%AC%94/</url>
    <content><![CDATA[<blockquote>
<p>环境 &amp; 教程：<br>  macOS Big Sur 11.2.1（m1）<br>  <a href="https://www.bootcss.com/p/git-guide/">Git 使用简易指南(含安装)</a><br>  <a href="https://learngitbranching.js.org/?NODEMO=&locale=zh_CN">在线网站实操(强烈推荐)</a><br>  <a href="https://git-scm.com/book/zh/v2">Pro Git 官方中文教程(推荐)</a></p>
</blockquote>
<hr>
<p>  <a href="https://dev.to/lydiahallie/cs-visualized-useful-git-commands-37p1">直观的动画演示</a></p>
<ul>
<li>关于在线网站实操的快捷操作:<ul>
<li>点击右边动画可以查看对应的简单命令</li>
<li>levels 可以查看并选择关卡<ul>
<li>level intro1 快速跳转到第一关</li>
<li>show goal 查看当前目标</li>
<li>hide goal 或点击画面隐藏目标</li>
<li>objective 查看当前关卡提示</li>
<li>undo 撤销 reset重做</li>
</ul>
</li>
</ul>
</li>
</ul>
<h1 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h1><ul>
<li>分布式版本控制: 每个人的电脑都是一个完整的版本库，可离线本地提交，联网时再push，不因服务器损坏或网络问题造成工作停止</li>
<li>若对某个命令感兴趣，如<code>git checkout</code>，在命令行下输入<code>man git-checkout</code>，你会发现一切变得简单起来</li>
</ul>
<h1 id="文件状态"><a href="#文件状态" class="headerlink" title="文件状态"></a>文件状态</h1><ul>
<li>未追踪(untracked)</li>
<li>已追踪(tracked)<ul>
<li>已修改(modified)<ul>
<li>表示修改了文件，但还没保存到数据库</li>
</ul>
</li>
<li>已暂存(staged)<ul>
<li>表示对一个文件的当前版本做了标记，使其包含在下次提交的快照中</li>
</ul>
</li>
<li>已提交(commited)<ul>
<li>表示数据已经保存在本地数据库中</li>
</ul>
</li>
</ul>
</li>
</ul>
<p>已追踪下的三个状态对应了Git项目中的三个阶段: 工作区、暂存区以及 Git 目录。<br><img src="https://i.loli.net/2021/03/09/f8H4DqR3AQSIZwT.png" alt="工作区、暂存区以及 Git 目录"></p>
<p>尚处于未跟踪(untracked)状态的某种意义来讲不属于上图叙述的工作区。可以把暂存区中的文件理解为下次将提交至仓库的文件，单纯的语言有些枯燥，不妨往下面看看，命令的反馈或许给你带来一些感触。<br><img src="https://i.loli.net/2021/03/13/XMci16uBIJTmUPv.png" alt="图片"></p>
<h2 id="查看配置-amp-配置基础信息"><a href="#查看配置-amp-配置基础信息" class="headerlink" title="查看配置 &amp; 配置基础信息"></a>查看配置 &amp; 配置基础信息</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git config -l <span class="comment"># 查看所有配置</span></span><br><span class="line">git config --system -l <span class="comment"># 系统配置</span></span><br><span class="line">git config --global -l <span class="comment"># 全局配置</span></span><br><span class="line">git config --user.name <span class="string">&quot;yourname&quot;</span> <span class="comment"># 配置你的用户名和邮件地址，这很重要</span></span><br><span class="line">git config --user.email <span class="string">&quot;youremail&quot;</span></span><br></pre></td></tr></table></figure>
<p>我个人的配置文件在<code>~/.gitconfig</code>，其内容与<code>--global</code>查看到的内容一致</p>
<h2 id="基础命令"><a href="#基础命令" class="headerlink" title="基础命令"></a>基础命令</h2><p>命令会基于创建在家目录下的<code>~/notes</code>进行阐述<del>假设你创建了</del>，当然，你也可以在你的桌面上新建一个文件夹，叫什么都行。</p>
<h3 id="创建仓库"><a href="#创建仓库" class="headerlink" title="创建仓库"></a>创建仓库</h3><h4 id="在需要版本控制的目录下初始化本地仓库"><a href="#在需要版本控制的目录下初始化本地仓库" class="headerlink" title="在需要版本控制的目录下初始化本地仓库"></a>在需要版本控制的目录下初始化本地仓库</h4><p>现在你想对的notes进行版本控制，只需切换到对应文件夹，初始化仓库</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/notes</span><br><span class="line">git init <span class="comment"># 文件路径可选，默认在当前文件夹下，此时会创建.git文件夹</span></span><br></pre></td></tr></table></figure>

<h4 id="查看状态"><a href="#查看状态" class="headerlink" title="查看状态"></a>查看状态</h4><p>现在来看看你的笔记里面有啥能放进仓库的</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git status</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">On branch master</span><br><span class="line"></span><br><span class="line">No commits yet</span><br><span class="line"></span><br><span class="line">nothing to commit (create/copy files and use <span class="string">&quot;git add&quot;</span> to track)</span><br></pre></td></tr></table></figure>

<p>好的，什么都没有。来添加点东西，相信下面的命令你们都懂的，不懂百度～</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">touch English</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;English is very easy!&quot;</span> &gt;&gt; English</span><br></pre></td></tr></table></figure>

<p>再输入<code>git status</code>看看有什么变化:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">On branch master</span><br><span class="line">Your branch is up to date with <span class="string">&#x27;origin/master&#x27;</span>.</span><br><span class="line"></span><br><span class="line">Untracked files:</span><br><span class="line">  (use <span class="string">&quot;git add &lt;file&gt;...&quot;</span> to include <span class="keyword">in</span> what will be committed)</span><br><span class="line">	English</span><br><span class="line"></span><br><span class="line">nothing added to commit but untracked files present (use <span class="string">&quot;git add&quot;</span> to track)</span><br></pre></td></tr></table></figure>
<p>提示有一个未跟踪的文件English，使用git add进行跟踪</p>
<p>或许你会觉得命令的输出有些长，可以使用<code>git status -s</code> or <code>git status --short</code>缩短命令输出</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git status -s</span><br></pre></td></tr></table></figure>

<p>你会得到一段非常简短的反馈</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="string">??</span> English</span><br></pre></td></tr></table></figure>
<p>??表示该文件为新添加的未跟踪文件</p>
<h4 id="将文件增加到下次提交序列"><a href="#将文件增加到下次提交序列" class="headerlink" title="将文件增加到下次提交序列"></a>将文件增加到下次提交序列</h4><p>git add指令实际上是一个多功能指令，但先不展开介绍，先处理English</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git add English</span><br></pre></td></tr></table></figure>

<p>似乎没有任何反馈，不用担心，用<code>git status</code>看看就好了</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">On branch master</span><br><span class="line">Your branch is up to date with <span class="string">&#x27;origin/master&#x27;</span>.</span><br><span class="line"></span><br><span class="line">Changes to be committed:</span><br><span class="line">  (use <span class="string">&quot;git restore --staged &lt;file&gt;...&quot;</span> to unstage)</span><br><span class="line">	new file:   English</span><br></pre></td></tr></table></figure>

<p>可以看到English文件已经处于暂存区了，此时使用<code>git restore --staged &lt;file&gt;</code>可以移出暂存区，变为不跟踪的状态<del>当然不移了</del>。<br>来给英语笔记添加点内容，然后看看变化</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;My English is very poor&quot;</span> &gt;&gt; English</span><br><span class="line">git status</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">On branch master</span><br><span class="line">Your branch is up to date with <span class="string">&#x27;origin/master&#x27;</span>.</span><br><span class="line"></span><br><span class="line">Changes to be committed:</span><br><span class="line">  (use <span class="string">&quot;git restore --staged &lt;file&gt;...&quot;</span> to unstage)</span><br><span class="line">	new file:   English</span><br><span class="line"></span><br><span class="line">Changes not staged <span class="keyword">for</span> commit:</span><br><span class="line">  (use <span class="string">&quot;git add &lt;file&gt;...&quot;</span> to update what will be committed)</span><br><span class="line">  (use <span class="string">&quot;git restore &lt;file&gt;...&quot;</span> to discard changes <span class="keyword">in</span> working directory)</span><br><span class="line">	modified:   English</span><br></pre></td></tr></table></figure>
<p>提示English发生了改变，但是不在暂存区，用git add把它加到暂存区（下一次提交的队列），或者git restore 丢弃此次更改。</p>
<p>此时你可能有点好奇简短的输出是什么样子的，让我们输入<code>git status -s</code>看看</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">AM English</span><br></pre></td></tr></table></figure>
<p>引入<code>-</code>和<code>+</code>来方便讲解，此时<code>??</code>-&gt;<code>AM</code>，我们将<code>-s</code>输出的类型分为两栏，左边的是暂存区的状态，右边是工作区的状态。看一下上面未缩减的输出可以发现，此时存在两个English笔记，对应于缩减的输出可以理解为AM的A表示有同名的文件暂存了，M表示后来修改过的文件没有暂存，有没有觉得<code>-s</code>的输出短小精悍</p>
<figure class="highlight diff"><table><tr><td class="code"><pre><span class="line"><span class="deletion">-?? English</span></span><br><span class="line"><span class="addition">+AM English</span></span><br></pre></td></tr></table></figure>



<h4 id="git-diff查看修改"><a href="#git-diff查看修改" class="headerlink" title="git diff查看修改"></a>git diff查看修改</h4><p>假设此时你不太记得更改了什么</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git diff</span><br></pre></td></tr></table></figure>
<p>温馨提示，按q退出</p>
<figure class="highlight diff"><table><tr><td class="code"><pre><span class="line"><span class="comment">diff --git a/English b/English</span></span><br><span class="line"><span class="comment">index e69de29..82b9f44 100644</span></span><br><span class="line"><span class="comment">--- a/English</span></span><br><span class="line"><span class="comment">+++ b/English</span></span><br><span class="line">@@ -0,0 +1 @@</span><br><span class="line"><span class="addition">+My English is very poor</span></span><br><span class="line">(END)</span><br></pre></td></tr></table></figure>
<p>高亮的那一行就是你添加的内容<del>你英语不好</del></p>
<h3 id="分支操作"><a href="#分支操作" class="headerlink" title="分支操作"></a>分支操作</h3><h4 id="创建和切换"><a href="#创建和切换" class="headerlink" title="创建和切换"></a>创建和切换</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git branch <span class="comment"># 查看本地分支</span></span><br><span class="line">git branch -r <span class="comment"># 查看远程(remote)分支</span></span><br><span class="line">git branch [branch_name] <span class="comment"># 建立分支</span></span><br><span class="line">git branch -d [branch_name] <span class="comment"># 删除分支</span></span><br><span class="line">git checkout [branch_name] <span class="comment"># 切换分支</span></span><br><span class="line">git checkout -b [branch_name] <span class="comment"># 创建分支并切换过去</span></span><br></pre></td></tr></table></figure>

<h4 id="合并"><a href="#合并" class="headerlink" title="合并"></a>合并</h4><p>若你现在建立了两个分支，一个<code>main</code>，一个是<code>bugFix</code>，两个分支都各自对文件进行了部分修改，此时你想合并修改看是否符合预期。<br><img src="https://i.loli.net/2021/03/09/ejOp2ik54CnmutM.png" alt="合并前"></p>
<p>使用<code>git status</code>可以查看当前分支,假设<code>main</code>为当前所在分支。</p>
<h5 id="merge"><a href="#merge" class="headerlink" title="merge"></a>merge</h5><p>把修改拉过来</p>
<p>用<code>git merge bugFix</code>则可将<code>bugFix</code>修改的记录合并至<code>main</code>，此时main包含了所有的修改，但注意，<code>bugFix</code>没有，应使用<code>git checkout bugFix; git merge main</code>切换至<code>bugFix</code>分支并再次合并。<br>若你对此缺少主观的印象，建议点击该<a href="https://learngitbranching.js.org/?NODEMO=&locale=zh_CN">网站</a>，输入<code>level intro3</code>。<br><img src="https://i.loli.net/2021/03/09/f2g3hntyZJuGFme.png" alt="merge"></p>
<h5 id="rebase"><a href="#rebase" class="headerlink" title="rebase"></a>rebase</h5><p>让修改看起来是顺序开发的<br>命令: <code>git rebase bugFix</code></p>
<p><img src="https://i.loli.net/2021/03/09/473CXz12cA6JPnH.png" alt="rebase"></p>
<h2 id="忽略文件"><a href="#忽略文件" class="headerlink" title="忽略文件"></a>忽略文件</h2><p>将不需要提交的文件加入<code>.gitignore</code>文件中<br><code>忽略文件</code>的规则：</p>
<ul>
<li><code>#</code> 注释</li>
<li>可采用通配符</li>
<li><code>!</code> 取反</li>
<li><code>/home</code> 表示只忽略当前文件夹下 <code>home</code> 文件，不包括其他目录下的home</li>
<li><code>dir_name/</code> 忽略任何目录下名为<code>dir_name</code>的文件夹</li>
</ul>
<h4 id="克隆远程-remote-仓库"><a href="#克隆远程-remote-仓库" class="headerlink" title="克隆远程(remote)仓库"></a>克隆远程(remote)仓库</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> url [file_name] <span class="comment"># 文件路径可选，默认到当前文件夹下</span></span><br></pre></td></tr></table></figure>
<p>若出现403错误，检查钥匙串是否有两个账号，<code>更改/删除</code>另一个账号</p>
<h3 id="扩展"><a href="#扩展" class="headerlink" title="扩展"></a>扩展</h3><h2 id="码云公钥生成"><a href="#码云公钥生成" class="headerlink" title="码云公钥生成"></a>码云公钥生成</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/.ssh</span><br><span class="line">ssh-keygen</span><br><span class="line">pbcopy &lt; ~/.ssh/id_rsa.pub <span class="comment"># 已拷贝至剪切板，直接黏贴即可</span></span><br></pre></td></tr></table></figure>
<p><code>copy</code>至<a href="https://gitee.com/profile/sshkeys%E4%B8%8B%E5%8D%B3%E5%8F%AF">https://gitee.com/profile/sshkeys下即可</a></p>
<h1 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h1><p><a href="https://blog.csdn.net/u010566681/article/details/53183146">详解Github的.gitignore忽略文件+.gitignore不生效解决方案+生产配置大奉送</a></p>
<p><a href="https://blog.csdn.net/j15533415886/article/details/108185073">MAC 生成SSH公钥</a></p>
]]></content>
      <categories>
        <category>Git &amp; Github</category>
      </categories>
      <tags>
        <tag>Git</tag>
        <tag>Github</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo + Next 踩坑配置记录</title>
    <url>/Hexo%E8%B8%A9%E5%9D%91%E9%85%8D%E7%BD%AE%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[<blockquote>
<p>一番配置后深感付出与时间不成正比，缺乏css知识的情况下更是如此。再者选择Next的主题就是为了精简，故待后续有时间了再做配置更新。</p>
</blockquote>
<p>  以下<code>代码块</code>若未曾指定文件，默认命令行操作</p>
<h1 id="博客操作"><a href="#博客操作" class="headerlink" title="博客操作"></a>博客操作</h1><h2 id="增加新标签页"><a href="#增加新标签页" class="headerlink" title="增加新标签页"></a>增加新标签页</h2><ul>
<li>新增加的界面位于博客主目录下的 source 中</li>
</ul>
<figure class="highlight haxe"><table><tr><td class="code"><pre><span class="line">hexo <span class="keyword">new</span> <span class="type">page</span> tags</span><br><span class="line">hexo <span class="keyword">new</span> <span class="type">page</span> categories</span><br></pre></td></tr></table></figure>

<span id="more"></span>

<h2 id="创建文章"><a href="#创建文章" class="headerlink" title="创建文章"></a>创建文章</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo new <span class="string">&quot;文章&quot;</span></span><br></pre></td></tr></table></figure>
<p>此时创建的文章开头默认是没有categories的，设置成默认，打开<code>blog/scaffolds/post.md</code></p>
<figure class="highlight plain"><figcaption><span>blog/scaffolds/post.md</span></figcaption><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: &#123;&#123; title &#125;&#125;</span><br><span class="line">date: &#123;&#123; date &#125;&#125;</span><br><span class="line">tags:</span><br><span class="line">categories:</span><br><span class="line">---</span><br></pre></td></tr></table></figure>

<h2 id="启动本地服务器"><a href="#启动本地服务器" class="headerlink" title="启动本地服务器"></a>启动本地服务器</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure>
<p>此时修改本地文章内容可以直接刷新界面看到更改 <del>一天后才发现</del> :)</p>
<h1 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h1><ul>
<li>Next官方中文文档配置部分有些不适合更新的版本</li>
<li>中文的 language 设置应当为 zh-CN 而非 zh-Hans</li>
<li>网上大部分配置提到的路径为：<ul>
<li>博客配置文件<code>blog/_config.yml</code></li>
<li>主题配置文件<code>blog/themes/next/_config.yml</code></li>
</ul>
</li>
<li>现可<a href="https://github.com/iissnan/hexo-theme-next/issues/328">统一配置</a>在<code>blog/source/_data/next.yml</code>中，没有该目录则新建<br>将需要改变的地方<code>copy</code>至<code>next.yml</code>即可</li>
</ul>
<h2 id="博客配置"><a href="#博客配置" class="headerlink" title="博客配置"></a>博客配置</h2><h3 id="设置404界面"><a href="#设置404界面" class="headerlink" title="设置404界面"></a>设置<code>404</code>界面</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo new page 404</span><br></pre></td></tr></table></figure>
<p>自定义<code>blog/source/404/index.md</code>即可</p>
<h3 id="更改代码块颜色"><a href="#更改代码块颜色" class="headerlink" title="更改代码块颜色"></a>更改代码块颜色</h3><p>在<code>blog/themes/next/source/css/_variables/base.styl</code>进行修改</p>
<h3 id="设置命令行快捷键以同步仓库"><a href="#设置命令行快捷键以同步仓库" class="headerlink" title="设置命令行快捷键以同步仓库"></a>设置命令行快捷键以同步仓库</h3><ul>
<li>因为没什么时间再去看别人博客学习更方便的同步方法，先挖个坑下半年再说<br>Mac系统<code>open -a xcode ~/.zshrc</code>，会vim用vim<br>将以下内容添加至<code>zsh</code>配置文件，<code>bash</code>一样，<code>alias</code>后是别名的设置，按自己需求改个顺手的就行</li>
</ul>
<figure class="highlight shell"><figcaption><span>~/.zshrc</span></figcaption><table><tr><td class="code"><pre><span class="line">alias bls=&quot;ls -h ~/Blog/source/_posts&quot; # 查看 blog 已有文章</span><br><span class="line">alias bv=&quot;vim ~/Blog/source/_posts&quot; # 编辑文章</span><br><span class="line">alias rab=&quot;ra ~/Blog/source/_posts&quot; # 利用 ranger 查看文件并打开，需下载 ranger，并设置别名 ra</span><br><span class="line">alias hn=&quot;</span><br><span class="line">cd ~/Blog # 创建文章</span><br><span class="line">hexo n &quot;</span><br><span class="line">alias hd=&quot; # 同步仓库</span><br><span class="line">cd ~/Blog</span><br><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br><span class="line">cd -</span><br><span class="line">&quot;</span><br><span class="line">&quot;</span><br></pre></td></tr></table></figure>


<h3 id="交换归档和首页的索引"><a href="#交换归档和首页的索引" class="headerlink" title="交换归档和首页的索引"></a>交换归档和首页的索引</h3><figure class="highlight yml"><figcaption><span>blog/source/_data/next.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">archive_dir:</span> <span class="string">/</span> <span class="comment"># archives</span></span><br><span class="line"><span class="attr">index_generator:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">&#x27;archives&#x27;</span></span><br></pre></td></tr></table></figure>
<h2 id="主题自带简单配置"><a href="#主题自带简单配置" class="headerlink" title="主题自带简单配置"></a>主题自带简单配置</h2><h3 id="头像设置"><a href="#头像设置" class="headerlink" title="头像设置"></a>头像设置</h3><p>创建文件夹存放图片</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">pwd</span> <span class="comment"># 确认一下现在是否在博客目录</span></span><br><span class="line"><span class="built_in">cd</span> <span class="built_in">source</span></span><br><span class="line">mkdir images</span><br></pre></td></tr></table></figure>

<p>把图片放置在blog/source/images目录下</p>
<figure class="highlight yml"><figcaption><span>blog/source/_data/next.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="string">url：/images/yourimage.jpg</span></span><br><span class="line"><span class="attr">rounded:</span> <span class="literal">true</span> <span class="comment"># 修改头像图片为圆形</span></span><br><span class="line"><span class="comment"># opacity # 控制头像透明度 0-1</span></span><br><span class="line"><span class="attr">rotated:</span> <span class="literal">false</span> <span class="comment"># 鼠标移至是否会旋转</span></span><br></pre></td></tr></table></figure>

<h3 id="打开代码块复制功能"><a href="#打开代码块复制功能" class="headerlink" title="打开代码块复制功能"></a>打开代码块复制功能</h3><figure class="highlight yml"><figcaption><span>blog/source/_data/next.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">copy_button:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>
<h3 id="关闭右下角back-to-top功能"><a href="#关闭右下角back-to-top功能" class="headerlink" title="关闭右下角back to top功能"></a>关闭右下角<code>back to top</code>功能</h3><figure class="highlight yml"><figcaption><span>blog/source/_data/next.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">back2top:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure>
<h3 id="网站开始时间"><a href="#网站开始时间" class="headerlink" title="网站开始时间"></a>网站开始时间</h3><figure class="highlight yml"><figcaption><span>blog/source/_data/next.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">footer:</span></span><br><span class="line">  <span class="attr">since:</span> <span class="number">2021</span></span><br></pre></td></tr></table></figure>
<h3 id="修改文章底部tags标识-gt-图标"><a href="#修改文章底部tags标识-gt-图标" class="headerlink" title="修改文章底部tags标识#-&gt;图标"></a>修改文章底部<code>tags</code>标识<code>#</code>-&gt;图标</h3><figure class="highlight yml"><figcaption><span>blog/source/_data/next.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">tag_icon:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>
<h3 id="增加字数统计-amp-时长估计"><a href="#增加字数统计-amp-时长估计" class="headerlink" title="增加字数统计 &amp; 时长估计"></a>增加字数统计 &amp; 时长估计</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-word-counter</span><br></pre></td></tr></table></figure>

<figure class="highlight yml"><figcaption><span>blog/source/_data/next.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">symbols_count_time:</span></span><br><span class="line">  <span class="attr">symbols:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">time:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">total_symbols:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">total_time:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure>


<h3 id="增加相关文章功能"><a href="#增加相关文章功能" class="headerlink" title="增加相关文章功能"></a>增加相关文章功能</h3><p>回到博客根目录</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-related-popular-posts --save</span><br></pre></td></tr></table></figure>


<figure class="highlight yml"><figcaption><span>next/_config.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">related_posts:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">title:</span> <span class="comment"># 默认为相关文章</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>Tips: 该功能以<code>tags</code>为参考</p>
<h3 id="关闭侧栏目录数字编号"><a href="#关闭侧栏目录数字编号" class="headerlink" title="关闭侧栏目录数字编号"></a>关闭侧栏目录数字编号</h3><figure class="highlight yml"><figcaption><span>blog/source/_data/next.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">toc:</span></span><br><span class="line">  <span class="attr">number:</span> <span class="literal">false</span>  <span class="comment"># 关闭目录中的数字编号</span></span><br></pre></td></tr></table></figure>
<h3 id="icon-替换"><a href="#icon-替换" class="headerlink" title="icon 替换"></a>icon 替换</h3><p>去 <a href="http://www.fontawesome.com.cn/faicons/">Font Awesome 官网</a> 找对应代码</p>
<h3 id="关闭动态效果"><a href="#关闭动态效果" class="headerlink" title="关闭动态效果"></a>关闭动态效果</h3><figure class="highlight yml"><figcaption><span>blog/source/_data/next.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">motion:</span></span><br><span class="line">  <span class="string">enable:false</span></span><br></pre></td></tr></table></figure>

<h1 id="搭建参考"><a href="#搭建参考" class="headerlink" title="搭建参考"></a>搭建参考</h1><p><a href="https://www.jianshu.com/p/f054333ac9e6">hexo的next主题个性化教程:打造炫酷网站</a><br><a href="http://theme-next.iissnan.com/">Next官方中文文档</a><br><a href="https://theme-next.js.org/">next官方文档</a></p>
<p><a href="https://guanqr.com/tech/website/hexo-theme-next-customization">Hexo-NexT 主题个性优化</a><br><a href="http://yearito.cn/posts/hexo-get-started.html">Hexo 搭建个人博客系列：基础建站篇</a></p>
]]></content>
      <categories>
        <category>配置</category>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux随笔</title>
    <url>/Linux%E9%9A%8F%E7%AC%94/</url>
    <content><![CDATA[<p>速览：</p>
<ul>
<li><p>命令行即shell</p>
</li>
<li><p>终端: 让用户访问shell</p>
</li>
<li><p>终端下鼠标选中/单击/双击可快速copy</p>
</li>
<li><p><code>rm</code> 用通配符删除文件之前最好使用 <code>ls</code> 命令查看对应文件</p>
</li>
<li><p>双引号<code>&quot;</code>“和单引号<code>&#39;</code>‘在shell中的意义不完全相同</p>
</li>
</ul>
<h1 id><a href="#" class="headerlink" title="$"></a>$</h1><p><code>$</code>在不加括号时为参数扩展，比如我的电脑中<code>$USER</code>代表的就是home，所有的可用参数可以由一行命令看到:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">printenv | less</span><br></pre></td></tr></table></figure>

<p>命令过多此处不进行展示。</p>
<p><code>$(命令)</code> 得到的是命令的输出结果，此时可以将其用作其他命令的参数</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> $(ls) <span class="comment"># 结果和 ls 一致</span></span><br><span class="line">ls -l $(<span class="built_in">which</span> ls)</span><br></pre></td></tr></table></figure>

<h1 id="引用类型-双引号-quot-quot-amp-单引号-39-39-amp-反斜线"><a href="#引用类型-双引号-quot-quot-amp-单引号-39-39-amp-反斜线" class="headerlink" title="引用类型: 双引号&quot;&quot; &amp; 单引号&#39;&#39; &amp; 反斜线\"></a>引用类型: 双引号<code>&quot;&quot;</code> &amp; 单引号<code>&#39;&#39;</code> &amp; 反斜线<code>\</code></h1><p>参数之间的分割是通过空格进行的，下面以 <code>cal</code> 命令为例看一下结果</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> $(cal)</span><br></pre></td></tr></table></figure>

<pre><code>三月 2021 日 一 二 三 四 五 六 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31
</code></pre>
<p>这里的结果是因为没有经过引用（或者转义）的空格会被当成分割符而不是参数的组成部分，不建议使用 <code>touch</code> 代替这里的 <code>echo</code>，当然，你也可以建个文件夹试试看 : )</p>
<p>利用单/双引号引用的参数会传递一个字符串，此时其中的空格是参数的组成部分，以<code>hello world</code>为例</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mkdir testfile</span><br><span class="line"><span class="built_in">cd</span> testfile</span><br><span class="line">touch hello world</span><br><span class="line">ll</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">total 0</span><br><span class="line">-rw-r--r--  1 home  staff     0B  5 17 11:52 hello</span><br><span class="line">-rw-r--r--  1 home  staff     0B  5 17 11:52 world</span><br></pre></td></tr></table></figure>

<p>该命令会创建两个文件：<code>hello</code> 和 <code>world </code>（Ps: 前两行仅为了 <code>ll</code> 命令的简洁，<code>ll</code> 是 <code>ls -lh</code> 的别名），现在 引用 &amp; 转义 空格让其包含在文件名中：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">touch <span class="string">&quot;hello world1&quot;</span></span><br><span class="line">touch <span class="string">&#x27;hello world2&#x27;</span></span><br><span class="line">touch hello\ world3</span><br><span class="line">ll</span><br></pre></td></tr></table></figure>

<figure class="highlight diff"><table><tr><td class="code"><pre><span class="line"><span class="addition">+ -rw-r--r--  1 home  staff     0B  5 17 11:56 hello world1</span></span><br><span class="line"><span class="addition">+ -rw-r--r--  1 home  staff     0B  5 17 11:56 hello world2</span></span><br><span class="line"><span class="addition">+ -rw-r--r--  1 home  staff     0B  5 17 11:56 hello world3</span></span><br></pre></td></tr></table></figure>

<p>以上三种方式都可以达到参数中包含空格的效果。</p>
<h2 id="关于引用下的禁止拓展"><a href="#关于引用下的禁止拓展" class="headerlink" title="关于引用下的禁止拓展"></a>关于引用下的禁止拓展</h2><p><code>&#39;</code> 和<code>&quot;</code> 在shell中有时并不相同：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="subst">$(cal)</span>&quot;</span></span><br></pre></td></tr></table></figure>

<pre><code>      三月 2021
日 一 二 三 四 五 六
    1  2  3  4  5  6
 7  8  9 10 11 12 13
14 15 16 17 18 19 20
21 22 23 24 25 26 27
28 29 30 31
</code></pre>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;$(cal)&#x27;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$(cal)</span><br></pre></td></tr></table></figure>

<p>某种意义上来说，单引号禁止的扩展类型比双引号多，另一个例子是 <code>\</code> 在单引号中将不具备特殊含义：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;\$&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;\$&#x27;</span></span><br></pre></td></tr></table></figure>

<pre><code>$
\$
</code></pre>
<p>更多的内容请参考<a href="https://www.gnu.org/software/bash/manual/html_node/Quoting.html">Bash quoting 手册</a>。</p>
<h1 id="history"><a href="#history" class="headerlink" title="history"></a>history</h1><p>假设现有历史命令总数为 <code>totalNumber</code><br><code>history [number]</code> 可以查看序号从 <code>number</code>到 <code>total_number</code> 的历史记录<br><code>history [-number]</code> 可以查看最后 <code>number</code> 个记录</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">history</span> 10</span><br></pre></td></tr></table></figure>



<h1 id="umask"><a href="#umask" class="headerlink" title="umask"></a>umask</h1><p><code>umask [掩码]</code>  和在使用 <code>chmod [增加权限]</code> 的实现原理完全一样，只是反了过来，二者在终端中都是<strong>8进制</strong>的表现方式，比如掩码 <code>002</code>，展开为2进制就是<code>000 000 010</code>，这代表掩盖其他用户组的写入权限。</p>
<p>文件似乎在创建时默认是没有可执行权限的，目录才有，所以掩码不需要任何值来去除文件的执行权限。</p>
]]></content>
      <categories>
        <category>book</category>
        <category>Linux命令行大全</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>M1踩坑配置简记</title>
    <url>/M1%E8%B8%A9%E5%9D%91%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<h2 id="桌面配置"><a href="#桌面配置" class="headerlink" title="桌面配置"></a>桌面配置</h2><p>程序坞延迟关闭<br><code>defaults write com.apple.Dock autohide-delay -float 0 &amp;&amp; killall Dock</code></p>
<p>恢复<br><code>defaults delete com.apple.Dock autohide-delay &amp;&amp; killall Dock</code></p>
<h2 id="将finder文件名中文改回英文"><a href="#将finder文件名中文改回英文" class="headerlink" title="将finder文件名中文改回英文"></a>将finder文件名中文改回英文</h2><p>重命名 or 删除 文件夹下的 <code>.localized</code> 即可</p>
<h2 id="Homebrew相关操作"><a href="#Homebrew相关操作" class="headerlink" title="Homebrew相关操作"></a>Homebrew相关操作</h2><p><a href="https://zhuanlan.zhihu.com/p/341831809">配置安装arm架构&amp;x86架构的homebrew</a></p>
<blockquote>
<p>安装图形化界面的app不需要安装cask，直接brew进行安装，卡了我两小时 :(</p>
</blockquote>
<h3 id="替换源"><a href="#替换源" class="headerlink" title="替换源"></a>替换源</h3><p><a href="https://mirrors.tuna.tsinghua.edu.cn/help/homebrew/">清华开源软件镜像站</a></p>
<h2 id="为Mac终端设置代理"><a href="#为Mac终端设置代理" class="headerlink" title="为Mac终端设置代理"></a>为Mac终端设置代理</h2><h2 id="更改Mac自带vim为brew安装的"><a href="#更改Mac自带vim为brew安装的" class="headerlink" title="更改Mac自带vim为brew安装的"></a>更改Mac自带vim为brew安装的</h2><p>以下两种方法皆可</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">path=(‘<span class="regexp">/opt/</span>homebrew/bin’ <span class="variable">$path</span>)</span><br><span class="line">export path</span><br></pre></td></tr></table></figure>

<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">alias vim=‘<span class="regexp">/opt/</span>homebrew<span class="regexp">/bin/</span>vim’</span><br></pre></td></tr></table></figure>

<h2 id="代理"><a href="#代理" class="headerlink" title="代理"></a>代理</h2><figure class="highlight jboss-cli"><table><tr><td class="code"><pre><span class="line"><span class="comment">## 设置代理</span></span><br><span class="line"><span class="comment"># 网站在http.和proxy之间即设置对该网站代理</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># http/https代理（全局）</span></span><br><span class="line">git config <span class="params">--global</span> http.proxy http:<span class="string">//127.0.0.1</span><span class="function">:1080</span></span><br><span class="line">git config <span class="params">--global</span> https.proxy https:<span class="string">//127.0.0.1</span><span class="function">:1080</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># socks5代理</span></span><br><span class="line">git config <span class="params">--global</span> http.https:<span class="string">//github.com.proxy</span> socks5:<span class="string">//127.0.0.1</span><span class="function">:1186</span></span><br><span class="line">git config <span class="params">--global</span> https.https:<span class="string">//github.com.proxy</span> socks5:<span class="string">//127.0.0.1</span><span class="function">:1186</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 取消代理</span></span><br><span class="line">git config <span class="params">--global</span> <span class="params">--unset</span> http.proxy</span><br><span class="line">git config <span class="params">--global</span> <span class="params">--unset</span> https.proxy</span><br><span class="line">git config <span class="params">--global</span> <span class="params">--unset</span> https.https:<span class="string">//github.com.proxy</span></span><br><span class="line">git config <span class="params">--global</span> <span class="params">--unset</span> http.https:<span class="string">//github.com.proxy</span></span><br></pre></td></tr></table></figure>
<p><a href="https://blog.csdn.net/ai2000ai/article/details/80826299">文章借鉴</a></p>
<h2 id="没挂代理-github本身速度太慢"><a href="#没挂代理-github本身速度太慢" class="headerlink" title="(没挂代理)github本身速度太慢"></a>(没挂代理)github本身速度太慢</h2><p>在.com后面加上后缀，例：<a href="https://github.com.cnpmjs.org/">https://github.com.cnpmjs.org</a></p>
<h2 id="安装python3-7以使用旧版本的包"><a href="#安装python3-7以使用旧版本的包" class="headerlink" title="安装python3.7以使用旧版本的包"></a>安装python3.7以使用旧版本的包</h2><blockquote>
<p>软件:<br>Homebrew<br>Pycharm</p>
</blockquote>
<p>使用Python的时候发现之前用的包有两个没有适配M1和最新版本的Python，于是想着退回到之前使用Python3.7，再利用Pycharm重新开虚拟环境在里面进行包的安装。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">brew install python@3.7</span><br></pre></td></tr></table></figure>
<p>等它安装完之后 <code>Copy</code> 下安装的位置，打开Pycharm，点击新建项目<br><img src="https://img-blog.csdnimg.cn/20210310200022508.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyNjg0MQ==,size_16,color_FFFFFF,t_70" alt="新建项目"><br>找到python3.7的位置，点击右下角创建项目<br><img src="https://img-blog.csdnimg.cn/20210310200608547.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyNjg0MQ==,size_16,color_FFFFFF,t_70" alt="创建环境"><br>进入pycharm后点击下方的终端，输入python3，此时可以发现版本已经是3.7了，exit()退出，然后就可以快乐的pip下载包了:)<br>    <img src="https://img-blog.csdnimg.cn/img_convert/8ff9939310240dddc85699f2fc8637de.png" alt="终端"></p>
<h2 id="在Pycharm配置Qt-Designer和PyUIC5"><a href="#在Pycharm配置Qt-Designer和PyUIC5" class="headerlink" title="在Pycharm配置Qt Designer和PyUIC5"></a>在Pycharm配置Qt Designer和PyUIC5</h2><h3 id="Qt-Designer"><a href="#Qt-Designer" class="headerlink" title="Qt Designer"></a>Qt Designer</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">brew install qt</span><br></pre></td></tr></table></figure>
<p>等待安装，copy安装路径</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">brew list qt | grep Designer.app</span><br></pre></td></tr></table></figure>
<p>我的路径是<code>/opt/homebrew/Cellar/qt/5.15.2/libexec/Designer.app</code>，根据命令行显示的结果往上滑把你自己的Designer.app文件夹 <code>copy</code> 下来，进入Pycharm， <code>cmd+,</code> 进入setting，工具-&gt;外部工具-&gt;点击+号<br><img src="https://i.loli.net/2021/03/11/H4m3D5ao986LVzr.png" alt="步骤"></p>
<p>如图填空<br><img src="https://img-blog.csdnimg.cn/20210311164857960.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyNjg0MQ==,size_16,color_FFFFFF,t_70" alt="步骤二"></p>
<p>最后点击确定，在左上角的工具中打开Qt designer<br><img src="https://img-blog.csdnimg.cn/img_convert/ea73210278de4cc9ed3aa51fcfa4e1a9.png" alt="步骤三"><br>配置成功<br><img src="https://img-blog.csdnimg.cn/20210311154301615.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyNjg0MQ==,size_16,color_FFFFFF,t_70" alt="结果"></p>
<h3 id="PyUIC5"><a href="#PyUIC5" class="headerlink" title="PyUIC5"></a>PyUIC5</h3><p>现在我们去找到PyUIC5并配置它</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">which</span> pyuic5</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 我的路径</span></span><br><span class="line">/opt/homebrew/bin/pyuic5</span><br></pre></td></tr></table></figure>
<p>copy它，重复之前的步骤添加外部工具，我的参数配置：</p>
<figure class="highlight elixir"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -x 生成可执行的.py文件，当然你也可以去掉这个，-o 指定生成的文件名</span></span><br><span class="line">-x <span class="variable">$FileName</span><span class="variable">$ </span>-o <span class="variable">$FileNameWithoutExtension</span><span class="variable">$.</span>py</span><br></pre></td></tr></table></figure>

<p><img src="https://img-blog.csdnimg.cn/20210311164936202.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyNjg0MQ==,size_16,color_FFFFFF,t_70" alt="配置"><br>现在就大功告成了，使用方法见下图<br><img src="https://img-blog.csdnimg.cn/20210311165249258.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQyNjg0MQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h2 id="sublime配置"><a href="#sublime配置" class="headerlink" title="sublime配置"></a>sublime配置</h2><p>以下配置皆需要先<code>cmd+shift+p</code>搜索并安装package control，等一段时间在新的输入框输入install，回车跳转，然后等待新的输入框出现再进行下一步操作<br><img src="https://i.loli.net/2021/03/13/FnzDbSohfux61VZ.png" alt="图片"></p>
<h3 id="虚拟环境"><a href="#虚拟环境" class="headerlink" title="虚拟环境"></a>虚拟环境</h3><p>搜索并下载 virtualenv，等待左下角安装完成后<br><img src="https://i.loli.net/2021/03/11/hxpY5SkgZ7cFL4J.png" alt="切换"><br>输入 <code>cmd+shift+p</code> ，键入并选择Virtualenv:Avtivate，在之后给出的选项中选择已有的环境</p>
<h3 id="汉化"><a href="#汉化" class="headerlink" title="汉化"></a>汉化</h3><p>搜索chinese，安装 Chinese Localization，不出意外的话应该是第一个，安装完成后会弹出类似readme的界面，可以通过该点判断是否安装。</p>
<p>接着点击上方菜单栏中的Help，切换至中文即可<br><img src="https://i.loli.net/2021/03/13/DdgXl5SvseCcwY6.png" alt="图片"></p>
<h3 id="设置Python快捷键"><a href="#设置Python快捷键" class="headerlink" title="设置Python快捷键"></a>设置Python快捷键</h3><p>搜索sublimeREPL并安装，从菜单栏找到它的配置，具体见下图<br><img src="https://i.loli.net/2021/03/13/T4X3CdwoOb9S28P.png" alt="图片"><br>自下至上为其路径，根据你打开的文件夹寻找即可<br><img src="https://i.loli.net/2021/03/13/EO9YoXyuhksMtRb.png" alt="图片"></p>
<p>进入Python文件夹后，打开<code>Main.sublime-menu</code>，将文件所有<code>cmd</code>后的Python改为你自己的Python路径，因为我的电脑是M1，然后有些包不适配，就再安装了Python3.7，以下是我修改的路径是<code>/Users/home/PycharmProjects/pythonProject1/venv/bin/python</code>，仅供参考，一般只需要把它改成Python3即可，这里想法的由来源自<a href="https://zhuanlan.zhihu.com/p/121798647">知乎</a>，他的文章很有帮助，下面的代码块将以该作者的进行展示</p>
<figure class="highlight prolog"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;cmd&quot;</span>: [<span class="string">&quot;python3&quot;</span>, <span class="string">&quot;-i&quot;</span>, <span class="string">&quot;-u&quot;</span>],</span><br><span class="line"><span class="string">&quot;cmd&quot;</span>: [<span class="string">&quot;python3&quot;</span>, <span class="string">&quot;-i&quot;</span>, <span class="string">&quot;-u&quot;</span>, <span class="string">&quot;-m&quot;</span>, <span class="string">&quot;pdb&quot;</span>, <span class="string">&quot;$file_basename&quot;</span>],</span><br><span class="line"><span class="string">&quot;cmd&quot;</span>: [<span class="string">&quot;python3&quot;</span>, <span class="string">&quot;-u&quot;</span>, <span class="string">&quot;$file_basename&quot;</span>],</span><br><span class="line"><span class="string">&quot;cmd&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;osx&quot;</span>: [<span class="string">&quot;python3&quot;</span>, <span class="string">&quot;-u&quot;</span>, <span class="string">&quot;$&#123;packages&#125;/SublimeREPL/config/Python/ipy_repl.py&quot;</span>],</span><br><span class="line">    <span class="string">&quot;linux&quot;</span>: [<span class="string">&quot;python3&quot;</span>, <span class="string">&quot;-u&quot;</span>, <span class="string">&quot;$&#123;packages&#125;/SublimeREPL/config/Python/ipy_repl.py&quot;</span>],</span><br><span class="line">    <span class="string">&quot;windows&quot;</span>: [<span class="string">&quot;python3&quot;</span>, <span class="string">&quot;-u&quot;</span>, <span class="string">&quot;$&#123;packages&#125;/SublimeREPL/config/Python/ipy_repl.py&quot;</span>]</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>

<p>接下来需要配置快捷键，知乎的<a href="https://zhuanlan.zhihu.com/p/121798647">这篇文章</a>)配置的快捷键是无法运行的，或许是我版本的原因，这里给出可以运行的示例</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">[</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;keys&quot;</span>: [</span><br><span class="line">      <span class="string">&quot;command+1&quot;</span></span><br><span class="line">    ],</span><br><span class="line">     <span class="attr">&quot;command&quot;</span>: <span class="string">&quot;repl_open&quot;</span>,</span><br><span class="line">     <span class="attr">&quot;caption&quot;</span>: <span class="string">&quot;Python - RUN current file&quot;</span>,</span><br><span class="line">     <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;repl_python_run&quot;</span>,</span><br><span class="line">     <span class="attr">&quot;mnemonic&quot;</span>: <span class="string">&quot;R&quot;</span>,</span><br><span class="line">     <span class="attr">&quot;args&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;subprocess&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;encoding&quot;</span>: <span class="string">&quot;utf8&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;cmd&quot;</span>: [<span class="string">&quot;python3&quot;</span>, <span class="string">&quot;-u&quot;</span>, <span class="string">&quot;$file_basename&quot;</span>],</span><br><span class="line">        <span class="attr">&quot;cwd&quot;</span>: <span class="string">&quot;$file_path&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;syntax&quot;</span>: <span class="string">&quot;Packages/Python/Python.tmLanguage&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;external_id&quot;</span>: <span class="string">&quot;python&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;extend_env&quot;</span>: &#123;<span class="attr">&quot;PYTHONIOENCODING&quot;</span>: <span class="string">&quot;utf-8&quot;</span>&#125;</span><br><span class="line">        &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;keys&quot;</span>: [</span><br><span class="line">      <span class="string">&quot;command+2&quot;</span></span><br><span class="line">    ],</span><br><span class="line">     <span class="attr">&quot;command&quot;</span>: <span class="string">&quot;repl_open&quot;</span>,</span><br><span class="line">     <span class="attr">&quot;caption&quot;</span>: <span class="string">&quot;Python - IPython&quot;</span>,</span><br><span class="line">     <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;repl_python_ipython&quot;</span>,</span><br><span class="line">     <span class="attr">&quot;mnemonic&quot;</span>: <span class="string">&quot;I&quot;</span>,</span><br><span class="line">     <span class="attr">&quot;args&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;subprocess&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;encoding&quot;</span>: <span class="string">&quot;utf8&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;autocomplete_server&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">&quot;cmd&quot;</span>: &#123;</span><br><span class="line">            <span class="attr">&quot;osx&quot;</span>: [<span class="string">&quot;python3&quot;</span>, <span class="string">&quot;-u&quot;</span>, <span class="string">&quot;$&#123;packages&#125;/SublimeREPL/config/Python/ipy_repl.py&quot;</span>],</span><br><span class="line">            <span class="attr">&quot;linux&quot;</span>: [<span class="string">&quot;python3&quot;</span>, <span class="string">&quot;-u&quot;</span>, <span class="string">&quot;$&#123;packages&#125;/SublimeREPL/config/Python/ipy_repl.py&quot;</span>],</span><br><span class="line">            <span class="attr">&quot;windows&quot;</span>: [<span class="string">&quot;python3&quot;</span>, <span class="string">&quot;-u&quot;</span>, <span class="string">&quot;$&#123;packages&#125;/SublimeREPL/config/Python/ipy_repl.py&quot;</span>]</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">&quot;cwd&quot;</span>: <span class="string">&quot;$file_path&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;syntax&quot;</span>: <span class="string">&quot;Packages/Python/Python.tmLanguage&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;external_id&quot;</span>: <span class="string">&quot;python&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;extend_env&quot;</span>: &#123;</span><br><span class="line">            <span class="attr">&quot;PYTHONIOENCODING&quot;</span>: <span class="string">&quot;utf-8&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;SUBLIMEREPL_EDITOR&quot;</span>: <span class="string">&quot;$editor&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">]</span><br></pre></td></tr></table></figure>
<p>如果not found报错，把python3路径改一下就可以</p>
<p>注意，此时快捷键command不能缩写为cmd，否则无法工作</p>
<p>现在使用快捷键运行后，会跳转到新界面，<del>不太习惯这种操作</del>，但是找了很久的配置发现无法修改，网上关于该点配置已经过时，不过可以通过分栏来提高浏览的舒适度Mac快捷键是<code>command+option+2</code>，此时呈现的效果还是很不错的<br><img src="https://i.loli.net/2021/03/13/cQ7W1Z6lgIRVDmA.png" alt="图片"></p>
<p>如果想把<code>command+b</code>（windows下是<code>ctrl+b</code>）改为同样的运行格式，你只需要在工具下新建编译系统即可，自定义名字<br><img src="https://i.loli.net/2021/03/13/jOwRVSvElKqThrg.png" alt="图片"></p>
<p>替换成下述代码，然后在工具下将编译系统切换成你刚定义的名字，使用快捷键<code>command+b</code>，此时运行效果同sublimeREPL，修改思路来自于<a href="https://stackoverflow.com/questions/19732006/how-to-run-python-code-on-sublimerepl/23722631#23722631">stackoverflow</a></p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;target&quot;</span>: <span class="string">&quot;run_existing_window_command&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;repl_python_run&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;file&quot;</span>: <span class="string">&quot;config/Python/Main.sublime-menu&quot;</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>Mac安装OCRmyPDF并配置依赖环境</title>
    <url>/Mac%E9%85%8D%E7%BD%AE%E5%AE%89%E8%A3%85OCRmyPDF%E7%8E%AF%E5%A2%83/</url>
    <content><![CDATA[<blockquote>
<p>工具: homebrew(x86)<br>  环境: conda虚拟环境 python=3.7<br>  tips: M1 芯片利用 homebrew 安装 miniconda 搭建 python3.7 的虚拟环境<br>        如果还装了 miniforge，注意在安装完后根据提示 init 一下你的 shell<br>        OCRmyPDF 似乎还未对3.8及以上的版本作适配<br>  官方文档: <a href="https://ocrmypdf.readthedocs.io/en/latest/installation.html">https://ocrmypdf.readthedocs.io/en/latest/installation.html</a></p>
</blockquote>
<h1 id="搭建虚拟环境-amp-安装-OCRmyPDF"><a href="#搭建虚拟环境-amp-安装-OCRmyPDF" class="headerlink" title="搭建虚拟环境 &amp; 安装 OCRmyPDF"></a>搭建虚拟环境 &amp; 安装 OCRmyPDF</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">brew install miniconda</span><br><span class="line">conda install python=3.7</span><br><span class="line">conda create -n py37 python=3.7</span><br><span class="line">conda activate py37</span><br><span class="line">conda info | grep env <span class="comment"># 看下目前环境</span></span><br><span class="line">pip install ocrmypdf</span><br><span class="line"><span class="comment"># 嫌麻烦的话直接brew install ocrmypdf</span></span><br><span class="line">ocrmypdf --version</span><br><span class="line"><span class="comment"># conda deactivate # 关闭</span></span><br></pre></td></tr></table></figure>


<h1 id="pip安装需要配置依赖的包"><a href="#pip安装需要配置依赖的包" class="headerlink" title="pip安装需要配置依赖的包"></a>pip安装需要配置依赖的包</h1><blockquote>
<p>官方提示:<br>As of ocrmypdf 7.2.1, the following versions are recommended:<br>Python 3.7 or 3.8<br>Ghostscript 9.23 or newer<br>qpdf 8.2.1<br>Tesseract 4.0.0 or newer<br>以下三个为可选项:<br>jbig2enc 0.29 or newer<br>pngquant 2.5 or newer<br>unpaper 6.1</p>
</blockquote>
<p>利用下面这个命令根据提示进行配置，</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ocrmypdf -l eng --clean-final input.pdf ocr.pdf</span><br></pre></td></tr></table></figure>

<blockquote>
<p>出现该指令代表以已经配置成功: InputFileError: File not found - input.pdf</p>
</blockquote>
<ol>
<li>安装 tesseract-lang<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">brew install tesseract-lang</span><br></pre></td></tr></table></figure></li>
</ol>
<ol start="2">
<li><p>安装 unpaper</p>
<blockquote>
<p>报错信息 The program ‘unpaper’ could not be executed or was not found on your system PATH. This program is required when you use the [‘–clean, –clean-final’] arguments. You could try omitting these arguments, or installthe package.</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">brew install unpaper</span><br></pre></td></tr></table></figure></li>
<li><p>安装 Ghostscript</p>
<blockquote>
<p>报错信息 Could not find program ‘gs’ on the PATH</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">brew install Ghostscript</span><br></pre></td></tr></table></figure></li>
</ol>
<p>此时再次运行测试的命令就不会报依赖包缺失的错误了，若有其他的需求，根据官方文档给出的提示用 <code>brew install</code> 安装即可</p>
]]></content>
      <categories>
        <category>环境配置</category>
      </categories>
      <tags>
        <tag>环境配置</tag>
      </tags>
  </entry>
  <entry>
    <title>nslookup入门命令详解</title>
    <url>/nslookup%E5%85%A5%E9%97%A8%E5%91%BD%E4%BB%A4%E8%AF%A6%E8%A7%A3/</url>
    <content><![CDATA[<blockquote>
<p>分享一下自己在使用计网: 自顶向下这本书课后习题时的一些经验</p>
<p>以下命令会在 Mac (Linux适用) 和 Windows 下同时运行，或许能帮你解决一些疑惑</p>
</blockquote>
<p>先做个简单的介绍吧，nslookup (全称 name server lookup) ，是一个在命令行界面下的网络工具，它有两种模式:交互 &amp; 非交互，进入<strong>交互</strong>模式在命令行界面直接输入<code>nslookup</code>按回车，非交互模式则是后面跟上查询的域名或者IP地址按回车。一般来说，非交互模式适用于简单的单次查询，若需要多次查询，则交互模式更加适合，例如计网第七版第二章的课后习题p19 (单纯举例子，没有书不影响接下来的阅读)，从根服务器进行迭代查询。</p>
<h2 id="RR-Resource-Records-–-来自WIKI百科以及计算机网络-自顶向下-7th"><a href="#RR-Resource-Records-–-来自WIKI百科以及计算机网络-自顶向下-7th" class="headerlink" title="RR (Resource Records)  – 来自WIKI百科以及计算机网络: 自顶向下(7th)"></a>RR (Resource Records)  – 来自WIKI百科以及计算机网络: 自顶向下(7th)</h2><p>资源记录（RR）是包含了下列字段的4元组：</p>
<p>(Name, Value, Type, TTL)</p>
<ul>
<li>主机记录（A记录）：<a href="https://tools.ietf.org/html/rfc1035">RFC 1035 </a>定义，A记录是用于名称解析的重要记录，提供标准的主机名到IP的地址映射。</li>
<li>别名记录（CNAME记录）: <a href="https://tools.ietf.org/html/rfc1035">RFC 1035 </a>定义，向查询的主机提供主机名对应的规范主机名。</li>
<li>域名服务器记录（NS记录） ：用来指定该域名由哪个DNS服务器来进行解析。 您注册域名时，总有默认的DNS服务器，每个注册的域名都是由一个DNS域名服务器来进行解析的，DNS服务器NS记录地址一般以以下的形式出现： ns1.domain.com、ns2.domain.com等。 简单的说，NS记录返回域中主机IP地址的权威DNS服务器的主机名。</li>
<li>邮件交换记录（MX记录）：返回别名为Name对应的邮件服务器的规范主机名。</li>
</ul>
<p>上述表述总感觉略显抽象，引用中科大郑老师的PPT内容以做补充</p>
<p>PS: 老师在b站上有分享<a href="https://www.bilibili.com/video/BV1JV411t7ow?from=search&seid=9714260354198477535">视频</a>，讲的非常的棒</p>
<img src="https://blogby.oss-cn-guangzhou.aliyuncs.com/20210331205605.png" alt="image-20210331205605245" style="zoom:35%;">



<p>这里仅介绍常见的一部分记录类型，如果在使用当中有其他的需求，可以到 <a href="https://asia.cloudns.net/wiki/article/9/">DNS Records</a>和<a href="https://en.wikipedia.org/wiki/List_of_DNS_record_types">List of DNS record types–WIKI</a>上查看，非常的全面。</p>
<h1 id="nslookup"><a href="#nslookup" class="headerlink" title="nslookup"></a>nslookup</h1><p>语法格式：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nslookup –option1 –option2 host-to-find dns-server</span><br></pre></td></tr></table></figure>

<h2 id="非交互模式"><a href="#非交互模式" class="headerlink" title="非交互模式"></a>非交互模式</h2><p>非交互模式下每次查询需要输入完整的命令和参数，以<code>baidu.com</code>为例</p>
<p>PS: nslookup 的查询在不指定参数的情况下，默认查询的类型为A。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nslookup baidu.com</span><br></pre></td></tr></table></figure>

<p>下图为运行效果，左侧是 Mac 端，右侧是 Windows，Linux 呈现效果基本与 Mac 一致。结果的介绍会放在下文的交互模式部分，之后的演示大部分会在交互模式的状态下进行。</p>
<p><img src="https://blogby.oss-cn-guangzhou.aliyuncs.com/20210401004754.png" alt="image-20210401004754713"></p>
<h2 id="交互模式"><a href="#交互模式" class="headerlink" title="交互模式"></a>交互模式</h2><p>在命令行下输入</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nslookup</span><br><span class="line">baidu.com</span><br></pre></td></tr></table></figure>

<p>可以看到进入交互模式后不再需要输入完整的命令便可以进行查询，并且可以连续的进行查询（友情提示<code>Ctrl+C</code>或者<code>Cmd+C</code>退出）</p>
<p>Mac 和 Windows 中命令的反馈结果有一点不同，不过并不影响结果</p>
<img src="https://blogby.oss-cn-guangzhou.aliyuncs.com/20210401000129.png" alt="交互模式" style="zoom:25%;">

<p>输出部分:</p>
<ul>
<li>最上面的 Server 和 Address 是该词查询的 DNS 服务器。可以自己指定，也可以默认，之后会说到。</li>
<li>默认情况下 DNS 服务器的端口为53</li>
<li>非权威应答（Non-authoritative answer）意味着answer来自于其他服务器的缓存，而不是权威的Baidu DNS服务器。缓存会根据 ttl（Time to Live）的值定时的进行更新。这个链接或许对你有所帮助: <a href="https://serverfault.com/questions/413124/dns-nslookup-what-is-the-meaning-of-the-non-authoritative-answer">What is the meaning of the non-authoritative-answer?</a></li>
<li>注意到，在对google.com进行查询时，Mac 返回的结果并没有非权威服务器提示，而Windows下的命令却提示了，这是因为 8.8.8.8 这个 DNS 服务器正是谷歌的权威名字服务器，可以使用<code>nslookup -ty=ptr 8.8.8.8</code>验证，ptr也是一种记录类型，可以用进行反向DNS解析(Reverse DNS Lookup)，拓展链接: <a href="https://www.liquidweb.com/kb/reverse-dns-lookup/">reverse-dns-lookup</a></li>
</ul>
<blockquote>
<p>If a hostname/IP address pair is cached in a DNS server and another query arrives to the DNS server for the same hostname, the DNS server can provide the desired IP address, even if it is not authoritative for the hostname. Because hosts and mappings between hostnames and IP addresses are by no means permanent, DNS servers discard cached information after a period of time (often set to two days).</p>
</blockquote>
<p>PS: 查询返回的多个结果均正确，不妨在你的浏览器用默认的80号端口试着访问一下，以第一个返回的百度网站为例，<code>39.156.69.79:80</code></p>
<h3 id="拓展-PTR-反向DNS解析（8-8-8-8）"><a href="#拓展-PTR-反向DNS解析（8-8-8-8）" class="headerlink" title="拓展: PTR 反向DNS解析（8.8.8.8）"></a>拓展: PTR 反向DNS解析（8.8.8.8）</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nslookup -ty=ptr 8.8.8.8</span><br></pre></td></tr></table></figure>

<img src="https://blogby.oss-cn-guangzhou.aliyuncs.com/20210331215837.png" alt="image-20210331215837527" style="zoom:33%;">

<h2 id="帮助界面"><a href="#帮助界面" class="headerlink" title="帮助界面"></a>帮助界面</h2><p>或许提前看看命令的帮助界面会非常的有帮助</p>
<p>Mac 下输入<code>man nslookup | less</code>，使用<strong>空格</strong>往下翻页，<strong>b</strong>往上翻页，<strong>q</strong>退出</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">man nslookup | less</span><br></pre></td></tr></table></figure>

<p>Windows下有两种，一种是直接输入<code>nslookup/?</code>，还有一种是在交互模式下输入<code>help</code>或者<code>?</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nslookup/?</span><br></pre></td></tr></table></figure>

<p>Windows 给出的命令为通用命令，Mac/Linux 可用于借鉴</p>
<p><img src="https://blogby.oss-cn-guangzhou.aliyuncs.com/20210401003853.png" alt="image-20210331223957426"></p>
<h3 id="关于-querytype-和-type-的小疑惑"><a href="#关于-querytype-和-type-的小疑惑" class="headerlink" title="关于 querytype 和 type 的小疑惑"></a>关于 querytype 和 type 的小疑惑</h3><p>在一开始上手nslookup时，看了一些CSDN的文章，其中有一篇混合了<code>-querytype</code> <code>-type</code> 使用 :)</p>
<p>当时看的我有些疑惑，直到我查看了命令的帮助手册：</p>
<p><img src="https://blogby.oss-cn-guangzhou.aliyuncs.com/20210401000147.png" alt="image-20210331225516049"></p>
<p><code>-querytype</code> 和 <code>-type</code> 的效用一致，可以简写为 <code>-q</code> 和 <code>-ty</code>，其在不指定类型的情况下默认查询类型为 <strong>A</strong></p>
<h2 id="设置查询类型"><a href="#设置查询类型" class="headerlink" title="设置查询类型"></a>设置查询类型</h2><ul>
<li>非交互模式: <code>nslookup -ty=类型 name</code></li>
<li>交互模式: <code>set ty=类型</code></li>
</ul>
<p>先来看看之前提到的 NS 类型</p>
<h3 id="NS（Nameserver-DNS-record）"><a href="#NS（Nameserver-DNS-record）" class="headerlink" title="NS（Nameserver DNS record）"></a>NS（Nameserver DNS record）</h3><p>查找权威名字服务器</p>
<blockquote>
<p>If Type=NS , then Name is a domain (such as foo.com ) and Value is the hostname of an authoritative DNS server that knows how to obtain the IP addresses for hosts in the domain.This record is used to route DNS queries further along in the query chain. As an example, ( foo.com , dns.foo.com , NS) is a Type NS record.</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nslookup</span><br><span class="line"><span class="built_in">set</span> ty=NS</span><br></pre></td></tr></table></figure>

<p><img src="https://blogby.oss-cn-guangzhou.aliyuncs.com/20210331231509.png" alt="image-20210331231509656"></p>
<p>PS: 交互模式下的 set 命令可以更改影响查找的状态信息，不仅用于记录类型的变更，使用<code>set all</code>可以查看常用选项的当前值以及当前默认的服务器和主机信息，注意，DNS 服务器不能通过 set 指定</p>
<p>接下来以<code>baidu.com</code>为出发点，来看看对应的权威名字服务器</p>
<p><img src="https://blogby.oss-cn-guangzhou.aliyuncs.com/20210331234432.png" alt="image-20210331234432441"></p>
<p>Q1：哪个才是baidu.com的权威DNS服务器？请用 “name, value” 格式描述一下 NS 记录的返回内容</p>
<p>所有问题答案会在文章末尾给出</p>
<h4 id="拓展-dig-命令"><a href="#拓展-dig-命令" class="headerlink" title="拓展: dig 命令"></a>拓展: dig 命令</h4><p>如果你的操作系统是 Mac/Linux，不妨尝试一下<code>dig baidu.com ns</code>，会对结果有个更直观的感触</p>
<p><img src="https://blogby.oss-cn-guangzhou.aliyuncs.com/20210401120243.png" alt="image-20210401120045187"></p>
<p>其中<strong>21599</strong>为 TTL，即 DNS 缓存刷新时间，单位为 s ，NS 就是这次查询的类型。</p>
<h3 id="A（查看-IP-地址）"><a href="#A（查看-IP-地址）" class="headerlink" title="A（查看 IP 地址）"></a>A（查看 IP 地址）</h3><blockquote>
<p>If Type=A , then Name is a hostname and Value is the IP address for the hostname. Thus, a Type A record provides the standard hostname-to-IP address mapping. As an example, ( relay1.bar.foo.com , 145.37.93.126, A) is a Type A record.</p>
</blockquote>
<p>用以下命令（交互模式下）指定<code>dns.baidu.com</code>对<code>baidu.com</code>执行 type=A 的查询来看看结果与最开始有什么不同</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">server dns.baidu.com</span><br><span class="line"><span class="built_in">set</span> ty=A</span><br><span class="line">baidu.com</span><br></pre></td></tr></table></figure>

<p><img src="https://blogby.oss-cn-guangzhou.aliyuncs.com/20210331235025.png" alt="image-20210331235025484"></p>
<p>发现了吗，此时并没有提示非权威应答（Non-authoritative answer），不妨思考一下以下两个问题</p>
<p>Q2：A 记录的内容是什么？用 “name, value” 格式回答其中之一</p>
<p>Q3：现在的这次查询和第一次有什么区别？</p>
<hr>
<p>更新：虚拟机过期了，故只用 Mac 的终端进行展示，不过命令其实是互通的。</p>
<h3 id="MX（Mail-eXchange-record）"><a href="#MX（Mail-eXchange-record）" class="headerlink" title="MX（Mail eXchange record）"></a>MX（Mail eXchange record）</h3><blockquote>
<p>A <strong>mail exchanger record</strong> (<strong>MX record</strong>) specifies the <a href="https://en.wikipedia.org/wiki/Mail_server">mail server</a> responsible for accepting <a href="https://en.wikipedia.org/wiki/Email">email</a> messages on behalf of a domain name. It is a <a href="https://en.wikipedia.org/wiki/Resource_record">resource record</a> in the <a href="https://en.wikipedia.org/wiki/Domain_Name_System">Domain Name System</a> (DNS). It is possible to configure several MX records, typically pointing to an array of mail servers for load balancing and redundancy.</p>
</blockquote>
<p>查找<code>host-to-find</code>域的邮件服务器，</p>
<p><img src="https://blogby.oss-cn-guangzhou.aliyuncs.com/20210517154903.png" alt="image-20210517154903130"></p>
<p>熟悉的 <code>SMTP（Simple Mail Transfer Protocol）</code> （Ps：smtp并非一定是邮件服务器名字的组成部分）。</p>
<h3 id="CNAME（Canonical-Name-record）"><a href="#CNAME（Canonical-Name-record）" class="headerlink" title="CNAME（Canonical Name record）"></a>CNAME（Canonical Name record）</h3><p>CNAME记录将当前 hostname 映射到另一个 hostname，相应的记录 (name, value) 中的 name 对应的是 value 的别名：</p>
<p><img src="https://blogby.oss-cn-guangzhou.aliyuncs.com/20210517155116.png" alt="image-20210517155116154"></p>
<h2 id="问题答案"><a href="#问题答案" class="headerlink" title="问题答案"></a>问题答案</h2><p>S1: 返回的 <code>ns2.baidu.com</code> <code>ns7.baidu.com</code> <code>dns.baidu.com</code> <code>ns4.baidu.com</code> <code>ns3.baidu.com</code>皆为 baidu.com 的权威 DNS 服务器。</p>
<p>以 dns.baidu.com 为例，NS 记录的内容: (baidu.com, dns.baidu.com)</p>
<p>S2: baidu.com的 ip 地址，(baidu.com, 220.181.38.148)</p>
<p>S3: 该次查询指定了 baidu.com 的权威DNS服务器</p>
<h2 id="推荐阅读链接"><a href="#推荐阅读链接" class="headerlink" title="推荐阅读链接"></a>推荐阅读链接</h2><p><a href="http://www.steves-internet-guide.com/using-nslookup/">nslookup 入门</a></p>
<p><a href="https://www.cloudns.net/blog/10-most-used-nslookup-commands/">十个常用命令</a></p>
<p><a href="https://www.ionos.com/digitalguide/server/tools/nslookup/">nslookup: Here’s how the useful DNS check works</a></p>
<p><a href="https://serverfault.com/questions/413124/dns-nslookup-what-is-the-meaning-of-the-non-authoritative-answer">what is meaning of non-authoritative answer</a></p>
<p><a href="https://www.liquidweb.com/kb/reverse-dns-lookup/">reverse-dns-lookup</a></p>
<h2 id="dig-拓展"><a href="#dig-拓展" class="headerlink" title="dig 拓展"></a>dig 拓展</h2><blockquote>
<p>相关介绍有空再做</p>
</blockquote>
<p><a href="https://www.hostinger.com/tutorials/how-to-use-the-dig-command-in-linux/">how-to-use-dig</a></p>
<p><a href="https://www.ibm.com/support/knowledgecenter/SSLTBW_2.1.0/com.ibm.zos.v2r1.halu101/digcommand.htm">dig 命令大全</a></p>
<p><a href="https://en.wikipedia.org/wiki/Domain_Name_System#Authoritative_name_server">域名系统-Wiki</a></p>
]]></content>
      <tags>
        <tag>计算机网络</tag>
        <tag>nslookup</tag>
      </tags>
  </entry>
  <entry>
    <title>数据结构与算法--线性表（数组&amp;链表）</title>
    <url>/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95-%E7%BA%BF%E6%80%A7%E8%A1%A8%EF%BC%88%E6%95%B0%E7%BB%84-%E9%93%BE%E8%A1%A8%EF%BC%89/</url>
    <content><![CDATA[<blockquote>
<p>关于各个数据结构的基本算法和复杂算法思路</p>
<p>文章中复杂算法题源主要来源于 天勤（考研机构） 的《2021数据结构高分笔记》，分类顺序排列，因其大部分在 LeetCode 中有对应，故附上题号以便参考</p>
<p>加了序号的注释是为了方便不同方法类似思路的引用</p>
</blockquote>
<p>[TOC]</p>
<h1 id="数组（顺序表）"><a href="#数组（顺序表）" class="headerlink" title="数组（顺序表）"></a>数组（顺序表）</h1><h2 id="基本操作"><a href="#基本操作" class="headerlink" title="基本操作"></a>基本操作</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 初始化数组为 0 */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">initZero</span><span class="params">(<span class="keyword">int</span> *nums, <span class="keyword">int</span> numsSize)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(i &lt; numsSize)</span><br><span class="line">        nums[i++] = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 交换数组下标 i，j 对应的值 */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">swap</span><span class="params">(<span class="keyword">int</span> *nums, <span class="keyword">int</span> i, <span class="keyword">int</span> j)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t = nums[i];</span><br><span class="line">    nums[i] = nums[j];</span><br><span class="line">    nums[j] = t;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 另一个等价的方法，不过调用时格式为 swap(&amp;nums[i], &amp;nums[j]) */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">swap</span><span class="params">(<span class="keyword">int</span> *ni, <span class="keyword">int</span> *nj)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t = *ni;</span><br><span class="line">    *ni = *nj;</span><br><span class="line">    *nj = t;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 返回关键字首次出现的位置，未找到返回 -1 */</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> *nums, <span class="keyword">int</span> val)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i, length;</span><br><span class="line">  length = <span class="keyword">sizeof</span>(nums) / <span class="keyword">sizeof</span>(<span class="keyword">int</span>);</span><br><span class="line">  </span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; length &amp;&amp; nums[i] != val; i++)</span><br><span class="line">        ;</span><br><span class="line">    <span class="keyword">if</span> (i == length)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">        <span class="keyword">return</span> i;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 倒转数组 */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">reverse</span><span class="params">(<span class="keyword">int</span> *nums, <span class="keyword">int</span> begin, <span class="keyword">int</span> end)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = begin;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(i &lt; end)&#123;</span><br><span class="line">        swap(&amp;nums[i++], &amp;nums[end--]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 返回数组中的最大值 */</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">maxNumber</span><span class="params">(<span class="keyword">int</span> *nums, <span class="keyword">int</span> numsSize)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i, max;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>, max = INT_MIN; i &lt; numsSize; i++)&#123;</span><br><span class="line">        <span class="keyword">if</span> (max &lt; nums[i])</span><br><span class="line">            max = nums[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> max;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 返回数组中最大值的下标 */</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">maxIndex</span><span class="params">(<span class="keyword">int</span> *nums, <span class="keyword">int</span> numsSize)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i, max, maxi;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>, max = INT_MIN; i &lt; numsSize; i++)&#123;</span><br><span class="line">        <span class="keyword">if</span> (max &lt; nums[i])&#123;</span><br><span class="line">            max = nums[i];</span><br><span class="line">            maxi = i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> maxi;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 对数组中所有数加 val */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">addVal</span><span class="params">(<span class="keyword">int</span> *nums, <span class="keyword">int</span> numsSize, <span class="keyword">int</span> val)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(i &lt; numsSize)</span><br><span class="line">        nums[i++] += val;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="从位置-i-插入一个数（假设数组长度足够）"><a href="#从位置-i-插入一个数（假设数组长度足够）" class="headerlink" title="从位置 i 插入一个数（假设数组长度足够）"></a>从位置 i 插入一个数（假设数组长度足够）</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">int</span> *nums, <span class="keyword">int</span> i, <span class="keyword">int</span> numsSize, <span class="keyword">int</span> data)</span></span>&#123;</span><br><span class="line">    <span class="comment">/* 下标从后到i，各向右移动一位，若从i开始向右移动，则需要保存下一个数的值，否则会因覆盖丢失 */</span></span><br><span class="line">    <span class="keyword">int</span> cur = numsSize; <span class="comment">/* numsSize为当前存储的数据长度 */</span></span><br><span class="line">    <span class="keyword">while</span>(cur-- &gt; i)</span><br><span class="line">    nums[cur + <span class="number">1</span>] = nums[cur];</span><br><span class="line">  nums[cur + <span class="number">1</span>] = data; <span class="comment">/* 此时cur = i-1，故需要+1在位置 i 处插入数据（当然，直接 nums[i] 也可） */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="循环右移-k-位"><a href="#循环右移-k-位" class="headerlink" title="循环右移 k 位"></a>循环右移 k 位</h2><h3 id="解法1-通过三次反转达到移动的效果"><a href="#解法1-通过三次反转达到移动的效果" class="headerlink" title="解法1: 通过三次反转达到移动的效果"></a>解法1: 通过三次反转达到移动的效果</h3><blockquote>
<p>对应于 LeetCode 189题</p>
<p>算法思路：有两个思路原理一致的方式</p>
<p>（方式一）先旋转前numsSize-k%numsSize，再旋转后k%numsSize个，最后整体旋转，可以达到循环右移k位的效果，即循环左移numsSize-k位</p>
<p>（方式二）先整体旋转，再旋转前k%numsSize位和后numsSize-k%numsSize位，可循环左移k位</p>
<p>注：取余可以跳过多余的移动</p>
</blockquote>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 方式一 */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">rotate</span><span class="params">(<span class="keyword">int</span>* nums, <span class="keyword">int</span> numsSize, <span class="keyword">int</span> k)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> r = k % numsSize;</span><br><span class="line">    </span><br><span class="line">    reverse(nums, <span class="number">0</span>, numsSize-r<span class="number">-1</span>); <span class="comment">/* reverse() 见基础操作 */</span></span><br><span class="line">    reverse(nums, numsSize-r, numsSize<span class="number">-1</span>);</span><br><span class="line">    reverse(nums, <span class="number">0</span>, numsSize<span class="number">-1</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 方式二 */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">rotate</span><span class="params">(<span class="keyword">int</span>* nums, <span class="keyword">int</span> numsSize, <span class="keyword">int</span> k)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> r = k % numsSize;</span><br><span class="line">    </span><br><span class="line">    reverse(nums, <span class="number">0</span>, numsSize<span class="number">-1</span>); <span class="comment">/* reverse() 见基础操作 */</span></span><br><span class="line">    reverse(nums, <span class="number">0</span>, r<span class="number">-1</span>);</span><br><span class="line">    reverse(nums, r, numsSize<span class="number">-1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="返回数组中前-k-个高频"><a href="#返回数组中前-k-个高频" class="headerlink" title="返回数组中前 k 个高频"></a>返回数组中前 k 个高频</h2><h3 id="解法1-暴力解法"><a href="#解法1-暴力解法" class="headerlink" title="解法1: 暴力解法"></a>解法1: 暴力解法</h3><blockquote>
<p>对应于 LeetCode 347题</p>
<p>算法思路：创建两个数组：数组 numsTimes 记录对应 nums 的频数，数组 frequent 记录前 k 个高频对应的值。（虽然代码不复杂，但其实算是暴力解法）</p>
<p>（最初想法：建立一个数组记录频数，一个链表记录出现过的数，最后根据链表查找，后来发现创建多个链表结构会报错，可能是平台原因，故改成下方代码 ）</p>
</blockquote>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">maxNumber</span><span class="params">(<span class="keyword">int</span> *nums, <span class="keyword">int</span> numsSize)</span></span>; <span class="comment">/* 返回数组中的最大值 */</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">maxIndex</span><span class="params">(<span class="keyword">int</span> *nums, <span class="keyword">int</span> numsSize)</span></span>; <span class="comment">/* 返回数组中最大值的下标 */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">initZero</span><span class="params">(<span class="keyword">int</span> *nums, <span class="keyword">int</span> numsSize)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 仅能处理数组元素全大于 0 的情况 */</span></span><br><span class="line"><span class="function"><span class="keyword">int</span>* <span class="title">topKFrequent_pos</span><span class="params">(<span class="keyword">int</span>* nums, <span class="keyword">int</span> numsSize, <span class="keyword">int</span> k)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i, cur, maxi;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> max = maxNumber(nums, numsSize);</span><br><span class="line">    <span class="keyword">int</span> numsTimes[max+<span class="number">1</span>]; </span><br><span class="line">    initZero(numsTimes, max+<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; numsSize; i++)&#123;</span><br><span class="line">        cur = nums[i];</span><br><span class="line">        ++numsTimes[cur]; <span class="comment">/* 记录频数 */</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> *frequent = (<span class="keyword">int</span> *)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">int</span>) * k); <span class="comment">/* 因为需返回数组，故需要malloc分配空间 */</span></span><br><span class="line">    i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(i &lt; k)&#123;</span><br><span class="line">        maxi = maxIndex(numsTimes, max+<span class="number">1</span>);</span><br><span class="line">        frequent[i++] = maxi;</span><br><span class="line">        numsTimes[maxi] = <span class="number">0</span>; <span class="comment">/* 将当前最高频数置为0 */</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> frequent;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 对于所有情况 */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">addVal</span><span class="params">(<span class="keyword">int</span> *nums, <span class="keyword">int</span> numsSize, <span class="keyword">int</span> val)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span>* <span class="title">topKFrequent</span><span class="params">(<span class="keyword">int</span>* nums, <span class="keyword">int</span> numsSize, <span class="keyword">int</span> k)</span></span>&#123;</span><br><span class="line">  <span class="comment">/* 思路同上，只是先对数组做个预处理，让其中的值必然大于0 */</span></span><br><span class="line">    <span class="keyword">int</span> i, cur, maxi;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> max = <span class="built_in">abs</span>(maxNumber(nums, numsSize)); <span class="comment">/* 取其绝对值是为了处理存在负数的情况 */</span></span><br><span class="line">    addVal(nums, numsSize, max);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">int</span> numsTimes[<span class="number">2</span> * max + <span class="number">1</span>]; <span class="comment">/* 2*max+1 是因为此时 nums 数组中最大的是 max+|max|，+1 是为了直接以其值作为索引，省去后续为了不越界的 -1 操作 */</span></span><br><span class="line">    initZero(numsTimes, <span class="number">2</span> * max + <span class="number">1</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; numsSize; i++)&#123;</span><br><span class="line">        cur = nums[i];</span><br><span class="line">        ++numsTimes[cur];</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">int</span> *frequent = (<span class="keyword">int</span> *)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">int</span>) * k);</span><br><span class="line">    i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(i &lt; k)&#123;</span><br><span class="line">        maxi = maxIndex(numsTimes, <span class="number">2</span>*max+<span class="number">1</span>);</span><br><span class="line">        frequent[i++] = maxi - max; <span class="comment">/* 需 -max， 对应于原 nums 中的值 */</span></span><br><span class="line">        numsTimes[maxi] = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> frequent;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="一个更简洁的表达方式（但会多-o-k-的时间）"><a href="#一个更简洁的表达方式（但会多-o-k-的时间）" class="headerlink" title="一个更简洁的表达方式（但会多 o(k) 的时间）"></a>一个更简洁的表达方式（但会多 o(k) 的时间）</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">maxNumber</span><span class="params">(<span class="keyword">int</span> *nums, <span class="keyword">int</span> numsSize)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">maxIndex</span><span class="params">(<span class="keyword">int</span> *nums, <span class="keyword">int</span> numsSize)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">initZero</span><span class="params">(<span class="keyword">int</span> *nums, <span class="keyword">int</span> numsSize)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span>* <span class="title">topKFrequent_pos</span><span class="params">(<span class="keyword">int</span>* nums, <span class="keyword">int</span> numsSize, <span class="keyword">int</span> k)</span></span>;</span><br><span class="line"></span><br><span class="line"> <span class="comment">/* 是上面方法的汇总 */</span></span><br><span class="line"><span class="function"><span class="keyword">int</span>* <span class="title">topKFrequent</span><span class="params">(<span class="keyword">int</span>* nums, <span class="keyword">int</span> numsSize, <span class="keyword">int</span> k)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> max = <span class="built_in">abs</span>(maxNumber(nums, numsSize));</span><br><span class="line">    addVal(nums, numsSize, max);</span><br><span class="line">    <span class="keyword">int</span> *frequent = topKFrequent_pos(nums, numsSize, k);</span><br><span class="line">    addVal(frequent, k, -max); <span class="comment">/* 该语句为多余时间来源 */</span></span><br><span class="line">    <span class="keyword">return</span> frequent;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h1 id="链表"><a href="#链表" class="headerlink" title="链表"></a>链表</h1><h2 id="节点定义"><a href="#节点定义" class="headerlink" title="节点定义"></a>节点定义</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 链表节点结构体定义 */</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Listnode</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> val;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Listnode</span> *<span class="title">next</span>;</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<h2 id="基本操作-1"><a href="#基本操作-1" class="headerlink" title="基本操作"></a>基本操作</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 判空 */</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">isempty</span><span class="params">(struct Listnode *node)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> node == <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 判断是否为尾指针，对于空指针返回 0 */</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">islast</span><span class="params">(struct Listnode *node)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!node &amp;&amp; node-&gt;next == <span class="literal">NULL</span>)</span><br><span class="line">      <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 返回关键字首次出现的节点指针，若未找到返回 NULL */</span></span><br><span class="line"><span class="function">struct Listnode *<span class="title">find</span><span class="params">(struct Listnode *head, <span class="keyword">int</span> val)</span></span>&#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Listnode</span> *<span class="title">ret</span> =</span> head;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span> (ret != <span class="literal">NULL</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span> (ret-&gt;val == val)</span><br><span class="line">            <span class="keyword">return</span> ret;</span><br><span class="line">        ret = ret-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 插入节点（头插法），可实现链表逆置 */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(struct Listnode *head, struct Listnode *node)</span></span>&#123;</span><br><span class="line">    node-&gt;next = head-&gt;next;</span><br><span class="line">    head-&gt;next = node;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 删除下一节点 */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">deleteNext</span><span class="params">(struct Listnode *node)</span></span>&#123;</span><br><span class="line">  <span class="class"><span class="keyword">struct</span> <span class="title">Listnode</span> *<span class="title">t</span> =</span> node-&gt;next;</span><br><span class="line">    node-&gt;next = t-&gt;next;</span><br><span class="line">    <span class="built_in">free</span>(t);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 删除当前节点（无法处理最后一个节点），删除成功返回1，否则（为最后一个节点）返回0 */</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">deleteCur</span><span class="params">(struct Listnode *cur)</span></span>&#123;</span><br><span class="line">  <span class="comment">/* 思路为用下一个节点覆盖当前节点，然后删除下一节点，达到删除当前节点的效果 */</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Listnode</span> *<span class="title">next</span> =</span> cur-&gt;next;</span><br><span class="line">    <span class="keyword">if</span> (!isempty(next))&#123;</span><br><span class="line">        cur-&gt;val = next-&gt;val;</span><br><span class="line">        cur-&gt;next = next-&gt;next;</span><br><span class="line">        <span class="built_in">free</span>(next);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="反转链表（无额外头结点，即判空的语句为-head-NULL）"><a href="#反转链表（无额外头结点，即判空的语句为-head-NULL）" class="headerlink" title="反转链表（无额外头结点，即判空的语句为 head == NULL）"></a>反转链表（无额外头结点，即判空的语句为 head == NULL）</h2><h3 id="解法1-前后双指针"><a href="#解法1-前后双指针" class="headerlink" title="解法1: 前后双指针"></a>解法1: 前后双指针</h3><blockquote>
<p>对应于 LeetCode 206 题</p>
<p>算法思路：利用前后双指针p，q实现节点之间的反转，p 初始为 head ，q 始终为 p-&gt;next，即指向需翻转的下一个节点，故还需要一个节点 t 保存 q-&gt;next，在通过 q-&gt;next = p 翻转链表后，令 q = t，p = q 以移动指针处理下一节点，当 q 为尾指针即 t 为 NULL 时代表完成反转（以 q == NULL 为结束条件更好，否则 t 需要提前初始化，而且因为 q 在反转后指向 t 所指，故依然正确）。</p>
<p>首个节点需要对 *head 单独处理，否则会导致局部循环，处理也很简单，在初始化用 q 保存了 head-next 后，令head-&gt;next = NULL。</p>
<p>在初始化前需要判断链表是否为空，若为空直接返回 head。</p>
</blockquote>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function">struct ListNode *<span class="title">reverseList</span><span class="params">(struct ListNode* head)</span></span>&#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">ListNode</span> *<span class="title">p</span>, *<span class="title">q</span>, *<span class="title">t</span>;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(head != <span class="literal">NULL</span>)&#123;</span><br><span class="line">        p = head;</span><br><span class="line">        q = p-&gt;next;</span><br><span class="line">    head-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">while</span>(q != <span class="literal">NULL</span>)&#123;</span><br><span class="line">            t = q-&gt;next;</span><br><span class="line">            q-&gt;next = p; <span class="comment">/* 1.这一步为反转步骤，其余均是为了两个指针能够向后移动 */</span></span><br><span class="line">            p = q;</span><br><span class="line">            q = t;</span><br><span class="line">        &#125;</span><br><span class="line">        head = p; <span class="comment">/* 2.仅为了只写一个 return，也可以在这里直接 return p; */</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> head;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h3 id="解法2：递归"><a href="#解法2：递归" class="headerlink" title="解法2：递归"></a>解法2：递归</h3><blockquote>
<p> 算法思路：假设链表有 n 个结点，链表可以分解为 1 个头结点和 n-1 个剩余结点两个部分，剩余结点组成的链表亦可继续分解，直到 1 个头结点和 0 个剩余结点，也即 head-&gt;next == NULL，这时便有了递归终止的条件，满足该条件时返回 head。</p>
<p> 现在根据递归的特性，倒退回 1 个头结点和 1 个剩余结点的情况，反转只有两个节点的链表仅需要头结点的指针，此时令 head-&gt;next-&gt;next = head（该步和解法1的注释1所在行的目的一样）, head-&gt;next = NULL 即可，这是基准情况。递归过程本身可以看成保存数据的栈，所以不需要像解法1那样额外记录下一个反转的结点，之后每次倒退其实都可以看成只有两个“结点”的链表，一个是头结点，一个是已经反转好的链表。</p>
<p> 现在最后的需求是返回新的头结点，即原来链表的尾结点，有三种方式（其实想法一致）：</p>
<ol>
<li>定义一个全局变量 *rhead ，rhead 在触发递归终止条件时记录当前所处结点，随后一直返回 rhead（因为 head 会随递归出栈而变化，故记录）。</li>
<li>和 1 思路一样，不过是在函数内定义变量，然后将递归的步骤在一个小函数中重写，该函数接受的参数为(head, &amp;rhead)，这里 rhead 的声明和上面不同，是指向<code>结点</code>类型的指针的指针。</li>
<li>递归在终止时返回的就是反转后的 head，故只需要记录该指针并令其始终为返回值即可（当前递归程序并不需要额外的返回值来帮助反转链表）</li>
</ol>
</blockquote>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 方式1 */</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">ListNode</span> *<span class="title">rhead</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="function">struct ListNode *<span class="title">reverseList</span><span class="params">(struct ListNode* head)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(head == <span class="literal">NULL</span> || head-&gt;next == <span class="literal">NULL</span>)&#123;</span><br><span class="line">        rhead = head;</span><br><span class="line">        <span class="keyword">return</span> rhead;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    reverseList(head-&gt;next);</span><br><span class="line">    head-&gt;next-&gt;next = head;</span><br><span class="line">    head-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">return</span> rhead;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 方式3 */</span></span><br><span class="line"><span class="function">struct ListNode *<span class="title">reverseList</span><span class="params">(struct ListNode* head)</span></span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (head == <span class="literal">NULL</span> || head-&gt;next == <span class="literal">NULL</span>)</span><br><span class="line">        <span class="keyword">return</span> head;</span><br><span class="line">    </span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Listnode</span> *<span class="title">rhead</span> =</span> reverseList(head-&gt;next);</span><br><span class="line">    head-&gt;next-&gt;next = head; <span class="comment">/* 反转 */</span></span><br><span class="line">    head-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">return</span> rhead;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="返回倒数第-k-个结点的值"><a href="#返回倒数第-k-个结点的值" class="headerlink" title="返回倒数第 k 个结点的值"></a>返回倒数第 k 个结点的值</h2><h3 id="解法1-快慢指针"><a href="#解法1-快慢指针" class="headerlink" title="解法1: 快慢指针"></a>解法1: 快慢指针</h3><blockquote>
<p>对应于 LeetCode 面试题 02.02.</p>
<p>算法思路：初始化两个指针 p 和 q，p 先逐个遍历结点，用 i 记录 p 遍历的结点个数，当 p 遍历了 k-1 个结点后，q 开始和 p 一起逐步遍历，当 q == NULL时， q 恰好指向链表的倒数第 k 个结点。</p>
</blockquote>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">kthToLast</span><span class="params">(struct ListNode *head, <span class="keyword">int</span> k)</span></span>&#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">ListNode</span> *<span class="title">p</span> =</span> head;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">ListNode</span> *<span class="title">q</span> =</span> head;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span> (p != <span class="literal">NULL</span>)&#123;</span><br><span class="line">        p = p-&gt;next;</span><br><span class="line">        <span class="keyword">if</span> (i &gt; k<span class="number">-1</span>) <span class="comment">/* k-1 是因为 k&gt;=1，而当 k==1时，q与p指向同一个结点（可以初始化 i=1，if(i &gt;k)） */</span></span><br><span class="line">            q = q-&gt;next;</span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">            ++i; <span class="comment">/* ++i 移到 if 语句前也可以，放在这里是因为当 i&gt;k 后就没有必要再对 i 进行 +1 操作了 */</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> q-&gt;val;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h3 id="解法2-递归"><a href="#解法2-递归" class="headerlink" title="解法2: 递归"></a>解法2: 递归</h3><blockquote>
<p>算法思路：初始化全局变量 i = 0，当递归至 NULL 时（若递归至尾结点，那么当 k == 1时还需额外判断，所以这里就改成 NULL），i++（或 i = 1），然后开始递归出栈，出栈时每次判断 i 是否等于 k，并令 i++，若等于，返回当前结点的值</p>
</blockquote>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">kthToLast</span><span class="params">(struct ListNode *head, <span class="keyword">int</span> k)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (head == <span class="literal">NULL</span>)&#123;</span><br><span class="line">    i++; <span class="comment">/* 在 LeetCode 中这里应改为i = 1（原因见 LeetCode 对全局变量的处理） */</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">int</span> ret = kthToLast(head-&gt;next, k);</span><br><span class="line">    <span class="keyword">if</span> (i++ == k)</span><br><span class="line">        <span class="keyword">return</span> head-&gt;val;</span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">        <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



]]></content>
      <categories>
        <category>数据结构与算法</category>
      </categories>
      <tags>
        <tag>线性表</tag>
      </tags>
  </entry>
  <entry>
    <title>Python 随笔&amp;项目</title>
    <url>/Python%E9%9A%8F%E7%AC%94%E5%92%8C%E9%A1%B9%E7%9B%AE/</url>
    <content><![CDATA[<blockquote>
<p>强烈建议在<code>Jupyter</code>中调试运行<br>  以下一个代码块为一个<code>Cell</code><br>  文章内容较多情况下建议<code>Ctrl+f</code>/<code>Command+f</code>查询跳转，或目录概览<br>  参考书籍 &amp; 资料:<br>《Python编程快速上手》<br>《Python基础教程(第三版)》<br>《Python标准库参考》</p>
</blockquote>
<h1 id="随笔"><a href="#随笔" class="headerlink" title="随笔"></a>随笔</h1><h2 id="字符串对齐格式的运用"><a href="#字符串对齐格式的运用" class="headerlink" title="字符串对齐格式的运用"></a>字符串对齐格式的运用</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 一个非常棒的想法</span></span><br><span class="line"><span class="comment"># 第一次 format() 以自定义长度</span></span><br><span class="line"></span><br><span class="line">width = <span class="number">35</span></span><br><span class="line">price_width = <span class="number">10</span></span><br><span class="line">item_width = width - price_width</span><br><span class="line">header_fmt = <span class="string">&#x27;&#123;&#123;:&#123;&#125;&#125;&#125;&#123;&#123;:&gt;&#123;&#125;&#125;&#125;&#x27;</span>.<span class="built_in">format</span>(item_width, price_width)</span><br><span class="line">fmt = <span class="string">&#x27;&#123;&#123;:&#123;&#125;&#125;&#125;&#123;&#123;:&gt;&#123;&#125;.2f&#125;&#125;&#x27;</span>.<span class="built_in">format</span>(item_width, price_width)</span><br><span class="line">print(<span class="string">&quot;在此可以发现上面多个&#123;&#125;的妙用，目的是实现自定义长度的功能\n&quot;</span>,</span><br><span class="line">      <span class="string">&quot;fmt =&quot;</span>,fmt)</span><br><span class="line">print(header_fmt.<span class="built_in">format</span>(<span class="string">&#x27;item&#x27;</span>, <span class="string">&#x27;price&#x27;</span>))</span><br><span class="line">print(<span class="string">&quot;-&quot;</span> * width)</span><br><span class="line">print(fmt.<span class="built_in">format</span>(<span class="string">&#x27;apple&#x27;</span>, <span class="number">2</span>))</span><br></pre></td></tr></table></figure>

<h2 id="dict-关于copy-amp-deepcopy"><a href="#dict-关于copy-amp-deepcopy" class="headerlink" title="dict 关于copy &amp; deepcopy"></a>dict 关于copy &amp; deepcopy</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 浅拷贝时，复制字典项，字典值仍指向原件`p</span></span><br><span class="line"><span class="comment"># 深拷贝全部复制</span></span><br><span class="line"><span class="keyword">from</span> copy <span class="keyword">import</span> deepcopy</span><br><span class="line"></span><br><span class="line">item = &#123;<span class="string">&#x27;a&#x27;</span>:<span class="number">1</span>, <span class="string">&#x27;b&#x27;</span>:[<span class="number">1</span>]&#125;</span><br><span class="line">item_c = item.copy()</span><br><span class="line">item_dc = deepcopy(item)</span><br><span class="line"></span><br><span class="line"><span class="comment"># is查看是否是同一个对象，用id()查看效果一样</span></span><br><span class="line"><span class="comment"># tips:尽量不将 is 用于不可变对象上</span></span><br><span class="line"><span class="comment"># 对于不可变的对象，即便是深拷贝也是指向同一个对象</span></span><br><span class="line">print(item[<span class="string">&#x27;a&#x27;</span>] <span class="keyword">is</span> item_c[<span class="string">&#x27;a&#x27;</span>]) </span><br><span class="line">print(item[<span class="string">&#x27;a&#x27;</span>] <span class="keyword">is</span> item_dc[<span class="string">&#x27;a&#x27;</span>])</span><br><span class="line">print(item[<span class="string">&#x27;b&#x27;</span>] <span class="keyword">is</span> item_dc[<span class="string">&#x27;b&#x27;</span>])</span><br><span class="line"></span><br><span class="line">print(<span class="built_in">id</span>(item[<span class="string">&#x27;a&#x27;</span>]) == <span class="built_in">id</span>(item_dc[<span class="string">&#x27;a&#x27;</span>]))</span><br></pre></td></tr></table></figure>
<blockquote>
<p>True<br>  True<br>  False<br>  True</p>
</blockquote>
<h2 id="正则表达式"><a href="#正则表达式" class="headerlink" title="正则表达式"></a>正则表达式</h2><h3 id="简单匹配一个密码，未对特殊字符的存在做判断"><a href="#简单匹配一个密码，未对特殊字符的存在做判断" class="headerlink" title="简单匹配一个密码，未对特殊字符的存在做判断"></a>简单匹配一个密码，未对特殊字符的存在做判断</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">password_check</span>(<span class="params">password</span>):</span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(password) &lt; <span class="number">8</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    strengthRegex = re.<span class="built_in">compile</span>(<span class="string">r&#x27;[a-zA-]+&#x27;</span>)   <span class="comment"># 至少有一个字母</span></span><br><span class="line">    <span class="keyword">if</span> strengthRegex.search(password) == <span class="literal">None</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    strengthRegex = re.<span class="built_in">compile</span>(<span class="string">r&#x27;\d+&#x27;</span>)         <span class="comment"># 至少有一个数字</span></span><br><span class="line">    <span class="keyword">if</span> strengthRegex.search(password) == <span class="literal">None</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    </span><br><span class="line">print(password_check(<span class="string">&#x27;avsa1&#x27;</span>))</span><br><span class="line">print(password_check(<span class="string">&#x27;sadaskjdh1&#x27;</span>))</span><br><span class="line">print(password_check(<span class="string">&#x27;sadaskjdh1好&#x27;</span>))</span><br></pre></td></tr></table></figure>
<blockquote>
<p>False<br>  True<br>  True</p>
</blockquote>
<h3 id="可不捕获当前括号的内容"><a href="#可不捕获当前括号的内容" class="headerlink" title="?: 可不捕获当前括号的内容"></a>?: 可不捕获当前括号的内容</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">## 正则表达式 ?: 可不捕获当前括号的内容</span></span><br><span class="line">regex1 = re.<span class="built_in">compile</span>(<span class="string">r&#x27;(Chapter)[ ]?([1-9][0-9]&#123;0,1&#125;)&#x27;</span>)</span><br><span class="line">regex2 = re.<span class="built_in">compile</span>(<span class="string">r&#x27;(?:Chapter)[ ]?([1-9][0-9]&#123;0,1&#125;)&#x27;</span>)</span><br><span class="line">print(regex1.search(<span class="string">&#x27;Chapter 12&#x27;</span>)[<span class="number">1</span>])</span><br><span class="line">print(regex2.search(<span class="string">&#x27;Chapter 12&#x27;</span>)[<span class="number">1</span>]) <span class="comment"># 不捕获 Chapter</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>Chapter<br>  12</p>
</blockquote>
<h3 id="匹配对象和编组"><a href="#匹配对象和编组" class="headerlink" title="匹配对象和编组"></a>匹配对象和编组</h3><blockquote>
<p>在模块re中，查找与模式匹配的子串的函数都在找到时返回MatchObject对象。这种对象包 含与模式匹配的子串的信息，还包含模式的哪部分与子串的哪部分匹配的信息。这些子串部分称 为编组（group）。</p>
<p>编组就是放在圆括号内的子模式，它们是根据左边的括号数编号的，其中编组0指的是整个模式。</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 下面分组[1]为第一个括号（最左侧的括号）</span></span><br><span class="line">a = re.<span class="built_in">compile</span>(<span class="string">&#x27;((\d)+.)(\d)*&#x27;</span>)</span><br><span class="line">print(a.search(<span class="string">&#x27;1123.22&#x27;</span>)[<span class="number">3</span>])</span><br><span class="line">a.search(<span class="string">&#x27;1123.22&#x27;</span>)[<span class="number">3</span>]</span><br></pre></td></tr></table></figure>
<blockquote>
<p>‘2’</p>
</blockquote>
<h2 id="引发异常"><a href="#引发异常" class="headerlink" title="引发异常"></a>引发异常</h2><p><code>raise Exception()/NameError()/TypeError()/ValueError()...</code>可控制程序引发异常，以下是一段示例</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">number = <span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line"><span class="keyword">if</span> number &lt; <span class="number">2</span>:</span><br><span class="line">  <span class="keyword">raise</span> Exception(<span class="string">&#x27;Number should be greater than 2&#x27;</span>)</span><br><span class="line">print(number + <span class="number">1</span>)</span><br></pre></td></tr></table></figure>
<blockquote>
<p>-1<br>    ———————————————————-<br>    Exception                Traceback (most recent call last)<br>    <ipython-input-78-b9dd2aaf2f3d> in <module><br>      1 number = int(input())<br>      2 if number &lt; 0:<br>    —-&gt; 3   raise Exception(‘Number should be greater than 2’)<br>      4 print(number + 1)</module></ipython-input-78-b9dd2aaf2f3d></p>
</blockquote>
<p>  Exception: Number should be greater than 2</p>
<h2 id="断言assert"><a href="#断言assert" class="headerlink" title="断言assert"></a>断言assert</h2><p>其运行机制与<code>if [not true]: raise Exception()</code>很像，引发AssertionError</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">always_error</span>():</span></span><br><span class="line">  <span class="keyword">assert</span> <span class="literal">False</span>, <span class="string">&#x27;This assertion will be always triggered&#x27;</span></span><br><span class="line"></span><br><span class="line">always_error()</span><br></pre></td></tr></table></figure>
<h2 id="sys-argv"><a href="#sys-argv" class="headerlink" title="sys.argv"></a>sys.argv</h2><p>返回的参数与命令行运行文件时文件名及其之后的参数一致</p>
<figure class="highlight python"><figcaption><span>get_argv.py</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line">print(sys.argv)</span><br></pre></td></tr></table></figure>
<blockquote>
<p>命令行下运行</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">python3 get_argv.py first second third,fourth</span><br></pre></td></tr></table></figure>

<blockquote>
<p>[‘get_argv.py’, ‘first’, ‘second’, ‘third,fourth’]</p>
</blockquote>
<p>可以看到第一个参数为文件名，之后的参数以<code>空格</code>分割，而非<code>,</code></p>
<h2 id="通过带星号的参数优雅的处理参数过多"><a href="#通过带星号的参数优雅的处理参数过多" class="headerlink" title="通过带星号的参数优雅的处理参数过多"></a>通过带星号的参数优雅的处理参数过多</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">add</span>(<span class="params">x,y,*others</span>):</span></span><br><span class="line">  <span class="keyword">if</span> others:</span><br><span class="line">    print(<span class="string">&#x27;输入的参数过多，只对前两个进行计算&#x27;</span>)</span><br><span class="line">  <span class="keyword">return</span> x+y</span><br><span class="line"></span><br><span class="line">print(add(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>))</span><br></pre></td></tr></table></figure>
<blockquote>
<p>输入的参数过多，只对前两个进行计算<br>    3</p>
</blockquote>
<h2 id="查看作用域"><a href="#查看作用域" class="headerlink" title="查看作用域"></a>查看作用域</h2><p>vars() &amp; locals() 皆可查看当前作用域<br>但注意，在函数内进行修改似乎并不能改变当时局部变量的值</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test</span>():</span></span><br><span class="line">  b = <span class="number">2</span></span><br><span class="line">  print(<span class="built_in">vars</span>())</span><br><span class="line">  <span class="built_in">vars</span>()[<span class="string">&#x27;b&#x27;</span>] = <span class="number">3</span></span><br><span class="line">  <span class="built_in">locals</span>()[<span class="string">&#x27;b&#x27;</span>] = <span class="number">3</span></span><br><span class="line">  print(b)</span><br><span class="line"></span><br><span class="line">test()</span><br></pre></td></tr></table></figure>
<blockquote>
<p>{‘b’: 2}<br>    2</p>
</blockquote>
<p>Tips: globals() 可查看全局作用域，并可以在函数内修改，在函数内使用<code>global</code>关联全局变量时，对其做的操作会影响到全局变量</p>
<h2 id="关于-iterable对象"><a href="#关于-iterable对象" class="headerlink" title="关于 iterable对象"></a>关于 iterable对象</h2><blockquote>
<p>能一次返回其中一个成员的对象<br>检测一个对象是否是iterable 的唯一可信赖的方法是调用 iter(obj)</p>
</blockquote>
<h2 id="map-amp-filter-amp-reduce"><a href="#map-amp-filter-amp-reduce" class="headerlink" title="map() &amp; filter() &amp; reduce()"></a>map() &amp; filter() &amp; reduce()</h2><p>map() 和 filter() 基本都可通过列表推导 (List Comprehension) 替代实现<br>引用摘自<code>Python标准库参考</code>，务必先有iterable概念再去理解，或者跳过看后面</p>
<h3 id="map"><a href="#map" class="headerlink" title="map()"></a>map()</h3><blockquote>
<p>map(function, iterable, …)<br>返回一个将 function 应用于 iterable 中每一项并输出其结果的迭代器。如果传入了额外的 iterable 参数，function 必须接受相同个数的实参并被应用于从所有可迭代对象中并行获取的项。当有多个可迭代对象时，最短的可迭代对象耗尽则整个迭代就将结束。</p>
</blockquote>
<p>以列表为例，翻译一下就是对list对象中的每个元素调用function，最终返回一个iterable对象，可以通过list()将其变为list对象</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">list</span>(<span class="built_in">map</span>(<span class="built_in">str</span>, <span class="built_in">range</span>(<span class="number">10</span>))) <span class="comment"># 等价于[str(i) for i in range(10)]</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>[‘0’, ‘1’, ‘2’, ‘3’, ‘4’, ‘5’, ‘6’, ‘7’, ‘8’, ‘9’]</p>
</blockquote>
<h3 id="filter"><a href="#filter" class="headerlink" title="filter()"></a>filter()</h3><blockquote>
<p>filter(function, iterable)<br>用 iterable 中函数 function 返回真的那些元素，构建一个新的迭代器。iterable 可以是一个序列，一个支 持迭代的容器，或一个迭代器。如果 function 是 None ，则会假设它是一个身份函数，即 iterable 中所有返回假的元素会被移除。</p>
</blockquote>
<p>filter() 如其名，当成对iterable对象对过滤器理解即可，对对象中的每个元素调用function函数，返回其中结果为真的那些元素，若function=None，则过滤掉本身是假的元素</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">list</span>(<span class="built_in">filter</span>(<span class="literal">None</span>,[<span class="number">1</span>,<span class="number">2</span>,<span class="string">&#x27;&#x27;</span>,<span class="number">0</span>,[],&#123;&#125;,<span class="number">3</span>,<span class="number">4</span>])) <span class="comment"># 等价于[i for i in [1,2,&#x27;&#x27;,0,[],&#123;&#125;,3,4] if i]</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>[1,2,3,4]</p>
</blockquote>
<h3 id="reduce"><a href="#reduce" class="headerlink" title="reduce()"></a>reduce()</h3><blockquote>
<p>reduce(function, iterable[, initializer ])<br>将两个参数的 function 从左至右积累地应用到 iterable 的条目，以便将该可迭代对象缩减为单一的值。例如，reduce(lambda x, y: x+y, [1, 2, 3, 4, 5]) 是计算 ((((1+2)+3)+4)+5) 的值。左边的参数 x 是积累值而右边的参数 y 则是来自 iterable 的更新值</p>
</blockquote>
<p>求多个集合的并集时可使用 reduce()，需要先从functools中导入</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> functools <span class="keyword">import</span> reduce</span><br><span class="line">my_sets = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10</span>):</span><br><span class="line">    my_sets.append(<span class="built_in">set</span>(<span class="built_in">range</span>(i, i+<span class="number">5</span>)))</span><br><span class="line"></span><br><span class="line">union_set = reduce(<span class="built_in">set</span>.union, my_sets)</span><br><span class="line">print(union_set)</span><br></pre></td></tr></table></figure>

<blockquote>
<p>{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13}</p>
</blockquote>
<h4 id="lambda-匿名内联函数"><a href="#lambda-匿名内联函数" class="headerlink" title="lambda 匿名内联函数"></a>lambda 匿名内联函数</h4><p>语法为: lambda [参数]: [表达式]</p>
<p>可与map(), filter(), reduce() 结合使用</p>
<h2 id="获取函数运行时间和内存使用情况"><a href="#获取函数运行时间和内存使用情况" class="headerlink" title="获取函数运行时间和内存使用情况"></a>获取函数运行时间和内存使用情况</h2><p>内存的查看需要安装<code>memory_profiler</code>包，pip install 即可</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> memory_profiler</span><br><span class="line">print(<span class="string">&#x27;Memory (Before) : &#123;&#125;Mb&#x27;</span>.<span class="built_in">format</span>(memory_profiler.memory_usage()))</span><br><span class="line">t1 = time.clock()</span><br><span class="line">function()</span><br><span class="line">t2 = time.clock()</span><br><span class="line">print(<span class="string">&#x27;Memory (After) : &#123;&#125;Mb&#x27;</span>.<span class="built_in">format</span>(memory_profiler.memory_usage()))</span><br><span class="line">print(<span class="string">&#x27;took &#123;&#125; Seconds&#x27;</span>.<span class="built_in">format</span>(t2-t1))</span><br></pre></td></tr></table></figure>

<h2 id="生成器-generator"><a href="#生成器-generator" class="headerlink" title="生成器 generator"></a>生成器 generator</h2><blockquote>
<p>The value of a yield expression is None, until the program calls the method send(value).<br>yield表达式返回 None，直到使用 send(value) 方法</p>
</blockquote>
<p><strong>先看看生成器和函数在运行时的浅显差异</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">my_gen</span>(<span class="params">i</span>):</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        value = (<span class="keyword">yield</span> i + <span class="number">1</span>)</span><br><span class="line">        i += <span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> value:</span><br><span class="line">            print(<span class="string">&quot;调用next()时 yield 返回值为 None&quot;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">f&quot;调用send(value) yield 返回值为 <span class="subst">&#123;value&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line">            </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">my_list</span>(<span class="params">i</span>):</span></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">list</span>(<span class="built_in">range</span>(i))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 为下面两条语句设置断点，并进行调试，选择步入</span></span><br><span class="line">a = my_gen(<span class="number">1</span>) </span><br><span class="line">b = my_list(<span class="number">1</span>) <span class="comment"># 你会发现只有my_list()函数在一开始被调用</span></span><br></pre></td></tr></table></figure>

<p>在以下调用 next() 和 send() 的<strong>所有位置</strong>设置<strong>断点</strong>，选择<strong>步入</strong>。下面的序号解释<strong>对应</strong>代码块中注释的语句：</p>
<ol>
<li>可以发现并没有触发函数的if语句，在执行 yield 语句后 函数 便返回值了，注意，此时 yield 表达式并没有返回值给 value，在下一次运行时才会返回</li>
<li>此时会续上之前 yield ，像是被挂起的进程又被 next() 唤醒，并给 value 赋值，从 i += 1 往下运行，经过循环回到开头，然后遇到 yield 再次被挂起</li>
<li>注意，此时并没有从头开始，而是像唤醒进程一样继续，但是，你会发现生成器内部 yield 返回给 value 的值变成了10，这个值刚好是 send() 从外部发送的值，但你在一开始其实并没有执行 yield，若你有些困惑，不妨看看 1 注释</li>
</ol>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 注意在同一行使用多个next时可能会发生一开始没有想到的结果</span></span><br><span class="line"><span class="comment"># print(next(a),next(a))</span></span><br><span class="line">print(<span class="string">&quot;第一次 next() 运行结果:&quot;</span>)</span><br><span class="line">print(<span class="string">f&quot;<span class="subst">&#123;<span class="built_in">next</span>(a)&#125;</span>\n&quot;</span>) <span class="comment"># 1</span></span><br><span class="line"></span><br><span class="line">print(<span class="string">&quot;第二次 next() 运行结果:&quot;</span>)</span><br><span class="line">print(<span class="string">f&quot;<span class="subst">&#123;<span class="built_in">next</span>(a)&#125;</span>\n&quot;</span>) <span class="comment"># 2</span></span><br><span class="line"></span><br><span class="line">value = <span class="number">10</span></span><br><span class="line">return_value = a.send(value) <span class="comment"># 3</span></span><br><span class="line">print(return_value) <span class="comment"># 返回的值为 i+1 (i==3)</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>第一次 next() 运行结果:<br>2<br>第二次 next() 运行结果:<br>调用next()时 yield 返回值为 None<br>3<br>调用send(value) yield 返回值为 10<br>4</p>
</blockquote>
<h3 id="相关链接-amp-图片"><a href="#相关链接-amp-图片" class="headerlink" title="相关链接&amp;图片:"></a>相关链接&amp;图片:</h3><p><a href="https://stackabuse.com/python-generators/">Python Generators</a><br><a href="https://www.python.org/dev/peps/pep-0342/">PEP342</a><br><img src="https://blogby.oss-cn-guangzhou.aliyuncs.com/20210414230032.png" alt="Python基础教程"></p>
<h2 id="双端队列"><a href="#双端队列" class="headerlink" title="双端队列"></a>双端队列</h2><p>队列长度较短的情况下，使用 appendleft(x) 和 insert(0, x) 在队首插入元素的效率差不多，较长的情况下 appendleft 略优于 insert，测试用例：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line">LENGTH = <span class="number">10000000</span></span><br><span class="line"></span><br><span class="line">a = deque([])</span><br><span class="line">before = time.time()</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(LENGTH):</span><br><span class="line">    a.insert(<span class="number">0</span>,i)</span><br><span class="line">after = time.time()</span><br><span class="line">print(<span class="string">f&quot;[INSERT]: <span class="subst">&#123;after - before&#125;</span> s&quot;</span>)</span><br><span class="line"></span><br><span class="line">a = deque([])</span><br><span class="line">before = time.time()</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(LENGTH):</span><br><span class="line">    a.appendleft(i)</span><br><span class="line">after = time.time()</span><br><span class="line">print(<span class="string">f&quot;【APPENDLEFT】: <span class="subst">&#123;after - before&#125;</span> s&quot;</span>)</span><br></pre></td></tr></table></figure>

<blockquote>
<p>【INSERT】: 1.208339929580688 s</p>
<p>【APPENDLEFT】0.8946981430053711s </p>
</blockquote>
<h3 id="对比队列（即列表）操作"><a href="#对比队列（即列表）操作" class="headerlink" title="对比队列（即列表）操作"></a>对比队列（即列表）操作</h3><p>注意，列表的 insert() 操作每次将会引起O(n)的内存移动，而双端队列对其进行了优化。在队首插入大量元素时，列表所消耗的时间远远大于双端队列，测试用例：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line">LENGTH = <span class="number">100000</span> <span class="comment"># 不妨加多一个0看看更大的差别</span></span><br><span class="line"><span class="comment"># 双端队列</span></span><br><span class="line">a = deque([])</span><br><span class="line">before = time.time()</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(LENGTH):</span><br><span class="line">    a.insert(<span class="number">0</span>,i)</span><br><span class="line">after = time.time()</span><br><span class="line">print(<span class="string">f&quot;【双端队列】: <span class="subst">&#123;after - before&#125;</span> s&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 队列（列表）</span></span><br><span class="line">a = []</span><br><span class="line">before = time.time()</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(LENGTH):</span><br><span class="line">    a.insert(<span class="number">0</span>,i)</span><br><span class="line">after = time.time()</span><br><span class="line">print(<span class="string">f&quot;【队列】: <span class="subst">&#123;after - before&#125;</span> s&quot;</span>)</span><br></pre></td></tr></table></figure>

<blockquote>
<p>【双端队列】: 0.01209402084350586 s</p>
<p>【队列】: 1.6215879917144775 s </p>
</blockquote>
<h2 id="如果进程使用了局部变量，则可能导致另一个进程卡死"><a href="#如果进程使用了局部变量，则可能导致另一个进程卡死" class="headerlink" title="如果进程使用了局部变量，则可能导致另一个进程卡死"></a>如果进程使用了局部变量，则可能导致另一个进程卡死</h2><p>我在PyQt5中使用多进程并行操作时，因为调用了self.func()，致使UI界面卡死，而当我把该调用移到外部然后传递参数后，一切如预期进行。</p>
<h2 id="导入-Python-包"><a href="#导入-Python-包" class="headerlink" title="导入 Python 包"></a>导入 Python 包</h2><p>导入包不代表导入了包中的函数，仅代表导入__init__.py中定义的函数，</p>
<h2 id="利用-try-减少多余操作"><a href="#利用-try-减少多余操作" class="headerlink" title="利用 try 减少多余操作"></a>利用 try 减少多余操作</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="string">&#x27;Tom&#x27;</span> <span class="keyword">in</span> person:</span><br><span class="line">    Age = person[<span class="string">&#x27;Tom&#x27;</span>]</span><br></pre></td></tr></table></figure>
<p>上面这段代码查找了两次<code>Tom</code>键，可以利用try的特性假设<code>Tom</code>存在直接赋值</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    Age = person[<span class="string">&#x27;Tom&#x27;</span>]</span><br><span class="line">expert KeyError: <span class="keyword">pass</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="循环遍历嵌套字典的坑"><a href="#循环遍历嵌套字典的坑" class="headerlink" title="循环遍历嵌套字典的坑"></a>循环遍历嵌套字典的坑</h2><p>当字典是多重嵌套时，比如request请求翻译返回的json，如果用 for i in json[‘trans_result’] 遍历时仅指定第一层的键，那么返回的值仅是它本身的字符串，而非内部嵌套结构，不过应该可以通过重写方法<code>__iter__()</code>进行修改</p>
<h2 id="报错：The-process-has-forked-and-you-cannot-use-this-CoreFoundation-functionality-safely-You-MUST-exec"><a href="#报错：The-process-has-forked-and-you-cannot-use-this-CoreFoundation-functionality-safely-You-MUST-exec" class="headerlink" title="报错：The process has forked and you cannot use this CoreFoundation functionality safely. You MUST exec()."></a>报错：The process has forked and you cannot use this CoreFoundation functionality safely. You MUST exec().</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="comment"># 添加以下两句</span></span><br><span class="line">    <span class="keyword">if</span> platform.system() == <span class="string">&quot;Darwin&quot;</span>:</span><br><span class="line">        multiprocessing.set_start_method(<span class="string">&#x27;spawn&#x27;</span>)</span><br></pre></td></tr></table></figure>

<h2 id="进程之间的通信队列"><a href="#进程之间的通信队列" class="headerlink" title="进程之间的通信队列"></a>进程之间的通信队列</h2><p>需要使用multiprocessing.Manager().Queue()，queue.Queue()用于多线程</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="attr">m</span> = multiprocessing.Manager()</span><br><span class="line"><span class="attr">queue</span> = m.Queue()</span><br></pre></td></tr></table></figure>



<h1 id="项目"><a href="#项目" class="headerlink" title="项目"></a>项目</h1><h2 id="Python-编程快速上手"><a href="#Python-编程快速上手" class="headerlink" title="Python 编程快速上手"></a>Python 编程快速上手</h2><h3 id="9-4：将美国风格的日期文件改成欧洲风格"><a href="#9-4：将美国风格的日期文件改成欧洲风格" class="headerlink" title="9.4：将美国风格的日期文件改成欧洲风格"></a>9.4：将美国风格的日期文件改成欧洲风格</h3><blockquote>
<p><code>MM-DD-YYYY</code> -&gt; <code>DD-MM-YYYY</code></p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#! python3</span></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="comment"># Get current dir of work</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    cwd = os.path.abspath(</span><br><span class="line">        <span class="built_in">input</span>(<span class="string">&#x27;Input your current directory of work:&#x27;</span>))</span><br><span class="line">    <span class="keyword">if</span> os.path.isdir(cwd):</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># List files</span></span><br><span class="line"><span class="comment"># for foldername, subfolders, filenames in os.walk(cwd):</span></span><br><span class="line"><span class="comment">#     print(foldername,subfolders,filenames)</span></span><br><span class="line">filenames = [filename <span class="keyword">for</span> filename <span class="keyword">in</span> os.listdir(cwd)]</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Create regex and replace MM &lt;-&gt; DD</span></span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> shutil</span><br><span class="line"></span><br><span class="line">data_regex = re.<span class="built_in">compile</span>(<span class="string">r&#x27;(\d\d)-(\d\d)-(\d\d\d\d.?[a-zA-Z]&#123;0,3&#125;)&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> filename <span class="keyword">in</span> filenames:</span><br><span class="line">    data = data_regex.search(filename)</span><br><span class="line">    <span class="keyword">if</span> data:</span><br><span class="line">        new_filename = <span class="string">&#x27;-&#x27;</span>.join([data[<span class="number">2</span>], data[<span class="number">1</span>], data[<span class="number">3</span>]])</span><br><span class="line">        <span class="comment"># 在运行重命名的代码前，最好先做个test</span></span><br><span class="line">        print(<span class="string">&#x27;Rename &quot;%s&quot; to &quot;%s&quot;&#x27;</span> % (os.path.join(cwd, filename), os.path.join(cwd, new_filename)))</span><br><span class="line">        <span class="comment"># uncomment after testing</span></span><br><span class="line">        <span class="comment">#         try</span></span><br><span class="line">        <span class="comment">#             shutil.move(os.path.join(cwd,filename), os.path.join(cwd,new_filename))</span></span><br><span class="line">        <span class="comment">#         except:</span></span><br><span class="line">        <span class="comment">#             break</span></span><br><span class="line">        <span class="comment">#         datas.append(data_regex.findall(filename))</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">&#x27;ok&#x27;</span>)</span><br></pre></td></tr></table></figure>
<h3 id="9-5-打包文件夹"><a href="#9-5-打包文件夹" class="headerlink" title="9.5: 打包文件夹"></a>9.5: 打包文件夹</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">## 打包文件，基于Python标准库</span></span><br><span class="line"><span class="comment"># shutil.make_archive(base_name, format [, root_dir[, base_dir[, owner[, group[,logger ]]]]]]])</span></span><br><span class="line"><span class="comment"># base_name指定生成的文件名 or 文件路径，默认在当前文件夹下，去除扩展名</span></span><br><span class="line"><span class="comment"># format：归档格式，root_dir 可指定目录路径，base_dir可指定文件/目录路径（默认可以基于root_dir扩展）</span></span><br><span class="line"><span class="comment"># dry_run=True，则不会创建归档文件，但将要被执行的操作会被记录到 logger</span></span><br><span class="line"><span class="comment"># owner 和 group 将在创建 tar 归档文件时被使用。默认会使用当前的所有者和分组</span></span><br><span class="line"><span class="comment"># logger 必须是一个兼容 PEP 282 的对象，通常为logging.Logger 的实例</span></span><br><span class="line"><span class="keyword">import</span> shutil</span><br><span class="line"></span><br><span class="line">shutil.make_archive(<span class="string">&#x27;output_filename&#x27;</span>,<span class="string">&#x27;zip&#x27;</span>,<span class="string">&#x27;dir_name&#x27;</span>,<span class="string">&#x27;file_name&#x27;</span>)</span><br></pre></td></tr></table></figure>

<blockquote>
<p>该<a href="http://www.seanbehan.com/how-to-use-python-shutil-make_archive-to-zip-up-a-directory-recursively-including-the-root-folder/">链接</a>可加深<code>shutil.make_archive()</code>理解</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> os, shutil</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">make_archive</span>(<span class="params">source, destination</span>):</span></span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;让make_archive更易于使用&#x27;&#x27;&#x27;</span></span><br><span class="line">    base = os.path.basename(destination)</span><br><span class="line">    name = base.split(<span class="string">&#x27;.&#x27;</span>)[<span class="number">0</span>]</span><br><span class="line">    <span class="built_in">format</span> = base.split(<span class="string">&#x27;.&#x27;</span>)[<span class="number">1</span>]</span><br><span class="line">    archive_from = os.path.dirname(source)</span><br><span class="line">    archive_to = os.path.basename(source.strip(os.sep))</span><br><span class="line">    print(source, destination, archive_from, archive_to)</span><br><span class="line">    shutil.make_archive(name, <span class="built_in">format</span>, archive_from, archive_to)</span><br><span class="line">    shutil.move(<span class="string">&#x27;%s.%s&#x27;</span>%(name,<span class="built_in">format</span>), destination)</span><br><span class="line"></span><br><span class="line">make_archive(<span class="string">&#x27;/path/to/folder&#x27;</span>, <span class="string">&#x27;/path/to/folder.zip&#x27;</span>)</span><br></pre></td></tr></table></figure>


<h3 id="11-1-通过命令行进行谷歌地图检索"><a href="#11-1-通过命令行进行谷歌地图检索" class="headerlink" title="11.1 通过命令行进行谷歌地图检索"></a>11.1 通过命令行进行谷歌地图检索</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#! python3</span></span><br><span class="line"><span class="comment"># 命令行打开谷歌地图搜索地名，解决中文地名方法源于：</span></span><br><span class="line"><span class="comment"># https://www.ptt.cc/bbs/Python/M.1566904299.A.076.html</span></span><br><span class="line"><span class="comment"># https://www.urlencoder.io/python/</span></span><br><span class="line"><span class="comment"># usage: python3 mapIt.py &#x27;地名&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> webbrowser</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> urllib.parse</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(sys.argv) &gt; <span class="number">1</span>:</span><br><span class="line">    address = urllib.parse.quote(<span class="string">&#x27; &#x27;</span>.join(sys.argv[<span class="number">1</span>:]))</span><br><span class="line">    webbrowser.<span class="built_in">open</span>(<span class="string">&#x27;https://www.google.com/maps/place/&#x27;</span> + address)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>关于<code>urllib.parse</code>模块</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#! python3</span></span><br><span class="line"><span class="comment">## 使用urllib.parse模块把中文转换成可被识别的模式，若不导入该模块，则不能查中文地名</span></span><br><span class="line"><span class="comment"># urllib.parse.quote(string, safe=’/’, encoding=None, errors=None)</span></span><br><span class="line"><span class="comment"># safe指定不转码的字符，默认&#x27;/&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> urllib.parse</span><br><span class="line"></span><br><span class="line">print(urllib.parse.quote(<span class="string">&#x27;/中国&#x27;</span>))</span><br><span class="line">print(urllib.parse.quote(<span class="string">&#x27;/中国&#x27;</span>,safe=<span class="string">&#x27;.&#x27;</span>))</span><br><span class="line">print(<span class="string">&#x27;/中国&#x27;</span>.encode(<span class="string">&#x27;utf8&#x27;</span>))</span><br></pre></td></tr></table></figure>
<blockquote>
<p>/%E4%B8%AD%E5%9B%BD<br>    %2F%E4%B8%AD%E5%9B%BD<br>    b’/\xe4\xb8\xad\xe5\x9b\xbd’</p>
</blockquote>
]]></content>
      <categories>
        <category>Book</category>
        <category>Python 编程快速上手 &amp; Python 基础教程</category>
        <category>随笔 &amp; 项目</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>socket套接字编程-Python</title>
    <url>/Socket%E5%A5%97%E6%8E%A5%E5%AD%97%E7%BC%96%E7%A8%8B-Python/</url>
    <content><![CDATA[<blockquote>
<p>本文内容基于计网自顶向下第二章的套接字编程作业：</p>
<p>1.Web 服务器 2.UDP ping 程序 3.邮件客户端 4. 多线程 Web 代理服务器</p>
<p>以下基于Web官网所给<a href="https://media.pearsoncmg.com/ph/esm/ecs_kurose_compnetwork_8/cw/content/python-socket-programming-assignments.zip">作业框架</a>完成，包含拓展部分</p>
<p>作业细节（官网）自取：<a href="https://pan.baidu.com/s/1BYlQNwsjc9QCpeOQQ_R0ZQ">https://pan.baidu.com/s/1BYlQNwsjc9QCpeOQQ_R0ZQ</a>  密码: vgfl</p>
<p>下面的代码也同步放在了github上：<a href="https://github.com/Hoper-J/Socket-Programming">https://github.com/Hoper-J/Socket-Programming</a></p>
<p>ps: 以下代码均可跑通，做了部分注解，后续有需要再补相关说明</p>
</blockquote>
<h1 id="如何在一台电脑上运行服务器和客户端"><a href="#如何在一台电脑上运行服务器和客户端" class="headerlink" title="如何在一台电脑上运行服务器和客户端"></a>如何在一台电脑上运行服务器和客户端</h1><p>开两个终端（terminal）分别运行，或者Pycharm+终端，抑或其他的，能跑就行</p>
<h1 id="实现简单Web服务器（TCP）"><a href="#实现简单Web服务器（TCP）" class="headerlink" title="实现简单Web服务器（TCP）"></a>实现简单Web服务器（TCP）</h1><h2 id="webserver-py"><a href="#webserver-py" class="headerlink" title="webserver.py"></a>webserver.py</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> socket <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> sys  <span class="comment"># In order to terminate the program</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">SERVER = gethostbyname(gethostname())</span><br><span class="line">PORT = <span class="number">18888</span></span><br><span class="line">ADDR = (SERVER, PORT)</span><br><span class="line"></span><br><span class="line">BUFSIZE = <span class="number">4096</span></span><br><span class="line">FORMAT = <span class="string">&#x27;UTF-8&#x27;</span></span><br><span class="line"></span><br><span class="line">serverSocket = socket(AF_INET, SOCK_STREAM) <span class="comment">#Prepare a sever socket</span></span><br><span class="line">serverSocket.bind(ADDR)</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    print(<span class="string">&#x27;Ready to serve...&#x27;</span>)</span><br><span class="line">    serverSocket.listen()</span><br><span class="line">    connectionSocket, addr = serverSocket.accept()</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        message = connectionSocket.recv(BUFSIZE).decode(FORMAT)</span><br><span class="line"></span><br><span class="line">        filename = message.split()[<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line">        f = <span class="built_in">open</span>(filename[<span class="number">1</span>:])</span><br><span class="line"></span><br><span class="line">        outputdata = f.readlines()</span><br><span class="line"></span><br><span class="line">        <span class="comment"># Send one HTTP header line into socket</span></span><br><span class="line">        connectionSocket.send(<span class="string">&#x27;HTTP/1.1 200 OK\r\n\r\n&#x27;</span>.encode(FORMAT))</span><br><span class="line"></span><br><span class="line">        <span class="comment"># Send the content of the requested file to the client</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="built_in">len</span>(outputdata)):</span><br><span class="line">            connectionSocket.send(outputdata[i].encode())</span><br><span class="line">        connectionSocket.send(<span class="string">&quot;\r\n&quot;</span>.encode())</span><br><span class="line"></span><br><span class="line">        connectionSocket.close()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">except</span> IOError:</span><br><span class="line">        <span class="comment"># Send response message for file not found</span></span><br><span class="line">        connectionSocket.send(<span class="string">&#x27;HTTP/1.1 404 Not found\r\n\r\n&#x27;</span>.encode(FORMAT))</span><br><span class="line">        connectionSocket.send(<span class="string">&#x27;文件不存在\r\n&#x27;</span>.encode(FORMAT))</span><br><span class="line">        <span class="comment"># Close client socket</span></span><br><span class="line">        connectionSocket.close()</span><br><span class="line"></span><br><span class="line">    serverSocket.close()</span><br><span class="line">    sys.exit()  <span class="comment"># Terminate the program after sending the corresponding data</span></span><br></pre></td></tr></table></figure>

<h2 id="多线程-webserver-thread-py"><a href="#多线程-webserver-thread-py" class="headerlink" title="多线程 webserver_thread.py"></a>多线程 webserver_thread.py</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> sys  <span class="comment"># In order to terminate the program</span></span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> socket <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">SERVER = gethostbyname(gethostname())</span><br><span class="line">PORT = <span class="number">18888</span></span><br><span class="line">ADDR = (SERVER, PORT)</span><br><span class="line"></span><br><span class="line">HEADER = <span class="number">64</span></span><br><span class="line">BUFSIZE = <span class="number">4096</span></span><br><span class="line">FORMAT = <span class="string">&#x27;UTF-8&#x27;</span></span><br><span class="line">CLOSE_CONNECTION = <span class="string">&#x27;!QUIT&#x27;</span></span><br><span class="line"></span><br><span class="line">serverSocket = socket(AF_INET, SOCK_STREAM) <span class="comment">#Prepare a sever socket</span></span><br><span class="line">serverSocket.bind(ADDR)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">start</span>():</span></span><br><span class="line">    print(<span class="string">&#x27;Ready to serve...&#x27;</span>)</span><br><span class="line">    serverSocket.listen()</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        connectionSocket, addr = serverSocket.accept()</span><br><span class="line">        thread = threading.Thread(target=handle_client, args=(connectionSocket,))</span><br><span class="line">        thread.start()</span><br><span class="line">        print(<span class="string">f&quot;[当前连接数量]: <span class="subst">&#123;threading.activeCount() - <span class="number">1</span>&#125;</span>&quot;</span>) <span class="comment"># 去除创立的线程</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">handle_client</span>(<span class="params">connectionSocket</span>):</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            message = connectionSocket.recv(BUFSIZE).decode(FORMAT)</span><br><span class="line">            <span class="keyword">if</span> message == CLOSE_CONNECTION:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">            filename = message.split()[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line">            f = <span class="built_in">open</span>(filename[<span class="number">1</span>:])</span><br><span class="line"></span><br><span class="line">            outputdata = f.readlines()</span><br><span class="line"></span><br><span class="line">            <span class="comment"># Send one HTTP header line into socket</span></span><br><span class="line">            connectionSocket.send(<span class="string">&#x27;HTTP/1.1 200 OK\r\n\r\n&#x27;</span>.encode(FORMAT))</span><br><span class="line"></span><br><span class="line">            <span class="comment"># Send the content of the requested file to the client</span></span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="built_in">len</span>(outputdata)):</span><br><span class="line">                connectionSocket.send(outputdata[i].encode())</span><br><span class="line">            connectionSocket.send(<span class="string">&quot;\r\n&quot;</span>.encode())</span><br><span class="line"></span><br><span class="line">            <span class="comment"># connectionSocket.close()</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">except</span> (OSError, IOError):</span><br><span class="line">            <span class="comment"># Send response message for file not found</span></span><br><span class="line"></span><br><span class="line">            connectionSocket.send(<span class="string">&#x27;HTTP/1.1 404 Not found\r\n\r\n&#x27;</span>.encode(FORMAT))</span><br><span class="line">            <span class="comment"># connectionSocket.send(&#x27;文件不存在\r\n&#x27;.encode(FORMAT))</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># Close client socket</span></span><br><span class="line">    connectionSocket.close()</span><br><span class="line"></span><br><span class="line">start()</span><br><span class="line">serverSocket.close()</span><br><span class="line">sys.exit()</span><br></pre></td></tr></table></figure>

<h1 id="UDP-ping-程序"><a href="#UDP-ping-程序" class="headerlink" title="UDP ping 程序"></a>UDP ping 程序</h1><h2 id="客户端"><a href="#客户端" class="headerlink" title="客户端"></a>客户端</h2><blockquote>
<p>下面的代码结合了作业的扩展练习 1:</p>
<ol>
<li>Currently, the program calculates the round-trip time for each packet and prints it out individually. Modify this to correspond to the way the standard ping program works. You will need to report the minimum, maximum, and average RTTs at the end of all pings from the client. In addition, calculate the packet loss rate (in percentage).</li>
</ol>
</blockquote>
<h3 id="UDPPingerClient-py"><a href="#UDPPingerClient-py" class="headerlink" title="UDPPingerClient.py"></a>UDPPingerClient.py</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">PORT = <span class="number">12000</span></span><br><span class="line">FORMAT = <span class="string">&#x27;utf-8&#x27;</span></span><br><span class="line">DISCONNECT_MESSAGE = <span class="string">&#x27;!DISCONNECT&#x27;</span></span><br><span class="line">SERVER = <span class="string">&#x27;127.0.0.1&#x27;</span></span><br><span class="line">ADDR = (SERVER, PORT)</span><br><span class="line"></span><br><span class="line">client = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)</span><br><span class="line"></span><br><span class="line">time_queue = []</span><br><span class="line">loss_number = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">send</span>(<span class="params">msg</span>):</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        message = msg.encode(FORMAT)</span><br><span class="line">        b = time.time()</span><br><span class="line">        client.sendto(message, ADDR)</span><br><span class="line">        client.settimeout(<span class="number">0.1</span>)</span><br><span class="line">        modified_msg = client.recv(<span class="number">2048</span>).decode()</span><br><span class="line">        a = time.time()</span><br><span class="line">        time_queue.append(a-b)</span><br><span class="line">        print(<span class="string">f&quot;RESPONSE: <span class="subst">&#123;modified_msg&#125;</span>&quot;</span>)</span><br><span class="line">        print(<span class="string">f&quot;RTT: <span class="subst">&#123;time_queue[-<span class="number">1</span>]&#125;</span>s&quot;</span>)</span><br><span class="line">    <span class="comment"># print(client.recv(2048).decode())</span></span><br><span class="line">    <span class="keyword">except</span> socket.timeout:</span><br><span class="line">        <span class="keyword">global</span> loss_number</span><br><span class="line">        loss_number += <span class="number">1</span></span><br><span class="line">        print(<span class="string">&quot;Request timed out!&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">11</span>):</span><br><span class="line">    send(<span class="string">f&quot;Ping <span class="subst">&#123;i&#125;</span> <span class="subst">&#123;time.asctime()&#125;</span>&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    client.close()</span><br><span class="line">    print(<span class="string">f&quot;&quot;&quot;---ping statics---</span></span><br><span class="line"><span class="string">10 transmitted, <span class="subst">&#123;<span class="number">10</span> - loss_number&#125;</span> received, <span class="subst">&#123;loss_number/<span class="number">10</span>:<span class="number">.2</span>%&#125;</span> loss</span></span><br><span class="line"><span class="string">min/max/avg: <span class="subst">&#123;<span class="built_in">min</span>(time_queue):f&#125;</span>/<span class="subst">&#123;<span class="built_in">max</span>(time_queue):f&#125;</span>/<span class="subst">&#123;<span class="built_in">sum</span>(time_queue)/<span class="number">10</span>:f&#125;</span> s</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span>)</span><br><span class="line"><span class="comment"># send(input())</span></span><br></pre></td></tr></table></figure>

<h3 id="UDPPingerServer-py"><a href="#UDPPingerServer-py" class="headerlink" title="UDPPingerServer.py"></a>UDPPingerServer.py</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># We will need the following module to generate randomized lost packets</span></span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">from</span> socket <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="comment"># Create a UDP socket</span></span><br><span class="line"><span class="comment"># Notice the use of SOCK_DGRAM for UDP packets</span></span><br><span class="line">serverSocket = socket(AF_INET, SOCK_DGRAM)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Assign IP address and port number to socket</span></span><br><span class="line">serverSocket.bind((<span class="string">&#x27;&#x27;</span>, <span class="number">12000</span>))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    <span class="comment"># Generate random number in the range of 0 to 10</span></span><br><span class="line">    rand = random.randint(<span class="number">0</span>, <span class="number">10</span>)</span><br><span class="line">    <span class="comment"># Receive the    client packet along with the address it is coming from</span></span><br><span class="line">    message, address = serverSocket.recvfrom(<span class="number">1024</span>)</span><br><span class="line">    <span class="comment"># Capitalize the message from the client</span></span><br><span class="line">    message = message.upper()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># If rand is less is than 4, we consider the packet lost and do not respond</span></span><br><span class="line">    <span class="keyword">if</span> rand &lt; <span class="number">4</span>:</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># Otherwise, the server responds</span></span><br><span class="line">    serverSocket.sendto(message, address</span><br></pre></td></tr></table></figure>

<h2 id="心跳包（Heartbeat-packets）"><a href="#心跳包（Heartbeat-packets）" class="headerlink" title="心跳包（Heartbeat packets）"></a>心跳包（Heartbeat packets）</h2><h3 id="UDPHeartbeatClient-py"><a href="#UDPHeartbeatClient-py" class="headerlink" title="UDPHeartbeatClient.py"></a>UDPHeartbeatClient.py</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">PORT = <span class="number">12000</span></span><br><span class="line">FORMAT = <span class="string">&#x27;utf-8&#x27;</span></span><br><span class="line">DISCONNECT_MESSAGE = <span class="string">&#x27;!DISCONNECT&#x27;</span></span><br><span class="line">SERVER = <span class="string">&#x27;127.0.0.1&#x27;</span></span><br><span class="line">ADDR = (SERVER, PORT)</span><br><span class="line"></span><br><span class="line">client = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)</span><br><span class="line"></span><br><span class="line">noTransferSequence = <span class="literal">True</span></span><br><span class="line">sequenceLength = <span class="number">5</span>  <span class="comment"># 指定message的发送格式，以序列 12 为例：f&quot;   12&#123;TIME&#125;&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">listen_recv</span>():</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        print(client.recv(<span class="number">2048</span>).decode())</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">send_length</span>():</span></span><br><span class="line">    <span class="keyword">global</span> noTransferSequence</span><br><span class="line">    <span class="keyword">while</span> noTransferSequence:</span><br><span class="line">        client.sendto(<span class="built_in">str</span>(sequenceLength).encode(FORMAT), ADDR)</span><br><span class="line">        status = client.recv(<span class="number">2048</span>).decode()</span><br><span class="line">        <span class="keyword">if</span> status == <span class="string">&#x27;Length OK&#x27;</span>:</span><br><span class="line">            noTransferSequence = <span class="literal">False</span></span><br><span class="line">            <span class="comment"># 创建线程监听收到的信息</span></span><br><span class="line">            threading.Thread(target=listen_recv).start()</span><br><span class="line"></span><br><span class="line">        print(status)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">send</span>(<span class="params">msg</span>):</span></span><br><span class="line">    send_length()</span><br><span class="line">    client.sendto(msg.encode(FORMAT), ADDR)</span><br><span class="line">    time.sleep(<span class="number">0.1</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">i = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    message = <span class="string">f&quot;<span class="subst">&#123;i:&#123;sequenceLength&#125;</span>&#125;<span class="subst">&#123;time.time()&#125;</span>&quot;</span>  <span class="comment"># message[:sequenceLength]存放序列号</span></span><br><span class="line">    send(message)</span><br><span class="line">    i += <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># send(input())</span></span><br></pre></td></tr></table></figure>



<h3 id="UDPHeartbeatServer-py"><a href="#UDPHeartbeatServer-py" class="headerlink" title="UDPHeartbeatServer.py"></a>UDPHeartbeatServer.py</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">time.time()在不同平台上可能会有不同表现，这里仅为了本地演示</span></span><br><span class="line"><span class="string">ps: 对心跳包不太了解，按自己理解做了个简单的</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># We will need the following module to generate randomized lost packets</span></span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">from</span> socket <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="comment"># Create a UDP socket</span></span><br><span class="line"><span class="comment"># Notice the use of SOCK_DGRAM for UDP packets</span></span><br><span class="line">serverSocket = socket(AF_INET, SOCK_DGRAM)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Assign IP address and port number to socket</span></span><br><span class="line">serverSocket.bind((<span class="string">&#x27;&#x27;</span>, <span class="number">12000</span>))</span><br><span class="line"></span><br><span class="line">TIMEOUT = <span class="number">2</span>  <span class="comment"># 设定心跳包间隔不超过 2 秒</span></span><br><span class="line">sendTimeSequence = []  <span class="comment"># 心跳包时间序列</span></span><br><span class="line"></span><br><span class="line">noSequenceLength = <span class="literal">True</span>  <span class="comment"># 标识是否收到序列长度</span></span><br><span class="line">noThreadMonitoring = <span class="literal">True</span>  <span class="comment"># 标识是否有线程监控超时</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">handle_heatbeat</span>(<span class="params">sequence_length</span>):</span></span><br><span class="line">    <span class="keyword">while</span> sequence_length:</span><br><span class="line">        time.sleep(<span class="number">0.1</span>)</span><br><span class="line">        now_time = time.time()</span><br><span class="line">        latest_send = sendTimeSequence[-<span class="number">1</span>]  <span class="comment"># 获取最近一次客户端发送心跳包的时间</span></span><br><span class="line">        <span class="keyword">if</span> now_time - latest_send &gt; TIMEOUT:</span><br><span class="line">            serverSocket.close()</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">start</span>():</span></span><br><span class="line">    <span class="keyword">global</span> noSequenceLength, noThreadMonitoring</span><br><span class="line">    print(<span class="string">&#x27;Ready to serve&#x27;</span>)</span><br><span class="line">    latest_number = <span class="number">0</span></span><br><span class="line">    sequence_length = <span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="comment"># Generate random number in the range of 0 to 10</span></span><br><span class="line">            rand = random.randint(<span class="number">0</span>, <span class="number">10</span>)</span><br><span class="line">            <span class="comment"># Receive the    client packet along with the address it is coming from</span></span><br><span class="line">            message, address = serverSocket.recvfrom(<span class="number">1024</span>)</span><br><span class="line">            <span class="comment"># If rand is less is than 1, we consider the packet lost and do not respond</span></span><br><span class="line">            <span class="keyword">if</span> rand &lt; <span class="number">1</span>:</span><br><span class="line">                <span class="keyword">if</span> noSequenceLength:</span><br><span class="line">                    serverSocket.sendto(<span class="string">b&#x27;Retransmission&#x27;</span>, address)</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line"></span><br><span class="line">            <span class="comment"># Otherwise, the server responds</span></span><br><span class="line">            msg = message.decode()</span><br><span class="line">            <span class="keyword">if</span> noSequenceLength:  <span class="comment"># 此时已经收到序列长度，对第一次收到的序列长度进行处理</span></span><br><span class="line">                sequence_length = <span class="built_in">int</span>(msg[:<span class="number">5</span>])</span><br><span class="line">                noSequenceLength = <span class="literal">False</span></span><br><span class="line">                serverSocket.sendto(<span class="string">b&#x27;Length OK&#x27;</span>, address)</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line"></span><br><span class="line">            number = <span class="built_in">int</span>(msg[:sequence_length])</span><br><span class="line">            sendTimeSequence.append(<span class="built_in">float</span>(msg[sequence_length:]))</span><br><span class="line">            <span class="keyword">if</span> noThreadMonitoring:</span><br><span class="line">                threading.Thread(target=handle_heatbeat,args=(sequence_length,)).start()</span><br><span class="line">                noThreadMonitoring = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(latest_number + <span class="number">1</span>, number):  <span class="comment"># 若间隔为1，则代表未丢失，不需回复</span></span><br><span class="line">                serverSocket.sendto(<span class="string">f&#x27;<span class="subst">&#123;i&#125;</span> have lost&#x27;</span>.encode(), address)</span><br><span class="line">            latest_number = number</span><br><span class="line">        <span class="keyword">except</span> OSError:</span><br><span class="line">            print(<span class="string">&#x27;CLOSE&#x27;</span>)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    start()</span><br></pre></td></tr></table></figure>

<h1 id="邮件客户端"><a href="#邮件客户端" class="headerlink" title="邮件客户端"></a>邮件客户端</h1><p>为选择的是网易的163邮箱作为实验对象，下文中发件邮箱以及收件邮箱都作了更改，可以根据自己的邮箱地址进行替换。</p>
<table>
<thead>
<tr>
<th>服务器地址</th>
<th>默认端口号</th>
<th>SSL协议端口号</th>
</tr>
</thead>
<tbody><tr>
<td>pop3.163.com</td>
<td>110</td>
<td>995</td>
</tr>
<tr>
<td>smtp.163.com</td>
<td>25</td>
<td>465/994</td>
</tr>
</tbody></table>
<h2 id="MailClient-py"><a href="#MailClient-py" class="headerlink" title="MailClient.py"></a>MailClient.py</h2><p>smtp.163.com 的默认端口号为 25，建议初学者使用 <code>telnet smtp.163.com 25</code> （com 和 25 之间为<strong>空格</strong>而非<code>:</code>）在终端进行同步的实验，结果一致</p>
<blockquote>
<p>提前解释一下， AUTH LOGIN 命令返回的 <code>334 dXNlcm5hbWU6</code>，实际是经过base64加密的 <code>username</code>:，同样的<code>UGFzc3dvcmQ6</code>就是<code>password:</code></p>
</blockquote>
<p><img src="https://blogby.oss-cn-guangzhou.aliyuncs.com/20210415163722.png" alt="image-20210415163722750"></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 非 SSL 加密</span></span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> socket <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">msg = <span class="string">&quot;\r\n I love computer networks!&quot;</span> <span class="comment"># 信息前面需空行</span></span><br><span class="line">endmsg = <span class="string">&quot;\r\n.\r\n&quot;</span></span><br><span class="line">recv = []</span><br><span class="line"></span><br><span class="line"><span class="comment"># Choose a mail server (e.g. Google mail server) and call it mailserver</span></span><br><span class="line">mailserver = <span class="string">&quot;smtp.163.com&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Create socket called sslClientSocket and establish a TCP connection with mailserver</span></span><br><span class="line">clientSocket = socket(AF_INET, SOCK_STREAM)</span><br><span class="line">clientSocket.connect((mailserver, <span class="number">25</span>))</span><br><span class="line"></span><br><span class="line">recv.append(clientSocket.recv(<span class="number">1024</span>).decode())</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> recv[-<span class="number">1</span>][:<span class="number">3</span>] != <span class="string">&#x27;220&#x27;</span>:</span><br><span class="line">    print(<span class="string">&#x27;220 reply not received from server.&#x27;</span>)</span><br><span class="line">print(recv[-<span class="number">1</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># Send HELO command and print server response.</span></span><br><span class="line">heloCommand = <span class="string">&#x27;HELO Alice\r\n&#x27;</span></span><br><span class="line">clientSocket.send(heloCommand.encode())</span><br><span class="line">recv.append(clientSocket.recv(<span class="number">1024</span>).decode())</span><br><span class="line">print(recv[-<span class="number">1</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># Login</span></span><br><span class="line">LoginCommand = <span class="string">&#x27;AUTH LOGIN\r\n&#x27;</span> <span class="comment"># 要加\r\n，否则会报 504 错误</span></span><br><span class="line">User = <span class="string">b&#x27;你的账户&#x27;</span></span><br><span class="line">Psw = <span class="string">b&#x27;你的密码&#x27;</span></span><br><span class="line"></span><br><span class="line">UserB64 = base64.b64encode(User) <span class="comment"># 账号密码需要base64加密</span></span><br><span class="line">PswB64 = base64.b64encode(Psw)</span><br><span class="line"></span><br><span class="line">clientSocket.send(LoginCommand.encode())</span><br><span class="line">recv.append(clientSocket.recv(<span class="number">1024</span>).decode())</span><br><span class="line">print(recv[-<span class="number">1</span>])</span><br><span class="line"></span><br><span class="line">clientSocket.send(UserB64 + <span class="string">b&#x27;\r\n&#x27;</span>)</span><br><span class="line">recv.append(clientSocket.recv(<span class="number">1024</span>).decode())</span><br><span class="line">print(recv[-<span class="number">1</span>])</span><br><span class="line"></span><br><span class="line">clientSocket.send(PswB64 + <span class="string">b&#x27;\r\n&#x27;</span>)</span><br><span class="line">recv.append(clientSocket.recv(<span class="number">1024</span>).decode())</span><br><span class="line">print(recv[-<span class="number">1</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># Send MAIL FROM command and print server response.</span></span><br><span class="line"></span><br><span class="line">FromCommand = <span class="string">&#x27;mail from: &lt;your_email_address&gt;\r\n&#x27;</span></span><br><span class="line">clientSocket.send(FromCommand.encode())</span><br><span class="line">recv.append(clientSocket.recv(<span class="number">1024</span>).decode())</span><br><span class="line">print(recv[-<span class="number">1</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># Send RCPT TO command and print server response.</span></span><br><span class="line">ToCommand = <span class="string">&#x27;rcpt to: &lt;recipient_email_address&gt;\r\n&#x27;</span></span><br><span class="line">clientSocket.send(ToCommand.encode())</span><br><span class="line">recv.append(clientSocket.recv(<span class="number">1024</span>).decode())</span><br><span class="line">print(recv[-<span class="number">1</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># Send DATA command and print server response.</span></span><br><span class="line">DataCommand = <span class="string">&#x27;data&#x27;</span></span><br><span class="line">clientSocket.send(DataCommand.encode())</span><br><span class="line"></span><br><span class="line"><span class="comment"># Send message data.</span></span><br><span class="line">header = <span class="string">f&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">from: &lt;your_email_address&gt;</span></span><br><span class="line"><span class="string">to: &lt;recipient_email_address&gt;</span></span><br><span class="line"><span class="string">subject: test</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line">clientSocket.send((header + msg).encode())</span><br><span class="line"></span><br><span class="line"><span class="comment"># Message ends with a single period.</span></span><br><span class="line">clientSocket.send(endmsg.encode())</span><br><span class="line">recv.append(clientSocket.recv(<span class="number">1024</span>).decode())</span><br><span class="line">print(recv[-<span class="number">1</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># Send QUIT command and get server response.</span></span><br><span class="line">QuitCommand = <span class="string">&#x27;QUIT\r\n&#x27;</span></span><br><span class="line">clientSocket.send(QuitCommand.encode())</span><br><span class="line">recv.append(clientSocket.recv(<span class="number">1024</span>).decode())</span><br><span class="line">print(recv[-<span class="number">1</span>])</span><br><span class="line">recv.append(clientSocket.recv(<span class="number">1024</span>).decode())</span><br><span class="line">print(recv[-<span class="number">1</span>])</span><br></pre></td></tr></table></figure>



<h2 id="SecureMailClient-py"><a href="#SecureMailClient-py" class="headerlink" title="SecureMailClient.py"></a>SecureMailClient.py</h2><p>此部分为额外的练习，可于终端下使用 <code>openssl s_client -connect smtp.163.com:465</code>加深理解</p>
<blockquote>
<p>原文：Mail servers like Google mail (address: smtp.gmail.com, port: 587) requires your client to add a Transport Layer Security (TLS) or Secure Sockets Layer (SSL) for authentication and security reasons, before you send MAIL FROM command. Add TLS/SSL commands to your existing ones and implement your client using Google mail server at above address and port.</p>
</blockquote>
<p>因为换个端口号就能使用 SSL 协议，接下来继续用网易做示范。</p>
<p>smtp.163.com SSL协议的端口号为465/994，任选其一使用</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># SSL 加密</span></span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> ssl</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> socket <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">msg = <span class="string">&quot;\r\n I love computer networks!&quot;</span></span><br><span class="line">endmsg = <span class="string">&quot;\r\n.\r\n&quot;</span></span><br><span class="line">recv = []</span><br><span class="line"></span><br><span class="line"><span class="comment"># Choose a mail server (e.g. Google mail server) and call it mailserver</span></span><br><span class="line">mailserver = <span class="string">&quot;smtp.163.com&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Create socket called sslClientSocket and establish a TCP connection with mailserver</span></span><br><span class="line">clientSocket = socket(AF_INET, SOCK_STREAM)</span><br><span class="line">clientSocket.connect((mailserver, <span class="number">465</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># ssl</span></span><br><span class="line">purpose = ssl.Purpose.SERVER_AUTH</span><br><span class="line">context = ssl.create_default_context(purpose)</span><br><span class="line"></span><br><span class="line">sslClientSocket = context.wrap_socket(clientSocket, server_hostname=mailserver)</span><br><span class="line"></span><br><span class="line">recv.append(sslClientSocket.recv(<span class="number">1024</span>).decode())</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> recv[-<span class="number">1</span>][:<span class="number">3</span>] != <span class="string">&#x27;220&#x27;</span>:</span><br><span class="line">    print(<span class="string">&#x27;220 reply not received from server.&#x27;</span>)</span><br><span class="line"></span><br><span class="line">print(recv[-<span class="number">1</span>])</span><br><span class="line"><span class="comment"># Send HELO command and print server response.</span></span><br><span class="line">heloCommand = <span class="string">&#x27;HELO Alice\r\n&#x27;</span></span><br><span class="line">sslClientSocket.send(heloCommand.encode())</span><br><span class="line">recv.append(sslClientSocket.recv(<span class="number">1024</span>).decode())</span><br><span class="line">print(recv[-<span class="number">1</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># Login</span></span><br><span class="line">LoginCommand = <span class="string">&#x27;AUTH LOGIN\r\n&#x27;</span>  <span class="comment"># 命令要加\r\n</span></span><br><span class="line">User = <span class="string">b&#x27;你的账户&#x27;</span></span><br><span class="line">Psw = <span class="string">b&#x27;你的密码&#x27;</span></span><br><span class="line"></span><br><span class="line">UserB64 = base64.b64encode(User)</span><br><span class="line">PswB64 = base64.b64encode(Psw)</span><br><span class="line"></span><br><span class="line">sslClientSocket.send(LoginCommand.encode())</span><br><span class="line">recv.append(sslClientSocket.recv(<span class="number">1024</span>).decode())</span><br><span class="line">print(recv[-<span class="number">1</span>])</span><br><span class="line">sslClientSocket.send(UserB64 + <span class="string">b&#x27;\r\n&#x27;</span>)</span><br><span class="line">recv.append(sslClientSocket.recv(<span class="number">1024</span>).decode())</span><br><span class="line">print(recv[-<span class="number">1</span>])</span><br><span class="line">sslClientSocket.send(PswB64 + <span class="string">b&#x27;\r\n&#x27;</span>)</span><br><span class="line">recv.append(sslClientSocket.recv(<span class="number">1024</span>).decode())</span><br><span class="line">print(recv[-<span class="number">1</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># Send MAIL FROM command and print server response.</span></span><br><span class="line"></span><br><span class="line">FromCommand = <span class="string">&#x27;mail from: &lt;your_email_address&gt;\r\n&#x27;</span></span><br><span class="line">sslClientSocket.send(FromCommand.encode())</span><br><span class="line">recv.append(sslClientSocket.recv(<span class="number">1024</span>).decode())</span><br><span class="line">print(recv[-<span class="number">1</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># Send RCPT TO command and print server response.</span></span><br><span class="line">ToCommand = <span class="string">&#x27;rcpt to: &lt;recipient_email_address&gt;\r\n&#x27;</span></span><br><span class="line">sslClientSocket.send(ToCommand.encode())</span><br><span class="line">recv.append(sslClientSocket.recv(<span class="number">1024</span>).decode())</span><br><span class="line">print(recv[-<span class="number">1</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># Send DATA command and print server response.</span></span><br><span class="line">DataCommand = <span class="string">&#x27;data&#x27;</span></span><br><span class="line">sslClientSocket.send(DataCommand.encode())</span><br><span class="line"></span><br><span class="line"><span class="comment"># Send message data.</span></span><br><span class="line">header = <span class="string">f&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">from: &lt;your_email_address&gt;</span></span><br><span class="line"><span class="string">to: &lt;recipient_email_address&gt;</span></span><br><span class="line"><span class="string">subject: test</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line">sslClientSocket.send((header + msg).encode())</span><br><span class="line"></span><br><span class="line"><span class="comment"># Message ends with a single period.</span></span><br><span class="line">sslClientSocket.send(endmsg.encode())</span><br><span class="line">recv.append(sslClientSocket.recv(<span class="number">1024</span>).decode())</span><br><span class="line">print(recv[-<span class="number">1</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># Send QUIT command and get server response.</span></span><br><span class="line"></span><br><span class="line">QuitCommand = <span class="string">&#x27;QUIT\r\n&#x27;</span></span><br><span class="line">sslClientSocket.send(QuitCommand.encode())</span><br><span class="line">recv.append(sslClientSocket.recv(<span class="number">1024</span>).decode())</span><br><span class="line">print(recv[-<span class="number">1</span>])</span><br><span class="line">recv.append(sslClientSocket.recv(<span class="number">1024</span>).decode())</span><br><span class="line">print(recv[-<span class="number">1</span>])</span><br></pre></td></tr></table></figure>

<h2 id="ProxyServer-py"><a href="#ProxyServer-py" class="headerlink" title="ProxyServer.py"></a>ProxyServer.py</h2><blockquote>
<p>程序从自己手中跑起来的瞬间令人着迷</p>
</blockquote>
<p>Mac改代理：在Safari中<code>Command+, </code> -&gt; 高级 -&gt; 更改设置… -&gt; 代理 -&gt; 网页代理 (HTTP) ，点击<strong>好</strong>并且<strong>应用</strong>，测试完记得取消代理。</p>
<p><img src="https://blogby.oss-cn-guangzhou.aliyuncs.com/20210425171901.png"></p>
<p><img src="https://blogby.oss-cn-guangzhou.aliyuncs.com/20210425172041.png" alt="image-20210425172041771"></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Test URL：http://gaia.cs.umass.edu/wireshark-labs/HTTP-wireshark-file1.html</span></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> socket <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(sys.argv) &lt;= <span class="number">1</span>:</span><br><span class="line">    print(<span class="string">&#x27;Usage : &quot;python ProxyServer.py server_ip&quot;\n&#x27;</span></span><br><span class="line">          <span class="string">&#x27;[server_ip : It is the IP Address Of Proxy Server\n&#x27;</span></span><br><span class="line">          <span class="string">&#x27;The default address is 0.0.0.0&#x27;</span>)</span><br><span class="line">    IP = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="comment"># sys.exit(2)</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    IP = sys.argv[<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line">PORT = <span class="number">8086</span></span><br><span class="line">FORMAT = <span class="string">&#x27;utf-8&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Create a server socket, bind it to a port and start listening</span></span><br><span class="line">tcpSerSock = socket(AF_INET, SOCK_STREAM)</span><br><span class="line">tcpSerSock.bind((IP, PORT))</span><br><span class="line">tcpSerSock.listen()</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="number">1</span>:</span><br><span class="line">    <span class="comment"># Start receiving data from the client</span></span><br><span class="line">    print(<span class="string">&#x27;Ready to serve...&#x27;</span>)</span><br><span class="line">    tcpCliSock, addr = tcpSerSock.accept()</span><br><span class="line">    print(<span class="string">&#x27;Received a connection from:&#x27;</span>, addr)</span><br><span class="line">    message = tcpCliSock.recv(<span class="number">2048</span>).decode(FORMAT)</span><br><span class="line">    print(message)</span><br><span class="line">    <span class="comment"># Extract the filename from the given message print(message.split()[1])</span></span><br><span class="line">    print(message.split()[<span class="number">1</span>])</span><br><span class="line">    filename = message.split()[<span class="number">1</span>].partition(<span class="string">&quot;//&quot;</span>)[<span class="number">2</span>]</span><br><span class="line">    <span class="comment"># filename = message.split()[1].split(&#x27;:&#x27;)[0]</span></span><br><span class="line">    print(filename)</span><br><span class="line">    fileExist = <span class="string">&quot;false&quot;</span></span><br><span class="line">    filetouse = filename.replace(<span class="string">&#x27;/&#x27;</span>, <span class="string">&#x27;_&#x27;</span>)</span><br><span class="line">    print(filetouse)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="comment"># Check wether the file exist in the cache</span></span><br><span class="line">        f = <span class="built_in">open</span>(filetouse, <span class="string">&quot;r&quot;</span>)</span><br><span class="line">        outputdata = f.readlines()</span><br><span class="line">        fileExist = <span class="string">&quot;true&quot;</span></span><br><span class="line">        <span class="comment"># ProxyServer finds a cache hit and generates a response message</span></span><br><span class="line">        tcpCliSock.send(<span class="string">&quot;HTTP/1.0 200 OK\r\n&quot;</span>.encode(FORMAT))</span><br><span class="line">        tcpCliSock.send(<span class="string">&quot;Content-Type:text/html\r\n&quot;</span>.encode(FORMAT))</span><br><span class="line"></span><br><span class="line">        <span class="comment"># Send the content of the requested file to the client</span></span><br><span class="line">        <span class="keyword">for</span> data <span class="keyword">in</span> outputdata:</span><br><span class="line">            tcpCliSock.send(data.encode(FORMAT))</span><br><span class="line">        tcpCliSock.send(<span class="string">&quot;\r\n&quot;</span>.encode(FORMAT))</span><br><span class="line"></span><br><span class="line">        print(<span class="string">&#x27;Read from cache&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Error handling for file not found in cache</span></span><br><span class="line">    <span class="keyword">except</span> IOError:</span><br><span class="line">        <span class="keyword">if</span> fileExist == <span class="string">&quot;false&quot;</span>:</span><br><span class="line">            <span class="comment"># Create a socket on the proxyserver</span></span><br><span class="line">            c = socket(AF_INET, SOCK_STREAM) <span class="comment"># Fill in start. # Fill in end.</span></span><br><span class="line">            hostn = filename.replace(<span class="string">&quot;www.&quot;</span>, <span class="string">&quot;&quot;</span>, <span class="number">1</span>).split(<span class="string">&#x27;/&#x27;</span>)[<span class="number">0</span>]</span><br><span class="line">            print(<span class="string">f&#x27;Host: <span class="subst">&#123;hostn&#125;</span>&#x27;</span>)</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                <span class="comment"># Connect to the socket to port 80</span></span><br><span class="line">                c.connect((hostn, <span class="number">80</span>))</span><br><span class="line"></span><br><span class="line">                <span class="comment"># Create a temporary file on this socket and ask port 80 for the file requested by the client</span></span><br><span class="line">                fileobj = c.makefile(<span class="string">&#x27;rwb&#x27;</span>, <span class="number">0</span>)</span><br><span class="line">                fileobj.write(message.encode(FORMAT))</span><br><span class="line"></span><br><span class="line">                <span class="comment"># Read the response into b_buffer</span></span><br><span class="line">                b_buffer = fileobj.read() <span class="comment"># 这里没有 decode()</span></span><br><span class="line">                print(b_buffer)</span><br><span class="line">                <span class="comment"># Create a new file in the cache for the requested file.</span></span><br><span class="line">                <span class="comment"># Also send the response in the b_buffer to client socket and the corresponding file in the cache</span></span><br><span class="line">                tcpCliSock.send(b_buffer)</span><br><span class="line"></span><br><span class="line">                tmpFile = <span class="built_in">open</span>(filename.replace(<span class="string">&#x27;/&#x27;</span>, <span class="string">&#x27;_&#x27;</span>), <span class="string">&quot;w+b&quot;</span>) <span class="comment"># 事实上这里的路径等于 filetouse</span></span><br><span class="line"></span><br><span class="line">                <span class="comment"># https://stackoverflow.com/questions/48639285/a-bytes-like-object-is-required-not-int</span></span><br><span class="line">                tmpFile.write(b_buffer) <span class="comment"># 不要对 bytes 使用 writelines</span></span><br><span class="line">                tmpFile.close()</span><br><span class="line"></span><br><span class="line">                fileobj.close()</span><br><span class="line"></span><br><span class="line">            <span class="keyword">except</span>:</span><br><span class="line">                print(<span class="string">&#x27;Illegal request&#x27;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="comment"># HTTP response message for file not found</span></span><br><span class="line">            tcpCliSock.send(<span class="string">&#x27;HTTP/1.1 404 Not Found\r\n&#x27;</span>.encode(FORMAT))</span><br><span class="line">            tcpCliSock.send(<span class="string">&#x27;Content-Type:text/html\r\n&#x27;</span>.encode(FORMAT))</span><br><span class="line">            <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;404 Not Found.html&#x27;</span>, <span class="string">&quot;r&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">                notfound_data = f.readlines()</span><br><span class="line">                <span class="keyword">for</span> data <span class="keyword">in</span> notfound_data:</span><br><span class="line">                    tcpCliSock.send(data.encode(FORMAT))</span><br><span class="line">                tcpCliSock.send(<span class="string">&quot;\r\n&quot;</span>.encode(FORMAT))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Close the client and the server sockets</span></span><br><span class="line">    tcpCliSock.close()</span><br><span class="line">tcpSerSock.close()</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Book</category>
        <category>计算机网络：自顶向下</category>
        <category>套接字编程作业</category>
      </categories>
      <tags>
        <tag>计算机网络</tag>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>zsh + Oh-My-Zsh + Powerlevel10k美化配置</title>
    <url>/zsh-oh-my-zsh-Powerlevel10k%E7%BE%8E%E5%8C%96%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<blockquote>
<p>详细命令空闲后补，以下多为配置文件</p>
</blockquote>
<h1 id="zsh"><a href="#zsh" class="headerlink" title="zsh"></a>zsh</h1><p>插件autojump的使用环境是python2</p>
<h2 id="zsh-美化（Mac-amp-Ubuntu-下通用，Windows-未尝试）"><a href="#zsh-美化（Mac-amp-Ubuntu-下通用，Windows-未尝试）" class="headerlink" title="zsh 美化（Mac &amp; Ubuntu 下通用，Windows 未尝试）"></a>zsh 美化（Mac &amp; Ubuntu 下通用，Windows 未尝试）</h2><p>Mac 下:<br><img src="https://i.loli.net/2021/03/18/jd9pLW1VnGHBRwq.png" alt="Mac"></p>
<p>Ubuntu 下:<br><img src="https://i.loli.net/2021/03/18/hjVivw3FT9JkWOl.png" alt="Ubuntu"></p>
<h3 id="下载-Hack-Nerd-Font-字体，并在终端替换"><a href="#下载-Hack-Nerd-Font-字体，并在终端替换" class="headerlink" title="下载 Hack Nerd Font 字体，并在终端替换"></a>下载 Hack Nerd Font 字体，并在终端替换</h3><h3 id="安装oh-my-zsh-和-Powerlevel10k"><a href="#安装oh-my-zsh-和-Powerlevel10k" class="headerlink" title="安装oh-my-zsh 和 Powerlevel10k"></a>安装oh-my-zsh 和 Powerlevel10k</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> --depth=1 https://github.com/romkatv/powerlevel10k.git <span class="variable">$&#123;ZSH_CUSTOM:-~/.oh-my-zsh/custom&#125;</span>/themes/powerlevel10k</span><br></pre></td></tr></table></figure>

<h3 id="直接复制以下配置到-zshrc"><a href="#直接复制以下配置到-zshrc" class="headerlink" title="直接复制以下配置到~/.zshrc"></a>直接复制以下配置到<code>~/.zshrc</code></h3><blockquote>
<p>右上角有一键复制按钮</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.</span></span><br><span class="line"><span class="comment"># Initialization code that may require console input (password prompts, [y/n]</span></span><br><span class="line"><span class="comment"># confirmations, etc.) must go above this block; everything else may go below.</span></span><br><span class="line"><span class="keyword">if</span> [[ -r <span class="string">&quot;<span class="variable">$&#123;XDG_CACHE_HOME:-<span class="variable">$HOME</span>/.cache&#125;</span>/p10k-instant-prompt-<span class="variable">$&#123;(%):-%n&#125;</span>.zsh&quot;</span> ]]; <span class="keyword">then</span></span><br><span class="line">  <span class="built_in">source</span> <span class="string">&quot;<span class="variable">$&#123;XDG_CACHE_HOME:-<span class="variable">$HOME</span>/.cache&#125;</span>/p10k-instant-prompt-<span class="variable">$&#123;(%):-%n&#125;</span>.zsh&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Path to your oh-my-zsh installation.</span></span><br><span class="line"><span class="built_in">export</span> ZSH=<span class="variable">$HOME</span>/.oh-my-zsh</span><br><span class="line"></span><br><span class="line"><span class="comment">#enables colorin the terminal bash shell export</span></span><br><span class="line"><span class="built_in">export</span> CLICOLOR=1</span><br><span class="line"></span><br><span class="line"><span class="comment">#setsup thecolor scheme for list export</span></span><br><span class="line"><span class="built_in">export</span> LSCOLORS=gxfxcxdxbxegedabagacad</span><br><span class="line"></span><br><span class="line"><span class="comment">#sets up theprompt color (currently a green similar to linux terminal)</span></span><br><span class="line"><span class="built_in">export</span> PS1=<span class="string">&#x27;\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;36m\]\w\[\033[00m\]\&#x27;</span></span><br><span class="line"><span class="comment">#enables colorfor iTerm</span></span><br><span class="line"><span class="built_in">export</span> TERM=xterm-256color</span><br><span class="line"></span><br><span class="line"><span class="comment"># Set name of the theme to load --- if set to &quot;random&quot;, it will</span></span><br><span class="line"><span class="comment"># load a random theme each time oh-my-zsh is loaded, in which case,</span></span><br><span class="line"><span class="comment"># to know which specific one was loaded, run: echo $RANDOM_THEME</span></span><br><span class="line"><span class="comment"># See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes</span></span><br><span class="line">ZSH_THEME=<span class="string">&quot;powerlevel10k/powerlevel10k&quot;</span> <span class="comment">#&quot;agnoster&quot; #&quot;robbyrussell&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Set list of themes to pick from when loading at random</span></span><br><span class="line"><span class="comment"># Setting this variable when ZSH_THEME=random will cause zsh to load</span></span><br><span class="line"><span class="comment"># a theme from this variable instead of looking in $ZSH/themes/</span></span><br><span class="line"><span class="comment"># If set to an empty array, this variable will have no effect.</span></span><br><span class="line"><span class="comment"># ZSH_THEME_RANDOM_CANDIDATES=( &quot;robbyrussell&quot; &quot;agnoster&quot; )</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Uncomment the following line to use case-sensitive completion.</span></span><br><span class="line"><span class="comment"># CASE_SENSITIVE=&quot;true&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Uncomment the following line to use hyphen-insensitive completion.</span></span><br><span class="line"><span class="comment"># Case-sensitive completion must be off. _ and - will be interchangeable.</span></span><br><span class="line"><span class="comment"># HYPHEN_INSENSITIVE=&quot;true&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Uncomment the following line to disable bi-weekly auto-update checks.</span></span><br><span class="line"><span class="comment"># DISABLE_AUTO_UPDATE=&quot;true&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Uncomment the following line to automatically update without prompting.</span></span><br><span class="line"><span class="comment"># DISABLE_UPDATE_PROMPT=&quot;true&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Uncomment the following line to change how often to auto-update (in days).</span></span><br><span class="line"><span class="comment"># export UPDATE_ZSH_DAYS=13</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Uncomment the following line if pasting URLs and other text is messed up.</span></span><br><span class="line"><span class="comment"># DISABLE_MAGIC_FUNCTIONS=&quot;true&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Uncomment the following line to disable colors in ls.</span></span><br><span class="line"><span class="comment"># DISABLE_LS_COLORS=&quot;true&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Uncomment the following line to disable auto-setting terminal title.</span></span><br><span class="line"><span class="comment"># DISABLE_AUTO_TITLE=&quot;true&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Uncomment the following line to enable command auto-correction.</span></span><br><span class="line"><span class="comment"># ENABLE_CORRECTION=&quot;true&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Uncomment the following line to display red dots whilst waiting for completion.</span></span><br><span class="line"><span class="comment"># Caution: this setting can cause issues with multiline prompts (zsh 5.7.1 and newer seem to work)</span></span><br><span class="line"><span class="comment"># See https://github.com/ohmyzsh/ohmyzsh/issues/5765</span></span><br><span class="line"><span class="comment"># COMPLETION_WAITING_DOTS=&quot;true&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Uncomment the following line if you want to disable marking untracked files</span></span><br><span class="line"><span class="comment"># under VCS as dirty. This makes repository status check for large repositories</span></span><br><span class="line"><span class="comment"># much, much faster.</span></span><br><span class="line"><span class="comment"># DISABLE_UNTRACKED_FILES_DIRTY=&quot;true&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Uncomment the following line if you want to change the command execution time</span></span><br><span class="line"><span class="comment"># stamp shown in the history command output.</span></span><br><span class="line"><span class="comment"># You can set one of the optional three formats:</span></span><br><span class="line"><span class="comment"># &quot;mm/dd/yyyy&quot;|&quot;dd.mm.yyyy&quot;|&quot;yyyy-mm-dd&quot;</span></span><br><span class="line"><span class="comment"># or set a custom format using the strftime function format specifications,</span></span><br><span class="line"><span class="comment"># see &#x27;man strftime&#x27; for details.</span></span><br><span class="line"><span class="comment"># HIST_STAMPS=&quot;mm/dd/yyyy&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Would you like to use another custom folder than $ZSH/custom?</span></span><br><span class="line"><span class="comment"># ZSH_CUSTOM=/path/to/new-custom-folder</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Which plugins would you like to load?</span></span><br><span class="line"><span class="comment"># Standard plugins can be found in $ZSH/plugins/</span></span><br><span class="line"><span class="comment"># Custom plugins may be added to $ZSH_CUSTOM/plugins/</span></span><br><span class="line"><span class="comment"># Example format: plugins=(rails git textmate ruby lighthouse)</span></span><br><span class="line"><span class="comment"># Add wisely, as too many plugins slow down shell startup.</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">source</span> <span class="variable">$ZSH</span>/oh-my-zsh.sh</span><br><span class="line"></span><br><span class="line"><span class="comment"># To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.</span></span><br><span class="line">[[ ! -f ~/.p10k.zsh ]] || <span class="built_in">source</span> ~/.p10k.zsh</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="界面美化配置"><a href="#界面美化配置" class="headerlink" title="界面美化配置"></a>界面美化配置</h3><blockquote>
<p>关闭再打开终端，会进入自定义的界面设置，此时设置完会生成配置文件<br>  如果你对界面不满意或者想换成我这样的界面，那么请复制以下内容至你的<code>~/.p10k.zsh</code><br>  注: 右上角有一键复制</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Generated by Powerlevel10k configuration wizard on 2020-08-22 at 14:34 CST.</span></span><br><span class="line"><span class="comment"># Based on romkatv/powerlevel10k/config/p10k-rainbow.zsh, checksum 38309.</span></span><br><span class="line"><span class="comment"># Wizard options: nerdfont-complete + powerline, large icons, rainbow, unicode,</span></span><br><span class="line"><span class="comment"># 12h time, angled separators, sharp heads, flat tails, 2 lines, disconnected, no frame,</span></span><br><span class="line"><span class="comment"># compact, many icons, concise, instant_prompt=off.</span></span><br><span class="line"><span class="comment"># Type `p10k configure` to generate another config.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Config for Powerlevel10k with powerline prompt style with colorful background.</span></span><br><span class="line"><span class="comment"># Type `p10k configure` to generate your own config based on it.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Tip: Looking for a nice color? Here&#x27;s a one-liner to print colormap.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#   for i in &#123;0..255&#125;; do print -Pn &quot;%K&#123;$i&#125;  %k%F&#123;$i&#125;$&#123;(l:3::0:)i&#125;%f &quot; $&#123;$&#123;(M)$((i%6)):#3&#125;:+$&#x27;\n&#x27;&#125;; done</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Temporarily change options.</span></span><br><span class="line"><span class="string">&#x27;builtin&#x27;</span> <span class="string">&#x27;local&#x27;</span> <span class="string">&#x27;-a&#x27;</span> <span class="string">&#x27;p10k_config_opts&#x27;</span></span><br><span class="line">[[ ! -o <span class="string">&#x27;aliases&#x27;</span>         ]] || p10k_config_opts+=(<span class="string">&#x27;aliases&#x27;</span>)</span><br><span class="line">[[ ! -o <span class="string">&#x27;sh_glob&#x27;</span>         ]] || p10k_config_opts+=(<span class="string">&#x27;sh_glob&#x27;</span>)</span><br><span class="line">[[ ! -o <span class="string">&#x27;no_brace_expand&#x27;</span> ]] || p10k_config_opts+=(<span class="string">&#x27;no_brace_expand&#x27;</span>)</span><br><span class="line"><span class="string">&#x27;builtin&#x27;</span> <span class="string">&#x27;setopt&#x27;</span> <span class="string">&#x27;no_aliases&#x27;</span> <span class="string">&#x27;no_sh_glob&#x27;</span> <span class="string">&#x27;brace_expand&#x27;</span></span><br><span class="line"></span><br><span class="line">() &#123;</span><br><span class="line">  <span class="built_in">emulate</span> -L zsh -o extended_glob</span><br><span class="line"></span><br><span class="line">  <span class="comment"># Unset all configuration options. This allows you to apply configuration changes without</span></span><br><span class="line">  <span class="comment"># restarting zsh. Edit ~/.p10k.zsh and type `source ~/.p10k.zsh`.</span></span><br><span class="line">  <span class="built_in">unset</span> -m <span class="string">&#x27;(POWERLEVEL9K_*|DEFAULT_USER)~POWERLEVEL9K_GITSTATUS_DIR&#x27;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Zsh &gt;= 5.1 is required.</span></span><br><span class="line">  <span class="built_in">autoload</span> -Uz is-at-least &amp;&amp; is-at-least 5.1 || <span class="built_in">return</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># The list of segments shown on the left. Fill it with the most important segments.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_LEFT_PROMPT_ELEMENTS=(</span><br><span class="line">    <span class="comment"># =========================[ Line #1 ]=========================</span></span><br><span class="line">    os_icon                 <span class="comment"># os identifier</span></span><br><span class="line">    battery</span><br><span class="line">    context</span><br><span class="line">    dir                     <span class="comment"># current directory</span></span><br><span class="line">    git</span><br><span class="line">    vcs                     <span class="comment"># git status</span></span><br><span class="line">    dir_writable vi_mode</span><br><span class="line">    <span class="comment"># =========================[ Line #2 ]=========================</span></span><br><span class="line">    newline                 <span class="comment"># \n</span></span><br><span class="line">    prompt_char             <span class="comment"># prompt symbol</span></span><br><span class="line">  )</span><br><span class="line"></span><br><span class="line">  <span class="comment"># The list of segments shown on the right. Fill it with less important segments.</span></span><br><span class="line">  <span class="comment"># Right prompt on the last prompt line (where you are typing your commands) gets</span></span><br><span class="line">  <span class="comment"># automatically hidden when the input line reaches it. Right prompt above the</span></span><br><span class="line">  <span class="comment"># last prompt line gets hidden if it would overlap with left prompt.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_RIGHT_PROMPT_ELEMENTS=(</span><br><span class="line">    <span class="comment"># =========================[ Line #1 ]=========================</span></span><br><span class="line">    status background_jobs </span><br><span class="line"><span class="comment">#history </span></span><br><span class="line">command_execution_time </span><br><span class="line">wifi </span><br><span class="line">ram </span><br><span class="line"><span class="comment">#load </span></span><br><span class="line">anaconda </span><br><span class="line"><span class="comment">#ip</span></span><br><span class="line">    status                  <span class="comment"># exit code of the last command</span></span><br><span class="line">    <span class="comment"># command_execution_time  # duration of the last command</span></span><br><span class="line">    background_jobs         <span class="comment"># presence of background jobs</span></span><br><span class="line">    direnv                  <span class="comment"># direnv status (https://direnv.net/)</span></span><br><span class="line">    asdf                    <span class="comment"># asdf version manager (https://github.com/asdf-vm/asdf)</span></span><br><span class="line">    virtualenv              <span class="comment"># python virtual environment (https://docs.python.org/3/library/venv.html)</span></span><br><span class="line">    <span class="comment"># anaconda                # conda environment (https://conda.io/)</span></span><br><span class="line">    pyenv                   <span class="comment"># python environment (https://github.com/pyenv/pyenv)</span></span><br><span class="line">    goenv                   <span class="comment"># go environment (https://github.com/syndbg/goenv)</span></span><br><span class="line">    nodenv                  <span class="comment"># node.js version from nodenv (https://github.com/nodenv/nodenv)</span></span><br><span class="line">    nvm                     <span class="comment"># node.js version from nvm (https://github.com/nvm-sh/nvm)</span></span><br><span class="line">    nodeenv                 <span class="comment"># node.js environment (https://github.com/ekalinin/nodeenv)</span></span><br><span class="line">    <span class="comment"># node_version          # node.js version</span></span><br><span class="line">    <span class="comment"># go_version            # go version (https://golang.org)</span></span><br><span class="line">    <span class="comment"># rust_version          # rustc version (https://www.rust-lang.org)</span></span><br><span class="line">    <span class="comment"># dotnet_version        # .NET version (https://dotnet.microsoft.com)</span></span><br><span class="line">    <span class="comment"># php_version           # php version (https://www.php.net/)</span></span><br><span class="line">    <span class="comment"># laravel_version       # laravel php framework version (https://laravel.com/)</span></span><br><span class="line">    <span class="comment"># java_version          # java version (https://www.java.com/)</span></span><br><span class="line">    <span class="comment"># package               # name@version from package.json (https://docs.npmjs.com/files/package.json)</span></span><br><span class="line">    rbenv                   <span class="comment"># ruby version from rbenv (https://github.com/rbenv/rbenv)</span></span><br><span class="line">    rvm                     <span class="comment"># ruby version from rvm (https://rvm.io)</span></span><br><span class="line">    fvm                     <span class="comment"># flutter version management (https://github.com/leoafarias/fvm)</span></span><br><span class="line">    luaenv                  <span class="comment"># lua version from luaenv (https://github.com/cehoffman/luaenv)</span></span><br><span class="line">    jenv                    <span class="comment"># java version from jenv (https://github.com/jenv/jenv)</span></span><br><span class="line">    plenv                   <span class="comment"># perl version from plenv (https://github.com/tokuhirom/plenv)</span></span><br><span class="line">    phpenv                  <span class="comment"># php version from phpenv (https://github.com/phpenv/phpenv)</span></span><br><span class="line">    haskell_stack           <span class="comment"># haskell version from stack (https://haskellstack.org/)</span></span><br><span class="line">    kubecontext             <span class="comment"># current kubernetes context (https://kubernetes.io/)</span></span><br><span class="line">    terraform               <span class="comment"># terraform workspace (https://www.terraform.io)</span></span><br><span class="line">    aws                     <span class="comment"># aws profile (https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-profiles.html)</span></span><br><span class="line">    aws_eb_env              <span class="comment"># aws elastic beanstalk environment (https://aws.amazon.com/elasticbeanstalk/)</span></span><br><span class="line">    azure                   <span class="comment"># azure account name (https://docs.microsoft.com/en-us/cli/azure)</span></span><br><span class="line">    gcloud                  <span class="comment"># google cloud cli account and project (https://cloud.google.com/)</span></span><br><span class="line">    google_app_cred         <span class="comment"># google application credentials (https://cloud.google.com/docs/authentication/production)</span></span><br><span class="line">    <span class="comment"># context                 # user@hostname</span></span><br><span class="line">    nordvpn                 <span class="comment"># nordvpn connection status, linux only (https://nordvpn.com/)</span></span><br><span class="line">    ranger                  <span class="comment"># ranger shell (https://github.com/ranger/ranger)</span></span><br><span class="line">    nnn                     <span class="comment"># nnn shell (https://github.com/jarun/nnn)</span></span><br><span class="line">    vim_shell               <span class="comment"># vim shell indicator (:sh)</span></span><br><span class="line">    midnight_commander      <span class="comment"># midnight commander shell (https://midnight-commander.org/)</span></span><br><span class="line">    nix_shell               <span class="comment"># nix shell (https://nixos.org/nixos/nix-pills/developing-with-nix-shell.html)</span></span><br><span class="line">    <span class="comment"># vi_mode               # vi mode (you don&#x27;t need this if you&#x27;ve enabled prompt_char)</span></span><br><span class="line">    <span class="comment"># vpn_ip                # virtual private network indicator</span></span><br><span class="line">    <span class="comment"># load                  # CPU load</span></span><br><span class="line">    <span class="comment"># disk_usage            # disk usage</span></span><br><span class="line">    <span class="comment"># ram                   # free RAM</span></span><br><span class="line">    <span class="comment"># swap                  # used swap</span></span><br><span class="line">    todo                    <span class="comment"># todo items (https://github.com/todotxt/todo.txt-cli)</span></span><br><span class="line">    timewarrior             <span class="comment"># timewarrior tracking status (https://timewarrior.net/)</span></span><br><span class="line">    taskwarrior             <span class="comment"># taskwarrior task count (https://taskwarrior.org/)</span></span><br><span class="line">    time                    <span class="comment"># current time</span></span><br><span class="line">    <span class="comment"># =========================[ Line #2 ]=========================</span></span><br><span class="line">    newline</span><br><span class="line">    <span class="comment"># ip                    # ip address and bandwidth usage for a specified network interface</span></span><br><span class="line">    <span class="comment"># public_ip             # public IP address</span></span><br><span class="line">    <span class="comment"># proxy                 # system-wide http/https/ftp proxy</span></span><br><span class="line">    <span class="comment"># battery               # internal battery</span></span><br><span class="line">    <span class="comment"># wifi                  # wifi speed</span></span><br><span class="line">    <span class="comment"># example               # example user-defined segment (see prompt_example function below)</span></span><br><span class="line">  )</span><br><span class="line"></span><br><span class="line">  <span class="comment"># Defines character set used by powerlevel10k. It&#x27;s best to let `p10k configure` set it for you.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_MODE=nerdfont-complete</span><br><span class="line">  <span class="comment"># When set to `moderate`, some icons will have an extra space after them. This is meant to avoid</span></span><br><span class="line">  <span class="comment"># icon overlap when using non-monospace fonts. When set to `none`, spaces are not added.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_ICON_PADDING=moderate</span><br><span class="line"></span><br><span class="line">  <span class="comment"># When set to true, icons appear before content on both sides of the prompt. When set</span></span><br><span class="line">  <span class="comment"># to false, icons go after content. If empty or not set, icons go before content in the left</span></span><br><span class="line">  <span class="comment"># prompt and after content in the right prompt.</span></span><br><span class="line">  <span class="comment">#</span></span><br><span class="line">  <span class="comment"># You can also override it for a specific segment:</span></span><br><span class="line">  <span class="comment">#</span></span><br><span class="line">  <span class="comment">#   POWERLEVEL9K_STATUS_ICON_BEFORE_CONTENT=false</span></span><br><span class="line">  <span class="comment">#</span></span><br><span class="line">  <span class="comment"># Or for a specific segment in specific state:</span></span><br><span class="line">  <span class="comment">#</span></span><br><span class="line">  <span class="comment">#   POWERLEVEL9K_DIR_NOT_WRITABLE_ICON_BEFORE_CONTENT=false</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_ICON_BEFORE_CONTENT=</span><br><span class="line"></span><br><span class="line">  <span class="comment"># Add an empty line before each prompt.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_PROMPT_ADD_NEWLINE=<span class="literal">false</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Connect left prompt lines with these symbols. You&#x27;ll probably want to use the same color</span></span><br><span class="line">  <span class="comment"># as POWERLEVEL9K_MULTILINE_FIRST_PROMPT_GAP_FOREGROUND below.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_MULTILINE_FIRST_PROMPT_PREFIX=</span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_MULTILINE_NEWLINE_PROMPT_PREFIX=</span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_MULTILINE_LAST_PROMPT_PREFIX=</span><br><span class="line">  <span class="comment"># Connect right prompt lines with these symbols.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_MULTILINE_FIRST_PROMPT_SUFFIX=</span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_MULTILINE_NEWLINE_PROMPT_SUFFIX=</span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_MULTILINE_LAST_PROMPT_SUFFIX=</span><br><span class="line"></span><br><span class="line">  <span class="comment"># Filler between left and right prompt on the first prompt line. You can set it to &#x27; &#x27;, &#x27;·&#x27; or</span></span><br><span class="line">  <span class="comment"># &#x27;─&#x27;. The last two make it easier to see the alignment between left and right prompt and to</span></span><br><span class="line">  <span class="comment"># separate prompt from command output. You might want to set POWERLEVEL9K_PROMPT_ADD_NEWLINE=false</span></span><br><span class="line">  <span class="comment"># for more compact prompt if using using this option.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_MULTILINE_FIRST_PROMPT_GAP_CHAR=<span class="string">&#x27;&#x27;</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_MULTILINE_FIRST_PROMPT_GAP_BACKGROUND=</span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_MULTILINE_NEWLINE_PROMPT_GAP_BACKGROUND=</span><br><span class="line">  <span class="keyword">if</span> [[ <span class="variable">$POWERLEVEL9K_MULTILINE_FIRST_PROMPT_GAP_CHAR</span> != <span class="string">&#x27; &#x27;</span> ]]; <span class="keyword">then</span></span><br><span class="line">    <span class="comment"># The color of the filler. You&#x27;ll probably want to match the color of POWERLEVEL9K_MULTILINE</span></span><br><span class="line">    <span class="comment"># ornaments defined above.</span></span><br><span class="line">    <span class="built_in">typeset</span> -g POWERLEVEL9K_MULTILINE_FIRST_PROMPT_GAP_FOREGROUND=242</span><br><span class="line">    <span class="comment"># Start filler from the edge of the screen if there are no left segments on the first line.</span></span><br><span class="line">    <span class="built_in">typeset</span> -g POWERLEVEL9K_EMPTY_LINE_LEFT_PROMPT_FIRST_SEGMENT_END_SYMBOL=<span class="string">&#x27;%&#123;%&#125;&#x27;</span></span><br><span class="line">    <span class="comment"># End filler on the edge of the screen if there are no right segments on the first line.</span></span><br><span class="line">    <span class="built_in">typeset</span> -g POWERLEVEL9K_EMPTY_LINE_RIGHT_PROMPT_FIRST_SEGMENT_START_SYMBOL=<span class="string">&#x27;%&#123;%&#125;&#x27;</span></span><br><span class="line">  <span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Separator between same-color segments on the left.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_LEFT_SUBSEGMENT_SEPARATOR=<span class="string">&#x27;\uE0B1&#x27;</span></span><br><span class="line">  <span class="comment"># Separator between same-color segments on the right.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_RIGHT_SUBSEGMENT_SEPARATOR=<span class="string">&#x27;\uE0B3&#x27;</span></span><br><span class="line">  <span class="comment"># Separator between different-color segments on the left.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_LEFT_SEGMENT_SEPARATOR=<span class="string">&#x27;\uE0B0&#x27;</span></span><br><span class="line">  <span class="comment"># Separator between different-color segments on the right.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_RIGHT_SEGMENT_SEPARATOR=<span class="string">&#x27;\uE0B2&#x27;</span></span><br><span class="line">  <span class="comment"># The right end of left prompt.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_LEFT_PROMPT_LAST_SEGMENT_END_SYMBOL=<span class="string">&#x27;\uE0B0&#x27;</span></span><br><span class="line">  <span class="comment"># The left end of right prompt.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_RIGHT_PROMPT_FIRST_SEGMENT_START_SYMBOL=<span class="string">&#x27;\uE0B2&#x27;</span></span><br><span class="line">  <span class="comment"># The left end of left prompt.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_LEFT_PROMPT_FIRST_SEGMENT_START_SYMBOL=<span class="string">&#x27;&#x27;</span></span><br><span class="line">  <span class="comment"># The right end of right prompt.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_RIGHT_PROMPT_LAST_SEGMENT_END_SYMBOL=<span class="string">&#x27;&#x27;</span></span><br><span class="line">  <span class="comment"># Left prompt terminator for lines without any segments.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_EMPTY_LINE_LEFT_PROMPT_LAST_SEGMENT_END_SYMBOL=</span><br><span class="line"></span><br><span class="line">  <span class="comment">#################################[ os_icon: os identifier ]##################################</span></span><br><span class="line">  <span class="comment"># OS identifier color.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_OS_ICON_FOREGROUND=232</span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_OS_ICON_BACKGROUND=7</span><br><span class="line">  <span class="comment"># Custom icon.</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_OS_ICON_CONTENT_EXPANSION=&#x27;⭐&#x27;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">################################[ prompt_char: prompt symbol ]################################</span></span><br><span class="line">  <span class="comment"># Transparent background.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_PROMPT_CHAR_BACKGROUND=</span><br><span class="line">  <span class="comment"># Green prompt symbol if the last command succeeded.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_PROMPT_CHAR_OK_&#123;VIINS,VICMD,VIVIS,VIOWR&#125;_FOREGROUND=76</span><br><span class="line">  <span class="comment"># Red prompt symbol if the last command failed.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_PROMPT_CHAR_ERROR_&#123;VIINS,VICMD,VIVIS,VIOWR&#125;_FOREGROUND=196</span><br><span class="line">  <span class="comment"># Default prompt symbol.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_PROMPT_CHAR_&#123;OK,ERROR&#125;_VIINS_CONTENT_EXPANSION=<span class="string">&#x27;❯&#x27;</span></span><br><span class="line">  <span class="comment"># Prompt symbol in command vi mode.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_PROMPT_CHAR_&#123;OK,ERROR&#125;_VICMD_CONTENT_EXPANSION=<span class="string">&#x27;❮&#x27;</span></span><br><span class="line">  <span class="comment"># Prompt symbol in visual vi mode.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_PROMPT_CHAR_&#123;OK,ERROR&#125;_VIVIS_CONTENT_EXPANSION=<span class="string">&#x27;V&#x27;</span></span><br><span class="line">  <span class="comment"># Prompt symbol in overwrite vi mode.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_PROMPT_CHAR_&#123;OK,ERROR&#125;_VIOWR_CONTENT_EXPANSION=<span class="string">&#x27;▶&#x27;</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_PROMPT_CHAR_OVERWRITE_STATE=<span class="literal">true</span></span><br><span class="line">  <span class="comment"># No line terminator if prompt_char is the last segment.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_PROMPT_CHAR_LEFT_PROMPT_LAST_SEGMENT_END_SYMBOL=</span><br><span class="line">  <span class="comment"># No line introducer if prompt_char is the first segment.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_PROMPT_CHAR_LEFT_PROMPT_FIRST_SEGMENT_START_SYMBOL=</span><br><span class="line">  <span class="comment"># No surrounding whitespace.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_PROMPT_CHAR_LEFT_&#123;LEFT,RIGHT&#125;_WHITESPACE=</span><br><span class="line"></span><br><span class="line">  <span class="comment">##################################[ dir: current directory ]##################################</span></span><br><span class="line">  <span class="comment"># Current directory background color.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_DIR_BACKGROUND=4</span><br><span class="line">  <span class="comment"># Default current directory foreground color.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_DIR_FOREGROUND=254</span><br><span class="line">  <span class="comment"># If directory is too long, shorten some of its segments to the shortest possible unique</span></span><br><span class="line">  <span class="comment"># prefix. The shortened directory can be tab-completed to the original.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_SHORTEN_STRATEGY=truncate_to_unique</span><br><span class="line">  <span class="comment"># Replace removed segment suffixes with this symbol.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_SHORTEN_DELIMITER=</span><br><span class="line">  <span class="comment"># Color of the shortened directory segments.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_DIR_SHORTENED_FOREGROUND=250</span><br><span class="line">  <span class="comment"># Color of the anchor directory segments. Anchor segments are never shortened. The first</span></span><br><span class="line">  <span class="comment"># segment is always an anchor.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_DIR_ANCHOR_FOREGROUND=255</span><br><span class="line">  <span class="comment"># Display anchor directory segments in bold.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_DIR_ANCHOR_BOLD=<span class="literal">true</span></span><br><span class="line">  <span class="comment"># Don&#x27;t shorten directories that contain any of these files. They are anchors.</span></span><br><span class="line">  <span class="built_in">local</span> anchor_files=(</span><br><span class="line">    .bzr</span><br><span class="line">    .citc</span><br><span class="line">    .git</span><br><span class="line">    .hg</span><br><span class="line">    .node-version</span><br><span class="line">    .python-version</span><br><span class="line">    .go-version</span><br><span class="line">    .ruby-version</span><br><span class="line">    .lua-version</span><br><span class="line">    .java-version</span><br><span class="line">    .perl-version</span><br><span class="line">    .php-version</span><br><span class="line">    .tool-version</span><br><span class="line">    .shorten_folder_marker</span><br><span class="line">    .svn</span><br><span class="line">    .terraform</span><br><span class="line">    CVS</span><br><span class="line">    Cargo.toml</span><br><span class="line">    composer.json</span><br><span class="line">    go.mod</span><br><span class="line">    package.json</span><br><span class="line">    stack.yaml</span><br><span class="line">  )</span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_SHORTEN_FOLDER_MARKER=<span class="string">&quot;(<span class="variable">$&#123;(j:|:)anchor_files&#125;</span>)&quot;</span></span><br><span class="line">  <span class="comment"># If set to &quot;first&quot; (&quot;last&quot;), remove everything before the first (last) subdirectory that contains</span></span><br><span class="line">  <span class="comment"># files matching $POWERLEVEL9K_SHORTEN_FOLDER_MARKER. For example, when the current directory is</span></span><br><span class="line">  <span class="comment"># /foo/bar/git_repo/nested_git_repo/baz, prompt will display git_repo/nested_git_repo/baz (first)</span></span><br><span class="line">  <span class="comment"># or nested_git_repo/baz (last). This assumes that git_repo and nested_git_repo contain markers</span></span><br><span class="line">  <span class="comment"># and other directories don&#x27;t.</span></span><br><span class="line">  <span class="comment">#</span></span><br><span class="line">  <span class="comment"># Optionally, &quot;first&quot; and &quot;last&quot; can be followed by &quot;:&lt;offset&gt;&quot; where &lt;offset&gt; is an integer.</span></span><br><span class="line">  <span class="comment"># This moves the truncation point to the right (positive offset) or to the left (negative offset)</span></span><br><span class="line">  <span class="comment"># relative to the marker. Plain &quot;first&quot; and &quot;last&quot; are equivalent to &quot;first:0&quot; and &quot;last:0&quot;</span></span><br><span class="line">  <span class="comment"># respectively.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_DIR_TRUNCATE_BEFORE_MARKER=<span class="literal">false</span></span><br><span class="line">  <span class="comment"># Don&#x27;t shorten this many last directory segments. They are anchors.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_SHORTEN_DIR_LENGTH=1</span><br><span class="line">  <span class="comment"># Shorten directory if it&#x27;s longer than this even if there is space for it. The value can</span></span><br><span class="line">  <span class="comment"># be either absolute (e.g., &#x27;80&#x27;) or a percentage of terminal width (e.g, &#x27;50%&#x27;). If empty,</span></span><br><span class="line">  <span class="comment"># directory will be shortened only when prompt doesn&#x27;t fit or when other parameters demand it</span></span><br><span class="line">  <span class="comment"># (see POWERLEVEL9K_DIR_MIN_COMMAND_COLUMNS and POWERLEVEL9K_DIR_MIN_COMMAND_COLUMNS_PCT below).</span></span><br><span class="line">  <span class="comment"># If set to `0`, directory will always be shortened to its minimum length.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_DIR_MAX_LENGTH=80</span><br><span class="line">  <span class="comment"># When `dir` segment is on the last prompt line, try to shorten it enough to leave at least this</span></span><br><span class="line">  <span class="comment"># many columns for typing commands.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_DIR_MIN_COMMAND_COLUMNS=40</span><br><span class="line">  <span class="comment"># When `dir` segment is on the last prompt line, try to shorten it enough to leave at least</span></span><br><span class="line">  <span class="comment"># COLUMNS * POWERLEVEL9K_DIR_MIN_COMMAND_COLUMNS_PCT * 0.01 columns for typing commands.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_DIR_MIN_COMMAND_COLUMNS_PCT=50</span><br><span class="line">  <span class="comment"># If set to true, embed a hyperlink into the directory. Useful for quickly</span></span><br><span class="line">  <span class="comment"># opening a directory in the file manager simply by clicking the link.</span></span><br><span class="line">  <span class="comment"># Can also be handy when the directory is shortened, as it allows you to see</span></span><br><span class="line">  <span class="comment"># the full directory that was used in previous commands.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_DIR_HYPERLINK=<span class="literal">false</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Enable special styling for non-writable directories. See POWERLEVEL9K_LOCK_ICON and</span></span><br><span class="line">  <span class="comment"># POWERLEVEL9K_DIR_CLASSES below.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_DIR_SHOW_WRITABLE=v2</span><br><span class="line"></span><br><span class="line">  <span class="comment"># The default icon shown next to non-writable directories when POWERLEVEL9K_DIR_SHOW_WRITABLE is</span></span><br><span class="line">  <span class="comment"># set to v2.</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_LOCK_ICON=&#x27;⭐&#x27;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># POWERLEVEL9K_DIR_CLASSES allows you to specify custom icons and colors for different</span></span><br><span class="line">  <span class="comment"># directories. It must be an array with 3 * N elements. Each triplet consists of:</span></span><br><span class="line">  <span class="comment">#</span></span><br><span class="line">  <span class="comment">#   1. A pattern against which the current directory ($PWD) is matched. Matching is done with</span></span><br><span class="line">  <span class="comment">#      extended_glob option enabled.</span></span><br><span class="line">  <span class="comment">#   2. Directory class for the purpose of styling.</span></span><br><span class="line">  <span class="comment">#   3. An empty string.</span></span><br><span class="line">  <span class="comment">#</span></span><br><span class="line">  <span class="comment"># Triplets are tried in order. The first triplet whose pattern matches $PWD wins.</span></span><br><span class="line">  <span class="comment">#</span></span><br><span class="line">  <span class="comment"># If POWERLEVEL9K_DIR_SHOW_WRITABLE is set to v2 and the current directory is not writable,</span></span><br><span class="line">  <span class="comment"># its class gets suffix _NOT_WRITABLE.</span></span><br><span class="line">  <span class="comment">#</span></span><br><span class="line">  <span class="comment"># For example, given these settings:</span></span><br><span class="line">  <span class="comment">#</span></span><br><span class="line">  <span class="comment">#   typeset -g POWERLEVEL9K_DIR_CLASSES=(</span></span><br><span class="line">  <span class="comment">#     &#x27;~/work(|/*)&#x27;  WORK     &#x27;&#x27;</span></span><br><span class="line">  <span class="comment">#     &#x27;~(|/*)&#x27;       HOME     &#x27;&#x27;</span></span><br><span class="line">  <span class="comment">#     &#x27;*&#x27;            DEFAULT  &#x27;&#x27;)</span></span><br><span class="line">  <span class="comment">#</span></span><br><span class="line">  <span class="comment"># Whenever the current directory is ~/work or a subdirectory of ~/work, it gets styled with class</span></span><br><span class="line">  <span class="comment"># WORK or WORK_NOT_WRITABLE.</span></span><br><span class="line">  <span class="comment">#</span></span><br><span class="line">  <span class="comment"># Simply assigning classes to directories don&#x27;t have any visible effects. It merely gives you an</span></span><br><span class="line">  <span class="comment"># option to define custom colors and icons for different directory classes.</span></span><br><span class="line">  <span class="comment">#</span></span><br><span class="line">  <span class="comment">#   # Styling for WORK.</span></span><br><span class="line">  <span class="comment">#   typeset -g POWERLEVEL9K_DIR_WORK_VISUAL_IDENTIFIER_EXPANSION=&#x27;⭐&#x27;</span></span><br><span class="line">  <span class="comment">#   typeset -g POWERLEVEL9K_DIR_WORK_BACKGROUND=4</span></span><br><span class="line">  <span class="comment">#   typeset -g POWERLEVEL9K_DIR_WORK_FOREGROUND=254</span></span><br><span class="line">  <span class="comment">#   typeset -g POWERLEVEL9K_DIR_WORK_SHORTENED_FOREGROUND=250</span></span><br><span class="line">  <span class="comment">#   typeset -g POWERLEVEL9K_DIR_WORK_ANCHOR_FOREGROUND=255</span></span><br><span class="line">  <span class="comment">#</span></span><br><span class="line">  <span class="comment">#   # Styling for WORK_NOT_WRITABLE.</span></span><br><span class="line">  <span class="comment">#   typeset -g POWERLEVEL9K_DIR_WORK_NOT_WRITABLE_VISUAL_IDENTIFIER_EXPANSION=&#x27;⭐&#x27;</span></span><br><span class="line">  <span class="comment">#   typeset -g POWERLEVEL9K_DIR_WORK_NOT_WRITABLE_BACKGROUND=4</span></span><br><span class="line">  <span class="comment">#   typeset -g POWERLEVEL9K_DIR_WORK_NOT_WRITABLE_FOREGROUND=254</span></span><br><span class="line">  <span class="comment">#   typeset -g POWERLEVEL9K_DIR_WORK_NOT_WRITABLE_SHORTENED_FOREGROUND=250</span></span><br><span class="line">  <span class="comment">#   typeset -g POWERLEVEL9K_DIR_WORK_NOT_WRITABLE_ANCHOR_FOREGROUND=255</span></span><br><span class="line">  <span class="comment">#</span></span><br><span class="line">  <span class="comment"># If a styling parameter isn&#x27;t explicitly defined for some class, it falls back to the classless</span></span><br><span class="line">  <span class="comment"># parameter. For example, if POWERLEVEL9K_DIR_WORK_NOT_WRITABLE_FOREGROUND is not set, it falls</span></span><br><span class="line">  <span class="comment"># back to POWERLEVEL9K_DIR_FOREGROUND.</span></span><br><span class="line">  <span class="comment">#</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_DIR_CLASSES=()</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Custom prefix.</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_DIR_PREFIX=&#x27;in &#x27;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">#####################################[ vcs: git status ]######################################</span></span><br><span class="line">  <span class="comment"># Version control system colors.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_VCS_CLEAN_BACKGROUND=2</span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_VCS_MODIFIED_BACKGROUND=3</span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_VCS_UNTRACKED_BACKGROUND=2</span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_VCS_CONFLICTED_BACKGROUND=3</span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_VCS_LOADING_BACKGROUND=8</span><br><span class="line"></span><br><span class="line">  <span class="comment"># Branch icon. Set this parameter to &#x27;\uF126 &#x27; for the popular Powerline branch icon.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_VCS_BRANCH_ICON=<span class="string">&#x27;\uF126 &#x27;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Untracked files icon. It&#x27;s really a question mark, your font isn&#x27;t broken.</span></span><br><span class="line">  <span class="comment"># Change the value of this parameter to show a different icon.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_VCS_UNTRACKED_ICON=<span class="string">&#x27;?&#x27;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Formatter for Git status.</span></span><br><span class="line">  <span class="comment">#</span></span><br><span class="line">  <span class="comment"># Example output: master ⇣42⇡42 *42 merge ~42 +42 !42 ?42.</span></span><br><span class="line">  <span class="comment">#</span></span><br><span class="line">  <span class="comment"># You can edit the function to customize how Git status looks.</span></span><br><span class="line">  <span class="comment">#</span></span><br><span class="line">  <span class="comment"># VCS_STATUS_* parameters are set by gitstatus plugin. See reference:</span></span><br><span class="line">  <span class="comment"># https://github.com/romkatv/gitstatus/blob/master/gitstatus.plugin.zsh.</span></span><br><span class="line">  <span class="keyword">function</span> <span class="function"><span class="title">my_git_formatter</span></span>() &#123;</span><br><span class="line">    <span class="built_in">emulate</span> -L zsh</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> [[ -n <span class="variable">$P9K_CONTENT</span> ]]; <span class="keyword">then</span></span><br><span class="line">      <span class="comment"># If P9K_CONTENT is not empty, use it. It&#x27;s either &quot;loading&quot; or from vcs_info (not from</span></span><br><span class="line">      <span class="comment"># gitstatus plugin). VCS_STATUS_* parameters are not available in this case.</span></span><br><span class="line">      <span class="built_in">typeset</span> -g my_git_format=<span class="variable">$P9K_CONTENT</span></span><br><span class="line">      <span class="built_in">return</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># Styling for different parts of Git status.</span></span><br><span class="line">    <span class="built_in">local</span>       meta=<span class="string">&#x27;%7F&#x27;</span> <span class="comment"># white foreground</span></span><br><span class="line">    <span class="built_in">local</span>      clean=<span class="string">&#x27;%0F&#x27;</span> <span class="comment"># black foreground</span></span><br><span class="line">    <span class="built_in">local</span>   modified=<span class="string">&#x27;%0F&#x27;</span> <span class="comment"># black foreground</span></span><br><span class="line">    <span class="built_in">local</span>  untracked=<span class="string">&#x27;%0F&#x27;</span> <span class="comment"># black foreground</span></span><br><span class="line">    <span class="built_in">local</span> conflicted=<span class="string">&#x27;%1F&#x27;</span> <span class="comment"># red foreground</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">local</span> res</span><br><span class="line">    <span class="built_in">local</span> <span class="built_in">where</span>  <span class="comment"># branch or tag</span></span><br><span class="line">    <span class="keyword">if</span> [[ -n <span class="variable">$VCS_STATUS_LOCAL_BRANCH</span> ]]; <span class="keyword">then</span></span><br><span class="line">      res+=<span class="string">&quot;<span class="variable">$&#123;clean&#125;</span><span class="variable">$&#123;(g::)POWERLEVEL9K_VCS_BRANCH_ICON&#125;</span>&quot;</span></span><br><span class="line">      <span class="built_in">where</span>=<span class="variable">$&#123;(V)VCS_STATUS_LOCAL_BRANCH&#125;</span></span><br><span class="line">    <span class="keyword">elif</span> [[ -n <span class="variable">$VCS_STATUS_TAG</span> ]]; <span class="keyword">then</span></span><br><span class="line">      res+=<span class="string">&quot;<span class="variable">$&#123;meta&#125;</span>#&quot;</span></span><br><span class="line">      <span class="built_in">where</span>=<span class="variable">$&#123;(V)VCS_STATUS_TAG&#125;</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># If local branch name or tag is at most 32 characters long, show it in full.</span></span><br><span class="line">    <span class="comment"># Otherwise show the first 12 … the last 12.</span></span><br><span class="line">    <span class="comment"># Tip: To always show local branch name in full without truncation, delete the next line.</span></span><br><span class="line">    (( <span class="variable">$#where</span> &gt; 32 )) &amp;&amp; <span class="built_in">where</span>[13,-13]=<span class="string">&quot;…&quot;</span></span><br><span class="line">    res+=<span class="string">&quot;<span class="variable">$&#123;clean&#125;</span><span class="variable">$&#123;where//\%/%%&#125;</span>&quot;</span>  <span class="comment"># escape %</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># Display the current Git commit if there is no branch or tag.</span></span><br><span class="line">    <span class="comment"># Tip: To always display the current Git commit, remove `[[ -z $where ]] &amp;&amp;` from the next line.</span></span><br><span class="line">    [[ -z <span class="variable">$where</span> ]] &amp;&amp; res+=<span class="string">&quot;<span class="variable">$&#123;meta&#125;</span>@<span class="variable">$&#123;clean&#125;</span><span class="variable">$&#123;VCS_STATUS_COMMIT[1,8]&#125;</span>&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># Show tracking branch name if it differs from local branch.</span></span><br><span class="line">    <span class="keyword">if</span> [[ -n <span class="variable">$&#123;VCS_STATUS_REMOTE_BRANCH:#$VCS_STATUS_LOCAL_BRANCH&#125;</span> ]]; <span class="keyword">then</span></span><br><span class="line">      res+=<span class="string">&quot;<span class="variable">$&#123;meta&#125;</span>:<span class="variable">$&#123;clean&#125;</span><span class="variable">$&#123;(V)VCS_STATUS_REMOTE_BRANCH//\%/%%&#125;</span>&quot;</span>  <span class="comment"># escape %</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># ⇣42 if behind the remote.</span></span><br><span class="line">    (( VCS_STATUS_COMMITS_BEHIND )) &amp;&amp; res+=<span class="string">&quot; <span class="variable">$&#123;clean&#125;</span>⇣<span class="variable">$&#123;VCS_STATUS_COMMITS_BEHIND&#125;</span>&quot;</span></span><br><span class="line">    <span class="comment"># ⇡42 if ahead of the remote; no leading space if also behind the remote: ⇣42⇡42.</span></span><br><span class="line">    (( VCS_STATUS_COMMITS_AHEAD &amp;&amp; !VCS_STATUS_COMMITS_BEHIND )) &amp;&amp; res+=<span class="string">&quot; &quot;</span></span><br><span class="line">    (( VCS_STATUS_COMMITS_AHEAD  )) &amp;&amp; res+=<span class="string">&quot;<span class="variable">$&#123;clean&#125;</span>⇡<span class="variable">$&#123;VCS_STATUS_COMMITS_AHEAD&#125;</span>&quot;</span></span><br><span class="line">    <span class="comment"># ⇠42 if behind the push remote.</span></span><br><span class="line">    (( VCS_STATUS_PUSH_COMMITS_BEHIND )) &amp;&amp; res+=<span class="string">&quot; <span class="variable">$&#123;clean&#125;</span>⇠<span class="variable">$&#123;VCS_STATUS_PUSH_COMMITS_BEHIND&#125;</span>&quot;</span></span><br><span class="line">    (( VCS_STATUS_PUSH_COMMITS_AHEAD &amp;&amp; !VCS_STATUS_PUSH_COMMITS_BEHIND )) &amp;&amp; res+=<span class="string">&quot; &quot;</span></span><br><span class="line">    <span class="comment"># ⇢42 if ahead of the push remote; no leading space if also behind: ⇠42⇢42.</span></span><br><span class="line">    (( VCS_STATUS_PUSH_COMMITS_AHEAD  )) &amp;&amp; res+=<span class="string">&quot;<span class="variable">$&#123;clean&#125;</span>⇢<span class="variable">$&#123;VCS_STATUS_PUSH_COMMITS_AHEAD&#125;</span>&quot;</span></span><br><span class="line">    <span class="comment"># *42 if have stashes.</span></span><br><span class="line">    (( VCS_STATUS_STASHES        )) &amp;&amp; res+=<span class="string">&quot; <span class="variable">$&#123;clean&#125;</span>*<span class="variable">$&#123;VCS_STATUS_STASHES&#125;</span>&quot;</span></span><br><span class="line">    <span class="comment"># &#x27;merge&#x27; if the repo is in an unusual state.</span></span><br><span class="line">    [[ -n <span class="variable">$VCS_STATUS_ACTION</span>     ]] &amp;&amp; res+=<span class="string">&quot; <span class="variable">$&#123;conflicted&#125;</span><span class="variable">$&#123;VCS_STATUS_ACTION&#125;</span>&quot;</span></span><br><span class="line">    <span class="comment"># ~42 if have merge conflicts.</span></span><br><span class="line">    (( VCS_STATUS_NUM_CONFLICTED )) &amp;&amp; res+=<span class="string">&quot; <span class="variable">$&#123;conflicted&#125;</span>~<span class="variable">$&#123;VCS_STATUS_NUM_CONFLICTED&#125;</span>&quot;</span></span><br><span class="line">    <span class="comment"># +42 if have staged changes.</span></span><br><span class="line">    (( VCS_STATUS_NUM_STAGED     )) &amp;&amp; res+=<span class="string">&quot; <span class="variable">$&#123;modified&#125;</span>+<span class="variable">$&#123;VCS_STATUS_NUM_STAGED&#125;</span>&quot;</span></span><br><span class="line">    <span class="comment"># !42 if have unstaged changes.</span></span><br><span class="line">    (( VCS_STATUS_NUM_UNSTAGED   )) &amp;&amp; res+=<span class="string">&quot; <span class="variable">$&#123;modified&#125;</span>!<span class="variable">$&#123;VCS_STATUS_NUM_UNSTAGED&#125;</span>&quot;</span></span><br><span class="line">    <span class="comment"># ?42 if have untracked files. It&#x27;s really a question mark, your font isn&#x27;t broken.</span></span><br><span class="line">    <span class="comment"># See POWERLEVEL9K_VCS_UNTRACKED_ICON above if you want to use a different icon.</span></span><br><span class="line">    <span class="comment"># Remove the next line if you don&#x27;t want to see untracked files at all.</span></span><br><span class="line">    (( VCS_STATUS_NUM_UNTRACKED  )) &amp;&amp; res+=<span class="string">&quot; <span class="variable">$&#123;untracked&#125;</span><span class="variable">$&#123;(g::)POWERLEVEL9K_VCS_UNTRACKED_ICON&#125;</span><span class="variable">$&#123;VCS_STATUS_NUM_UNTRACKED&#125;</span>&quot;</span></span><br><span class="line">    <span class="comment"># &quot;─&quot; if the number of unstaged files is unknown. This can happen due to</span></span><br><span class="line">    <span class="comment"># POWERLEVEL9K_VCS_MAX_INDEX_SIZE_DIRTY (see below) being set to a non-negative number lower</span></span><br><span class="line">    <span class="comment"># than the number of files in the Git index, or due to bash.showDirtyState being set to false</span></span><br><span class="line">    <span class="comment"># in the repository config. The number of staged and untracked files may also be unknown</span></span><br><span class="line">    <span class="comment"># in this case.</span></span><br><span class="line">    (( VCS_STATUS_HAS_UNSTAGED == -1 )) &amp;&amp; res+=<span class="string">&quot; <span class="variable">$&#123;modified&#125;</span>─&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">typeset</span> -g my_git_format=<span class="variable">$res</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">functions</span> -M my_git_formatter 2&gt;/dev/null</span><br><span class="line"></span><br><span class="line">  <span class="comment"># Don&#x27;t count the number of unstaged, untracked and conflicted files in Git repositories with</span></span><br><span class="line">  <span class="comment"># more than this many files in the index. Negative value means infinity.</span></span><br><span class="line">  <span class="comment">#</span></span><br><span class="line">  <span class="comment"># If you are working in Git repositories with tens of millions of files and seeing performance</span></span><br><span class="line">  <span class="comment"># sagging, try setting POWERLEVEL9K_VCS_MAX_INDEX_SIZE_DIRTY to a number lower than the output</span></span><br><span class="line">  <span class="comment"># of `git ls-files | wc -l`. Alternatively, add `bash.showDirtyState = false` to the repository&#x27;s</span></span><br><span class="line">  <span class="comment"># config: `git config bash.showDirtyState false`.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_VCS_MAX_INDEX_SIZE_DIRTY=-1</span><br><span class="line"></span><br><span class="line">  <span class="comment"># Don&#x27;t show Git status in prompt for repositories whose workdir matches this pattern.</span></span><br><span class="line">  <span class="comment"># For example, if set to &#x27;~&#x27;, the Git repository at $HOME/.git will be ignored.</span></span><br><span class="line">  <span class="comment"># Multiple patterns can be combined with &#x27;|&#x27;: &#x27;~(|/foo)|/bar/baz/*&#x27;.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_VCS_DISABLED_WORKDIR_PATTERN=<span class="string">&#x27;~&#x27;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Disable the default Git status formatting.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_VCS_DISABLE_GITSTATUS_FORMATTING=<span class="literal">true</span></span><br><span class="line">  <span class="comment"># Install our own Git status formatter.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_VCS_CONTENT_EXPANSION=<span class="string">&#x27;$&#123;$((my_git_formatter()))+$&#123;my_git_format&#125;&#125;&#x27;</span></span><br><span class="line">  <span class="comment"># Enable counters for staged, unstaged, etc.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_VCS_&#123;STAGED,UNSTAGED,UNTRACKED,CONFLICTED,COMMITS_AHEAD,COMMITS_BEHIND&#125;_MAX_NUM=-1</span><br><span class="line"></span><br><span class="line">  <span class="comment"># Custom icon.</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_VCS_VISUAL_IDENTIFIER_EXPANSION=&#x27;⭐&#x27;</span></span><br><span class="line">  <span class="comment"># Custom prefix.</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_VCS_PREFIX=&#x27;on &#x27;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Show status of repositories of these types. You can add svn and/or hg if you are</span></span><br><span class="line">  <span class="comment"># using them. If you do, your prompt may become slow even when your current directory</span></span><br><span class="line">  <span class="comment"># isn&#x27;t in an svn or hg reposotiry.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_VCS_BACKENDS=(git)</span><br><span class="line"></span><br><span class="line">  <span class="comment">##########################[ status: exit code of the last command ]###########################</span></span><br><span class="line">  <span class="comment"># Enable OK_PIPE, ERROR_PIPE and ERROR_SIGNAL status states to allow us to enable, disable and</span></span><br><span class="line">  <span class="comment"># style them independently from the regular OK and ERROR state.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_STATUS_EXTENDED_STATES=<span class="literal">true</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Status on success. No content, just an icon. No need to show it if prompt_char is enabled as</span></span><br><span class="line">  <span class="comment"># it will signify success by turning green.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_STATUS_OK=<span class="literal">false</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_STATUS_OK_VISUAL_IDENTIFIER_EXPANSION=<span class="string">&#x27;✔&#x27;</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_STATUS_OK_FOREGROUND=2</span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_STATUS_OK_BACKGROUND=0</span><br><span class="line"></span><br><span class="line">  <span class="comment"># Status when some part of a pipe command fails but the overall exit status is zero. It may look</span></span><br><span class="line">  <span class="comment"># like this: 1|0.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_STATUS_OK_PIPE=<span class="literal">true</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_STATUS_OK_PIPE_VISUAL_IDENTIFIER_EXPANSION=<span class="string">&#x27;✔&#x27;</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_STATUS_OK_PIPE_FOREGROUND=2</span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_STATUS_OK_PIPE_BACKGROUND=0</span><br><span class="line"></span><br><span class="line">  <span class="comment"># Status when it&#x27;s just an error code (e.g., &#x27;1&#x27;). No need to show it if prompt_char is enabled as</span></span><br><span class="line">  <span class="comment"># it will signify error by turning red.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_STATUS_ERROR=<span class="literal">false</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_STATUS_ERROR_VISUAL_IDENTIFIER_EXPANSION=<span class="string">&#x27;✘&#x27;</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_STATUS_ERROR_FOREGROUND=3</span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_STATUS_ERROR_BACKGROUND=1</span><br><span class="line"></span><br><span class="line">  <span class="comment"># Status when the last command was terminated by a signal.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_STATUS_ERROR_SIGNAL=<span class="literal">true</span></span><br><span class="line">  <span class="comment"># Use terse signal names: &quot;INT&quot; instead of &quot;SIGINT(2)&quot;.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_STATUS_VERBOSE_SIGNAME=<span class="literal">false</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_STATUS_ERROR_SIGNAL_VISUAL_IDENTIFIER_EXPANSION=<span class="string">&#x27;✘&#x27;</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_STATUS_ERROR_SIGNAL_FOREGROUND=3</span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_STATUS_ERROR_SIGNAL_BACKGROUND=1</span><br><span class="line"></span><br><span class="line">  <span class="comment"># Status when some part of a pipe command fails and the overall exit status is also non-zero.</span></span><br><span class="line">  <span class="comment"># It may look like this: 1|0.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_STATUS_ERROR_PIPE=<span class="literal">true</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_STATUS_ERROR_PIPE_VISUAL_IDENTIFIER_EXPANSION=<span class="string">&#x27;✘&#x27;</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_STATUS_ERROR_PIPE_FOREGROUND=3</span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_STATUS_ERROR_PIPE_BACKGROUND=1</span><br><span class="line"></span><br><span class="line">  <span class="comment">###################[ command_execution_time: duration of the last command ]###################</span></span><br><span class="line">  <span class="comment"># Execution time color.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_COMMAND_EXECUTION_TIME_FOREGROUND=0</span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_COMMAND_EXECUTION_TIME_BACKGROUND=10</span><br><span class="line">  <span class="comment"># Show duration of the last command if takes at least this many seconds.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_COMMAND_EXECUTION_TIME_THRESHOLD=0</span><br><span class="line">  <span class="comment"># Show this many fractional digits. Zero means round to seconds.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_COMMAND_EXECUTION_TIME_PRECISION=2</span><br><span class="line">  <span class="comment"># Duration format: 1d 2h 3m 4s.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_COMMAND_EXECUTION_TIME_FORMAT=<span class="string">&#x27;d h m s&#x27;</span></span><br><span class="line">  <span class="comment"># Custom icon.</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_COMMAND_EXECUTION_TIME_VISUAL_IDENTIFIER_EXPANSION=&#x27;⭐&#x27;</span></span><br><span class="line">  <span class="comment"># Custom prefix.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_COMMAND_EXECUTION_TIME_PREFIX=<span class="string">&#x27;took &#x27;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">#######################[ background_jobs: presence of background jobs ]#######################</span></span><br><span class="line">  <span class="comment"># Background jobs color.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_BACKGROUND_JOBS_FOREGROUND=6</span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_BACKGROUND_JOBS_BACKGROUND=0</span><br><span class="line">  <span class="comment"># Don&#x27;t show the number of background jobs.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_BACKGROUND_JOBS_VERBOSE=<span class="literal">false</span></span><br><span class="line">  <span class="comment"># Custom icon.</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_BACKGROUND_JOBS_VISUAL_IDENTIFIER_EXPANSION=&#x27;⭐&#x27;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">#######################[ direnv: direnv status (https://direnv.net/) ]########################</span></span><br><span class="line">  <span class="comment"># Direnv color.</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_DIRENV_FOREGROUND=3</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_DIRENV_BACKGROUND=0</span></span><br><span class="line">  <span class="comment"># Custom icon.</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_DIRENV_VISUAL_IDENTIFIER_EXPANSION=&#x27;⭐&#x27;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">###############[ asdf: asdf version manager (https://github.com/asdf-vm/asdf) ]###############</span></span><br><span class="line">  <span class="comment"># Default asdf color. Only used to display tools for which there is no color override (see below).</span></span><br><span class="line">  <span class="comment"># Tip:  Override these parameters for $&#123;TOOL&#125; with POWERLEVEL9K_ASDF_$&#123;TOOL&#125;_FOREGROUND and</span></span><br><span class="line">  <span class="comment"># POWERLEVEL9K_ASDF_$&#123;TOOL&#125;_BACKGROUND.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_ASDF_FOREGROUND=0</span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_ASDF_BACKGROUND=7</span><br><span class="line"></span><br><span class="line">  <span class="comment"># There are four parameters that can be used to hide asdf tools. Each parameter describes</span></span><br><span class="line">  <span class="comment"># conditions under which a tool gets hidden. Parameters can hide tools but not unhide them. If at</span></span><br><span class="line">  <span class="comment"># least one parameter decides to hide a tool, that tool gets hidden. If no parameter decides to</span></span><br><span class="line">  <span class="comment"># hide a tool, it gets shown.</span></span><br><span class="line">  <span class="comment">#</span></span><br><span class="line">  <span class="comment"># Special note on the difference between POWERLEVEL9K_ASDF_SOURCES and</span></span><br><span class="line">  <span class="comment"># POWERLEVEL9K_ASDF_PROMPT_ALWAYS_SHOW. Consider the effect of the following commands:</span></span><br><span class="line">  <span class="comment">#</span></span><br><span class="line">  <span class="comment">#   asdf local  python 3.8.1</span></span><br><span class="line">  <span class="comment">#   asdf global python 3.8.1</span></span><br><span class="line">  <span class="comment">#</span></span><br><span class="line">  <span class="comment"># After running both commands the current python version is 3.8.1 and its source is &quot;local&quot; as</span></span><br><span class="line">  <span class="comment"># it takes precedence over &quot;global&quot;. If POWERLEVEL9K_ASDF_PROMPT_ALWAYS_SHOW is set to false,</span></span><br><span class="line">  <span class="comment"># it&#x27;ll hide python version in this case because 3.8.1 is the same as the global version.</span></span><br><span class="line">  <span class="comment"># POWERLEVEL9K_ASDF_SOURCES will hide python version only if the value of this parameter doesn&#x27;t</span></span><br><span class="line">  <span class="comment"># contain &quot;local&quot;.</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Hide tool versions that don&#x27;t come from one of these sources.</span></span><br><span class="line">  <span class="comment">#</span></span><br><span class="line">  <span class="comment"># Available sources:</span></span><br><span class="line">  <span class="comment">#</span></span><br><span class="line">  <span class="comment"># - shell   `asdf current` says &quot;set by ASDF_$&#123;TOOL&#125;_VERSION environment variable&quot;</span></span><br><span class="line">  <span class="comment"># - local   `asdf current` says &quot;set by /some/not/home/directory/file&quot;</span></span><br><span class="line">  <span class="comment"># - global  `asdf current` says &quot;set by /home/username/file&quot;</span></span><br><span class="line">  <span class="comment">#</span></span><br><span class="line">  <span class="comment"># Note: If this parameter is set to (shell local global), it won&#x27;t hide tools.</span></span><br><span class="line">  <span class="comment"># Tip:  Override this parameter for $&#123;TOOL&#125; with POWERLEVEL9K_ASDF_$&#123;TOOL&#125;_SOURCES.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_ASDF_SOURCES=(shell <span class="built_in">local</span> global)</span><br><span class="line"></span><br><span class="line">  <span class="comment"># If set to false, hide tool versions that are the same as global.</span></span><br><span class="line">  <span class="comment">#</span></span><br><span class="line">  <span class="comment"># Note: The name of this parameter doesn&#x27;t reflect its meaning at all.</span></span><br><span class="line">  <span class="comment"># Note: If this parameter is set to true, it won&#x27;t hide tools.</span></span><br><span class="line">  <span class="comment"># Tip:  Override this parameter for $&#123;TOOL&#125; with POWERLEVEL9K_ASDF_$&#123;TOOL&#125;_PROMPT_ALWAYS_SHOW.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_ASDF_PROMPT_ALWAYS_SHOW=<span class="literal">false</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># If set to false, hide tool versions that are equal to &quot;system&quot;.</span></span><br><span class="line">  <span class="comment">#</span></span><br><span class="line">  <span class="comment"># Note: If this parameter is set to true, it won&#x27;t hide tools.</span></span><br><span class="line">  <span class="comment"># Tip: Override this parameter for $&#123;TOOL&#125; with POWERLEVEL9K_ASDF_$&#123;TOOL&#125;_SHOW_SYSTEM.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_ASDF_SHOW_SYSTEM=<span class="literal">true</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># If set to non-empty value, hide tools unless there is a file matching the specified file pattern</span></span><br><span class="line">  <span class="comment"># in the current directory, or its parent diretory, or its grandparent directory, and so on.</span></span><br><span class="line">  <span class="comment">#</span></span><br><span class="line">  <span class="comment"># Note: If this parameter is set to empty value, it won&#x27;t hide tools.</span></span><br><span class="line">  <span class="comment"># Note: SHOW_ON_UPGLOB isn&#x27;t specific to asdf. It works with all prompt segments.</span></span><br><span class="line">  <span class="comment"># Tip: Override this parameter for $&#123;TOOL&#125; with POWERLEVEL9K_ASDF_$&#123;TOOL&#125;_SHOW_ON_UPGLOB.</span></span><br><span class="line">  <span class="comment">#</span></span><br><span class="line">  <span class="comment"># Example: Hide nodejs version when there is no package.json and no *.js files in the current</span></span><br><span class="line">  <span class="comment"># directory, in `..`, in `../..` and so on.</span></span><br><span class="line">  <span class="comment">#</span></span><br><span class="line">  <span class="comment">#   typeset -g POWERLEVEL9K_ASDF_NODEJS_SHOW_ON_UPGLOB=&#x27;*.js|package.json&#x27;</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_ASDF_SHOW_ON_UPGLOB=</span><br><span class="line"></span><br><span class="line">  <span class="comment"># Ruby version from asdf.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_ASDF_RUBY_FOREGROUND=0</span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_ASDF_RUBY_BACKGROUND=1</span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_ASDF_RUBY_VISUAL_IDENTIFIER_EXPANSION=&#x27;⭐&#x27;</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_ASDF_RUBY_SHOW_ON_UPGLOB=&#x27;*.foo|*.bar&#x27;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Python version from asdf.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_ASDF_PYTHON_FOREGROUND=0</span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_ASDF_PYTHON_BACKGROUND=4</span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_ASDF_PYTHON_VISUAL_IDENTIFIER_EXPANSION=&#x27;⭐&#x27;</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_ASDF_PYTHON_SHOW_ON_UPGLOB=&#x27;*.foo|*.bar&#x27;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Go version from asdf.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_ASDF_GOLANG_FOREGROUND=0</span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_ASDF_GOLANG_BACKGROUND=4</span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_ASDF_GOLANG_VISUAL_IDENTIFIER_EXPANSION=&#x27;⭐&#x27;</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_ASDF_GOLANG_SHOW_ON_UPGLOB=&#x27;*.foo|*.bar&#x27;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Node.js version from asdf.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_ASDF_NODEJS_FOREGROUND=0</span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_ASDF_NODEJS_BACKGROUND=2</span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_ASDF_NODEJS_VISUAL_IDENTIFIER_EXPANSION=&#x27;⭐&#x27;</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_ASDF_NODEJS_SHOW_ON_UPGLOB=&#x27;*.foo|*.bar&#x27;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Rust version from asdf.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_ASDF_RUST_FOREGROUND=0</span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_ASDF_RUST_BACKGROUND=208</span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_ASDF_RUST_VISUAL_IDENTIFIER_EXPANSION=&#x27;⭐&#x27;</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_ASDF_RUST_SHOW_ON_UPGLOB=&#x27;*.foo|*.bar&#x27;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># .NET Core version from asdf.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_ASDF_DOTNET_CORE_FOREGROUND=0</span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_ASDF_DOTNET_CORE_BACKGROUND=5</span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_ASDF_DOTNET_CORE_VISUAL_IDENTIFIER_EXPANSION=&#x27;⭐&#x27;</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_ASDF_DOTNET_CORE_SHOW_ON_UPGLOB=&#x27;*.foo|*.bar&#x27;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Flutter version from asdf.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_ASDF_FLUTTER_FOREGROUND=0</span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_ASDF_FLUTTER_BACKGROUND=4</span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_ASDF_FLUTTER_VISUAL_IDENTIFIER_EXPANSION=&#x27;⭐&#x27;</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_ASDF_FLUTTER_SHOW_ON_UPGLOB=&#x27;*.foo|*.bar&#x27;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Lua version from asdf.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_ASDF_LUA_FOREGROUND=0</span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_ASDF_LUA_BACKGROUND=4</span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_ASDF_LUA_VISUAL_IDENTIFIER_EXPANSION=&#x27;⭐&#x27;</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_ASDF_LUA_SHOW_ON_UPGLOB=&#x27;*.foo|*.bar&#x27;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Java version from asdf.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_ASDF_JAVA_FOREGROUND=1</span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_ASDF_JAVA_BACKGROUND=7</span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_ASDF_JAVA_VISUAL_IDENTIFIER_EXPANSION=&#x27;⭐&#x27;</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_ASDF_JAVA_SHOW_ON_UPGLOB=&#x27;*.foo|*.bar&#x27;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Perl version from asdf.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_ASDF_PERL_FOREGROUND=0</span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_ASDF_PERL_BACKGROUND=4</span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_ASDF_PERL_VISUAL_IDENTIFIER_EXPANSION=&#x27;⭐&#x27;</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_ASDF_PERL_SHOW_ON_UPGLOB=&#x27;*.foo|*.bar&#x27;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Erlang version from asdf.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_ASDF_ERLANG_FOREGROUND=0</span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_ASDF_ERLANG_BACKGROUND=1</span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_ASDF_ERLANG_VISUAL_IDENTIFIER_EXPANSION=&#x27;⭐&#x27;</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_ASDF_ERLANG_SHOW_ON_UPGLOB=&#x27;*.foo|*.bar&#x27;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Elixir version from asdf.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_ASDF_ELIXIR_FOREGROUND=0</span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_ASDF_ELIXIR_BACKGROUND=5</span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_ASDF_ELIXIR_VISUAL_IDENTIFIER_EXPANSION=&#x27;⭐&#x27;</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_ASDF_ELIXIR_SHOW_ON_UPGLOB=&#x27;*.foo|*.bar&#x27;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Postgres version from asdf.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_ASDF_POSTGRES_FOREGROUND=0</span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_ASDF_POSTGRES_BACKGROUND=6</span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_ASDF_POSTGRES_VISUAL_IDENTIFIER_EXPANSION=&#x27;⭐&#x27;</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_ASDF_POSTGRES_SHOW_ON_UPGLOB=&#x27;*.foo|*.bar&#x27;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># PHP version from asdf.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_ASDF_PHP_FOREGROUND=0</span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_ASDF_PHP_BACKGROUND=5</span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_ASDF_PHP_VISUAL_IDENTIFIER_EXPANSION=&#x27;⭐&#x27;</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_ASDF_PHP_SHOW_ON_UPGLOB=&#x27;*.foo|*.bar&#x27;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Haskell version from asdf.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_ASDF_HASKELL_FOREGROUND=0</span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_ASDF_HASKELL_BACKGROUND=3</span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_ASDF_HASKELL_VISUAL_IDENTIFIER_EXPANSION=&#x27;⭐&#x27;</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_ASDF_HASKELL_SHOW_ON_UPGLOB=&#x27;*.foo|*.bar&#x27;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Julia version from asdf.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_ASDF_JULIA_FOREGROUND=0</span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_ASDF_JULIA_BACKGROUND=2</span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_ASDF_JULIA_VISUAL_IDENTIFIER_EXPANSION=&#x27;⭐&#x27;</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_ASDF_JULIA_SHOW_ON_UPGLOB=&#x27;*.foo|*.bar&#x27;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">##########[ nordvpn: nordvpn connection status, linux only (https://nordvpn.com/) ]###########</span></span><br><span class="line">  <span class="comment"># NordVPN connection indicator color.</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_NORDVPN_FOREGROUND=7</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_NORDVPN_BACKGROUND=4</span></span><br><span class="line">  <span class="comment"># Hide NordVPN connection indicator when not connected.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_NORDVPN_&#123;DISCONNECTED,CONNECTING,DISCONNECTING&#125;_CONTENT_EXPANSION=</span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_NORDVPN_&#123;DISCONNECTED,CONNECTING,DISCONNECTING&#125;_VISUAL_IDENTIFIER_EXPANSION=</span><br><span class="line">  <span class="comment"># Custom icon.</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_NORDVPN_VISUAL_IDENTIFIER_EXPANSION=&#x27;⭐&#x27;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">#################[ ranger: ranger shell (https://github.com/ranger/ranger) ]##################</span></span><br><span class="line">  <span class="comment"># Ranger shell color.</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_RANGER_FOREGROUND=3</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_RANGER_BACKGROUND=0</span></span><br><span class="line">  <span class="comment"># Custom icon.</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_RANGER_VISUAL_IDENTIFIER_EXPANSION=&#x27;⭐&#x27;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">######################[ nnn: nnn shell (https://github.com/jarun/nnn) ]#######################</span></span><br><span class="line">  <span class="comment"># Nnn shell color.</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_NNN_FOREGROUND=0</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_NNN_BACKGROUND=6</span></span><br><span class="line">  <span class="comment"># Custom icon.</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_NNN_VISUAL_IDENTIFIER_EXPANSION=&#x27;⭐&#x27;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">###########################[ vim_shell: vim shell indicator (:sh) ]###########################</span></span><br><span class="line">  <span class="comment"># Vim shell indicator color.</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_VIM_SHELL_FOREGROUND=0</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_VIM_SHELL_BACKGROUND=2</span></span><br><span class="line">  <span class="comment"># Custom icon.</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_VIM_SHELL_VISUAL_IDENTIFIER_EXPANSION=&#x27;⭐&#x27;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">######[ midnight_commander: midnight commander shell (https://midnight-commander.org/) ]######</span></span><br><span class="line">  <span class="comment"># Midnight Commander shell color.</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_MIDNIGHT_COMMANDER_FOREGROUND=3</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_MIDNIGHT_COMMANDER_BACKGROUND=0</span></span><br><span class="line">  <span class="comment"># Custom icon.</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_MIDNIGHT_COMMANDER_VISUAL_IDENTIFIER_EXPANSION=&#x27;⭐&#x27;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">#[ nix_shell: nix shell (https://nixos.org/nixos/nix-pills/developing-with-nix-shell.html) ]##</span></span><br><span class="line">  <span class="comment"># Nix shell color.</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_NIX_SHELL_FOREGROUND=0</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_NIX_SHELL_BACKGROUND=4</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Tip: If you want to see just the icon without &quot;pure&quot; and &quot;impure&quot;, uncomment the next line.</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_NIX_SHELL_CONTENT_EXPANSION=</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Custom icon.</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_NIX_SHELL_VISUAL_IDENTIFIER_EXPANSION=&#x27;⭐&#x27;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">##################################[ disk_usage: disk usage ]##################################</span></span><br><span class="line">  <span class="comment"># Colors for different levels of disk usage.</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_DISK_USAGE_NORMAL_FOREGROUND=3</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_DISK_USAGE_NORMAL_BACKGROUND=0</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_DISK_USAGE_WARNING_FOREGROUND=0</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_DISK_USAGE_WARNING_BACKGROUND=3</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_DISK_USAGE_CRITICAL_FOREGROUND=7</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_DISK_USAGE_CRITICAL_BACKGROUND=1</span></span><br><span class="line">  <span class="comment"># Thresholds for different levels of disk usage (percentage points).</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_DISK_USAGE_WARNING_LEVEL=90</span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_DISK_USAGE_CRITICAL_LEVEL=95</span><br><span class="line">  <span class="comment"># If set to true, hide disk usage when below $POWERLEVEL9K_DISK_USAGE_WARNING_LEVEL percent.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_DISK_USAGE_ONLY_WARNING=<span class="literal">false</span></span><br><span class="line">  <span class="comment"># Custom icon.</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_DISK_USAGE_VISUAL_IDENTIFIER_EXPANSION=&#x27;⭐&#x27;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">###########[ vi_mode: vi mode (you don&#x27;t need this if you&#x27;ve enabled prompt_char) ]###########</span></span><br><span class="line">  <span class="comment"># Foreground color.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_VI_MODE_FOREGROUND=0</span><br><span class="line">  <span class="comment"># Text and color for normal (a.k.a. command) vi mode.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_VI_COMMAND_MODE_STRING=NORMAL</span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_VI_MODE_NORMAL_BACKGROUND=2</span><br><span class="line">  <span class="comment"># Text and color for visual vi mode.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_VI_VISUAL_MODE_STRING=VISUAL</span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_VI_MODE_VISUAL_BACKGROUND=4</span><br><span class="line">  <span class="comment"># Text and color for overtype (a.k.a. overwrite and replace) vi mode.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_VI_OVERWRITE_MODE_STRING=OVERTYPE</span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_VI_MODE_OVERWRITE_BACKGROUND=3</span><br><span class="line">  <span class="comment"># Text and color for insert vi mode.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_VI_INSERT_MODE_STRING=</span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_VI_MODE_INSERT_FOREGROUND=8</span><br><span class="line"></span><br><span class="line">  <span class="comment">######################################[ ram: free RAM ]#######################################</span></span><br><span class="line">  <span class="comment"># RAM color.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_RAM_FOREGROUND=0</span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_RAM_BACKGROUND=3</span><br><span class="line">  <span class="comment"># Custom icon.</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_RAM_VISUAL_IDENTIFIER_EXPANSION=&#x27;⭐&#x27;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">#####################################[ swap: used swap ]######################################</span></span><br><span class="line">  <span class="comment"># Swap color.</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_SWAP_FOREGROUND=0</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_SWAP_BACKGROUND=3</span></span><br><span class="line">  <span class="comment"># Custom icon.</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_SWAP_VISUAL_IDENTIFIER_EXPANSION=&#x27;⭐&#x27;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">######################################[ load: CPU load ]######################################</span></span><br><span class="line">  <span class="comment"># Show average CPU load over this many last minutes. Valid values are 1, 5 and 15.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_LOAD_WHICH=1</span><br><span class="line">  <span class="comment"># Load color when load is under 50%.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_LOAD_NORMAL_FOREGROUND=0</span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_LOAD_NORMAL_BACKGROUND=2</span><br><span class="line">  <span class="comment"># Load color when load is between 50% and 70%.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_LOAD_WARNING_FOREGROUND=0</span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_LOAD_WARNING_BACKGROUND=3</span><br><span class="line">  <span class="comment"># Load color when load is over 70%.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_LOAD_CRITICAL_FOREGROUND=0</span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_LOAD_CRITICAL_BACKGROUND=1</span><br><span class="line">  <span class="comment"># Custom icon.</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_LOAD_VISUAL_IDENTIFIER_EXPANSION=&#x27;⭐&#x27;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">################[ todo: todo items (https://github.com/todotxt/todo.txt-cli) ]################</span></span><br><span class="line">  <span class="comment"># Todo color.</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_TODO_FOREGROUND=0</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_TODO_BACKGROUND=8</span></span><br><span class="line">  <span class="comment"># Hide todo when the total number of tasks is zero.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_TODO_HIDE_ZERO_TOTAL=<span class="literal">true</span></span><br><span class="line">  <span class="comment"># Hide todo when the number of tasks after filtering is zero.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_TODO_HIDE_ZERO_FILTERED=<span class="literal">false</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Todo format. The following parameters are available within the expansion.</span></span><br><span class="line">  <span class="comment">#</span></span><br><span class="line">  <span class="comment"># - P9K_TODO_TOTAL_TASK_COUNT     The total number of tasks.</span></span><br><span class="line">  <span class="comment"># - P9K_TODO_FILTERED_TASK_COUNT  The number of tasks after filtering.</span></span><br><span class="line">  <span class="comment">#</span></span><br><span class="line">  <span class="comment"># These variables correspond to the last line of the output of `todo.sh -p ls`:</span></span><br><span class="line">  <span class="comment">#</span></span><br><span class="line">  <span class="comment">#   <span class="doctag">TODO:</span> 24 of 42 tasks shown</span></span><br><span class="line">  <span class="comment">#</span></span><br><span class="line">  <span class="comment"># Here 24 is P9K_TODO_FILTERED_TASK_COUNT and 42 is P9K_TODO_TOTAL_TASK_COUNT.</span></span><br><span class="line">  <span class="comment">#</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_TODO_CONTENT_EXPANSION=&#x27;$P9K_TODO_FILTERED_TASK_COUNT&#x27;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Custom icon.</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_TODO_VISUAL_IDENTIFIER_EXPANSION=&#x27;⭐&#x27;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">###########[ timewarrior: timewarrior tracking status (https://timewarrior.net/) ]############</span></span><br><span class="line">  <span class="comment"># Timewarrior color.</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_TIMEWARRIOR_FOREGROUND=255</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_TIMEWARRIOR_BACKGROUND=8</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># If the tracked task is longer than 24 characters, truncate and append &quot;…&quot;.</span></span><br><span class="line">  <span class="comment"># Tip: To always display tasks without truncation, delete the following parameter.</span></span><br><span class="line">  <span class="comment"># Tip: To hide task names and display just the icon when time tracking is enabled, set the</span></span><br><span class="line">  <span class="comment"># value of the following parameter to &quot;&quot;.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_TIMEWARRIOR_CONTENT_EXPANSION=<span class="string">&#x27;$&#123;P9K_CONTENT:0:24&#125;$&#123;$&#123;P9K_CONTENT:24&#125;:+…&#125;&#x27;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Custom icon.</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_TIMEWARRIOR_VISUAL_IDENTIFIER_EXPANSION=&#x27;⭐&#x27;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">##############[ taskwarrior: taskwarrior task count (https://taskwarrior.org/) ]##############</span></span><br><span class="line">  <span class="comment"># Taskwarrior color.</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_TASKWARRIOR_FOREGROUND=0</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_TASKWARRIOR_BACKGROUND=6</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Taskwarrior segment format. The following parameters are available within the expansion.</span></span><br><span class="line">  <span class="comment">#</span></span><br><span class="line">  <span class="comment"># - P9K_TASKWARRIOR_PENDING_COUNT   The number of pending tasks: `task +PENDING count`.</span></span><br><span class="line">  <span class="comment"># - P9K_TASKWARRIOR_OVERDUE_COUNT   The number of overdue tasks: `task +OVERDUE count`.</span></span><br><span class="line">  <span class="comment">#</span></span><br><span class="line">  <span class="comment"># Zero values are represented as empty parameters.</span></span><br><span class="line">  <span class="comment">#</span></span><br><span class="line">  <span class="comment"># The default format:</span></span><br><span class="line">  <span class="comment">#</span></span><br><span class="line">  <span class="comment">#   &#x27;$&#123;P9K_TASKWARRIOR_OVERDUE_COUNT:+&quot;!$P9K_TASKWARRIOR_OVERDUE_COUNT/&quot;&#125;$P9K_TASKWARRIOR_PENDING_COUNT&#x27;</span></span><br><span class="line">  <span class="comment">#</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_TASKWARRIOR_CONTENT_EXPANSION=&#x27;$P9K_TASKWARRIOR_PENDING_COUNT&#x27;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Custom icon.</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_TASKWARRIOR_VISUAL_IDENTIFIER_EXPANSION=&#x27;⭐&#x27;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">##################################[ context: user@hostname ]##################################</span></span><br><span class="line">  <span class="comment"># Context color when running with privileges.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_CONTEXT_ROOT_FOREGROUND=1</span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_CONTEXT_ROOT_BACKGROUND=3</span><br><span class="line">  <span class="comment"># Context color in SSH without privileges.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_CONTEXT_&#123;REMOTE,REMOTE_SUDO&#125;_FOREGROUND=0</span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_CONTEXT_&#123;REMOTE,REMOTE_SUDO&#125;_BACKGROUND=3</span><br><span class="line">  <span class="comment"># Default context color (no privileges, no SSH).</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_CONTEXT_FOREGROUND=0</span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_CONTEXT_BACKGROUND=3</span><br><span class="line"></span><br><span class="line">  <span class="comment"># Context format when running with privileges: user@hostname.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_CONTEXT_ROOT_TEMPLATE=<span class="string">&#x27;%n@%m&#x27;</span></span><br><span class="line">  <span class="comment"># Context format when in SSH without privileges: user@hostname.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_CONTEXT_&#123;REMOTE,REMOTE_SUDO&#125;_TEMPLATE=<span class="string">&#x27;%n@%m&#x27;</span></span><br><span class="line">  <span class="comment"># Default context format (no privileges, no SSH): user@hostname.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_CONTEXT_TEMPLATE=<span class="string">&#x27;%n@%m&#x27;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Don&#x27;t show context unless running with privileges or in SSH.</span></span><br><span class="line">  <span class="comment"># Tip: Remove the next line to always show context.</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_CONTEXT_&#123;DEFAULT,SUDO&#125;_&#123;CONTENT,VISUAL_IDENTIFIER&#125;_EXPANSION=</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Custom icon.</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_CONTEXT_VISUAL_IDENTIFIER_EXPANSION=&#x27;⭐&#x27;</span></span><br><span class="line">  <span class="comment"># Custom prefix.</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_CONTEXT_PREFIX=&#x27;with &#x27;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">###[ virtualenv: python virtual environment (https://docs.python.org/3/library/venv.html) ]###</span></span><br><span class="line">  <span class="comment"># Python virtual environment color.</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_VIRTUALENV_FOREGROUND=0</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_VIRTUALENV_BACKGROUND=4</span></span><br><span class="line">  <span class="comment"># Don&#x27;t show Python version next to the virtual environment name.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_VIRTUALENV_SHOW_PYTHON_VERSION=<span class="literal">false</span></span><br><span class="line">  <span class="comment"># Don&#x27;t show virtualenv if pyenv is already shown.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_VIRTUALENV_SHOW_WITH_PYENV=<span class="literal">false</span></span><br><span class="line">  <span class="comment"># Separate environment name from Python version only with a space.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_VIRTUALENV_&#123;LEFT,RIGHT&#125;_DELIMITER=</span><br><span class="line">  <span class="comment"># Custom icon.</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_VIRTUALENV_VISUAL_IDENTIFIER_EXPANSION=&#x27;⭐&#x27;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">#####################[ anaconda: conda environment (https://conda.io/) ]######################</span></span><br><span class="line">  <span class="comment"># Anaconda environment color.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_ANACONDA_FOREGROUND=0</span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_ANACONDA_BACKGROUND=4</span><br><span class="line"></span><br><span class="line">  <span class="comment"># Anaconda segment format. The following parameters are available within the expansion.</span></span><br><span class="line">  <span class="comment">#</span></span><br><span class="line">  <span class="comment"># - CONDA_PREFIX                 Absolute path to the active Anaconda/Miniconda environment.</span></span><br><span class="line">  <span class="comment"># - CONDA_DEFAULT_ENV            Name of the active Anaconda/Miniconda environment.</span></span><br><span class="line">  <span class="comment"># - CONDA_PROMPT_MODIFIER        Configurable prompt modifier (see below).</span></span><br><span class="line">  <span class="comment"># - P9K_ANACONDA_PYTHON_VERSION  Current python version (python --version).</span></span><br><span class="line">  <span class="comment">#</span></span><br><span class="line">  <span class="comment"># CONDA_PROMPT_MODIFIER can be configured with the following command:</span></span><br><span class="line">  <span class="comment">#</span></span><br><span class="line">  <span class="comment">#     conda config --set env_prompt &#x27;(&#123;default_env&#125;) &#x27;</span></span><br><span class="line">  <span class="comment">#</span></span><br><span class="line">  <span class="comment"># The last argument is a Python format string that can use the following variables:</span></span><br><span class="line">  <span class="comment">#</span></span><br><span class="line">  <span class="comment"># - prefix       The same as CONDA_PREFIX.</span></span><br><span class="line">  <span class="comment"># - default_env  The same as CONDA_DEFAULT_ENV.</span></span><br><span class="line">  <span class="comment"># - name         The last segment of CONDA_PREFIX.</span></span><br><span class="line">  <span class="comment"># - stacked_env  Comma-separated list of names in the environment stack. The first element is</span></span><br><span class="line">  <span class="comment">#                always the same as default_env.</span></span><br><span class="line">  <span class="comment">#</span></span><br><span class="line">  <span class="comment"># Note: &#x27;(&#123;default_env&#125;) &#x27; is the default value of env_prompt.</span></span><br><span class="line">  <span class="comment">#</span></span><br><span class="line">  <span class="comment"># The default value of POWERLEVEL9K_ANACONDA_CONTENT_EXPANSION expands to $CONDA_PROMPT_MODIFIER</span></span><br><span class="line">  <span class="comment"># without the surrounding parentheses, or to the last path component of CONDA_PREFIX if the former</span></span><br><span class="line">  <span class="comment"># is empty.</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_ANACONDA_CONTENT_EXPANSION=&#x27;$&#123;$&#123;$&#123;$&#123;CONDA_PROMPT_MODIFIER#\(&#125;% &#125;%\)&#125;:-$&#123;CONDA_PREFIX:t&#125;&#125;&#x27;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Custom icon.</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_ANACONDA_VISUAL_IDENTIFIER_EXPANSION=&#x27;⭐&#x27;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">################[ pyenv: python environment (https://github.com/pyenv/pyenv) ]################</span></span><br><span class="line">  <span class="comment"># Pyenv color.</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_PYENV_FOREGROUND=0</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_PYENV_BACKGROUND=4</span></span><br><span class="line">  <span class="comment"># Hide python version if it doesn&#x27;t come from one of these sources.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_PYENV_SOURCES=(shell <span class="built_in">local</span> global)</span><br><span class="line">  <span class="comment"># If set to false, hide python version if it&#x27;s the same as global:</span></span><br><span class="line">  <span class="comment"># $(pyenv version-name) == $(pyenv global).</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_PYENV_PROMPT_ALWAYS_SHOW=<span class="literal">false</span></span><br><span class="line">  <span class="comment"># If set to false, hide python version if it&#x27;s equal to &quot;system&quot;.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_PYENV_SHOW_SYSTEM=<span class="literal">true</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Pyenv segment format. The following parameters are available within the expansion.</span></span><br><span class="line">  <span class="comment">#</span></span><br><span class="line">  <span class="comment"># - P9K_CONTENT                Current pyenv environment (pyenv version-name).</span></span><br><span class="line">  <span class="comment"># - P9K_PYENV_PYTHON_VERSION   Current python version (python --version).</span></span><br><span class="line">  <span class="comment">#</span></span><br><span class="line">  <span class="comment"># The default format has the following logic:</span></span><br><span class="line">  <span class="comment">#</span></span><br><span class="line">  <span class="comment"># 1. Display &quot;$P9K_CONTENT $P9K_PYENV_PYTHON_VERSION&quot; if $P9K_PYENV_PYTHON_VERSION is not</span></span><br><span class="line">  <span class="comment">#   empty and unequal to $P9K_CONTENT.</span></span><br><span class="line">  <span class="comment"># 2. Otherwise display just &quot;$P9K_CONTENT&quot;.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_PYENV_CONTENT_EXPANSION=<span class="string">&#x27;$&#123;P9K_CONTENT&#125;$&#123;$&#123;P9K_PYENV_PYTHON_VERSION:#$P9K_CONTENT&#125;:+ $P9K_PYENV_PYTHON_VERSION&#125;&#x27;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Custom icon.</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_PYENV_VISUAL_IDENTIFIER_EXPANSION=&#x27;⭐&#x27;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">################[ goenv: go environment (https://github.com/syndbg/goenv) ]################</span></span><br><span class="line">  <span class="comment"># Goenv color.</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_GOENV_FOREGROUND=0</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_GOENV_BACKGROUND=4</span></span><br><span class="line">  <span class="comment"># Hide go version if it doesn&#x27;t come from one of these sources.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_GOENV_SOURCES=(shell <span class="built_in">local</span> global)</span><br><span class="line">  <span class="comment"># If set to false, hide go version if it&#x27;s the same as global:</span></span><br><span class="line">  <span class="comment"># $(goenv version-name) == $(goenv global).</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_GOENV_PROMPT_ALWAYS_SHOW=<span class="literal">false</span></span><br><span class="line">  <span class="comment"># If set to false, hide go version if it&#x27;s equal to &quot;system&quot;.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_GOENV_SHOW_SYSTEM=<span class="literal">true</span></span><br><span class="line">  <span class="comment"># Custom icon.</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_GOENV_VISUAL_IDENTIFIER_EXPANSION=&#x27;⭐&#x27;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">##########[ nodenv: node.js version from nodenv (https://github.com/nodenv/nodenv) ]##########</span></span><br><span class="line">  <span class="comment"># Nodenv color.</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_NODENV_FOREGROUND=2</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_NODENV_BACKGROUND=0</span></span><br><span class="line">  <span class="comment"># Hide node version if it doesn&#x27;t come from one of these sources.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_NODENV_SOURCES=(shell <span class="built_in">local</span> global)</span><br><span class="line">  <span class="comment"># If set to false, hide node version if it&#x27;s the same as global:</span></span><br><span class="line">  <span class="comment"># $(nodenv version-name) == $(nodenv global).</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_NODENV_PROMPT_ALWAYS_SHOW=<span class="literal">false</span></span><br><span class="line">  <span class="comment"># If set to false, hide node version if it&#x27;s equal to &quot;system&quot;.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_NODENV_SHOW_SYSTEM=<span class="literal">true</span></span><br><span class="line">  <span class="comment"># Custom icon.</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_NODENV_VISUAL_IDENTIFIER_EXPANSION=&#x27;⭐&#x27;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">##############[ nvm: node.js version from nvm (https://github.com/nvm-sh/nvm) ]###############</span></span><br><span class="line">  <span class="comment"># Nvm color.</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_NVM_FOREGROUND=0</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_NVM_BACKGROUND=5</span></span><br><span class="line">  <span class="comment"># Custom icon.</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_NVM_VISUAL_IDENTIFIER_EXPANSION=&#x27;⭐&#x27;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">############[ nodeenv: node.js environment (https://github.com/ekalinin/nodeenv) ]############</span></span><br><span class="line">  <span class="comment"># Nodeenv color.</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_NODEENV_FOREGROUND=2</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_NODEENV_BACKGROUND=0</span></span><br><span class="line">  <span class="comment"># Don&#x27;t show Node version next to the environment name.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_NODEENV_SHOW_NODE_VERSION=<span class="literal">false</span></span><br><span class="line">  <span class="comment"># Separate environment name from Node version only with a space.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_NODEENV_&#123;LEFT,RIGHT&#125;_DELIMITER=</span><br><span class="line">  <span class="comment"># Custom icon.</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_NODEENV_VISUAL_IDENTIFIER_EXPANSION=&#x27;⭐&#x27;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">##############################[ node_version: node.js version ]###############################</span></span><br><span class="line">  <span class="comment"># Node version color.</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_NODE_VERSION_FOREGROUND=7</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_NODE_VERSION_BACKGROUND=2</span></span><br><span class="line">  <span class="comment"># Show node version only when in a directory tree containing package.json.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_NODE_VERSION_PROJECT_ONLY=<span class="literal">true</span></span><br><span class="line">  <span class="comment"># Custom icon.</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_NODE_VERSION_VISUAL_IDENTIFIER_EXPANSION=&#x27;⭐&#x27;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">#######################[ go_version: go version (https://golang.org) ]########################</span></span><br><span class="line">  <span class="comment"># Go version color.</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_GO_VERSION_FOREGROUND=255</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_GO_VERSION_BACKGROUND=2</span></span><br><span class="line">  <span class="comment"># Show go version only when in a go project subdirectory.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_GO_VERSION_PROJECT_ONLY=<span class="literal">true</span></span><br><span class="line">  <span class="comment"># Custom icon.</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_GO_VERSION_VISUAL_IDENTIFIER_EXPANSION=&#x27;⭐&#x27;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">#################[ rust_version: rustc version (https://www.rust-lang.org) ]##################</span></span><br><span class="line">  <span class="comment"># Rust version color.</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_RUST_VERSION_FOREGROUND=0</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_RUST_VERSION_BACKGROUND=208</span></span><br><span class="line">  <span class="comment"># Show rust version only when in a rust project subdirectory.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_RUST_VERSION_PROJECT_ONLY=<span class="literal">true</span></span><br><span class="line">  <span class="comment"># Custom icon.</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_RUST_VERSION_VISUAL_IDENTIFIER_EXPANSION=&#x27;⭐&#x27;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">###############[ dotnet_version: .NET version (https://dotnet.microsoft.com) ]################</span></span><br><span class="line">  <span class="comment"># .NET version color.</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_DOTNET_VERSION_FOREGROUND=7</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_DOTNET_VERSION_BACKGROUND=5</span></span><br><span class="line">  <span class="comment"># Show .NET version only when in a .NET project subdirectory.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_DOTNET_VERSION_PROJECT_ONLY=<span class="literal">true</span></span><br><span class="line">  <span class="comment"># Custom icon.</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_DOTNET_VERSION_VISUAL_IDENTIFIER_EXPANSION=&#x27;⭐&#x27;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">#####################[ php_version: php version (https://www.php.net/) ]######################</span></span><br><span class="line">  <span class="comment"># PHP version color.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_PHP_VERSION_FOREGROUND=0</span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_PHP_VERSION_BACKGROUND=5</span><br><span class="line">  <span class="comment"># Show PHP version only when in a PHP project subdirectory.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_PHP_VERSION_PROJECT_ONLY=<span class="literal">true</span></span><br><span class="line">  <span class="comment"># Custom icon.</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_PHP_VERSION_VISUAL_IDENTIFIER_EXPANSION=&#x27;⭐&#x27;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">##########[ laravel_version: laravel php framework version (https://laravel.com/) ]###########</span></span><br><span class="line">  <span class="comment"># Laravel version color.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_LARAVEL_VERSION_FOREGROUND=1</span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_LARAVEL_VERSION_BACKGROUND=7</span><br><span class="line">  <span class="comment"># Custom icon.</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_LARAVEL_VERSION_VISUAL_IDENTIFIER_EXPANSION=&#x27;⭐&#x27;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">#############[ rbenv: ruby version from rbenv (https://github.com/rbenv/rbenv) ]##############</span></span><br><span class="line">  <span class="comment"># Rbenv color.</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_RBENV_FOREGROUND=0</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_RBENV_BACKGROUND=1</span></span><br><span class="line">  <span class="comment"># Hide ruby version if it doesn&#x27;t come from one of these sources.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_RBENV_SOURCES=(shell <span class="built_in">local</span> global)</span><br><span class="line">  <span class="comment"># If set to false, hide ruby version if it&#x27;s the same as global:</span></span><br><span class="line">  <span class="comment"># $(rbenv version-name) == $(rbenv global).</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_RBENV_PROMPT_ALWAYS_SHOW=<span class="literal">false</span></span><br><span class="line">  <span class="comment"># If set to false, hide ruby version if it&#x27;s equal to &quot;system&quot;.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_RBENV_SHOW_SYSTEM=<span class="literal">true</span></span><br><span class="line">  <span class="comment"># Custom icon.</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_RBENV_VISUAL_IDENTIFIER_EXPANSION=&#x27;⭐&#x27;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">####################[ java_version: java version (https://www.java.com/) ]####################</span></span><br><span class="line">  <span class="comment"># Java version color.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_JAVA_VERSION_FOREGROUND=1</span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_JAVA_VERSION_BACKGROUND=7</span><br><span class="line">  <span class="comment"># Show java version only when in a java project subdirectory.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_JAVA_VERSION_PROJECT_ONLY=<span class="literal">true</span></span><br><span class="line">  <span class="comment"># Show brief version.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_JAVA_VERSION_FULL=<span class="literal">false</span></span><br><span class="line">  <span class="comment"># Custom icon.</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_JAVA_VERSION_VISUAL_IDENTIFIER_EXPANSION=&#x27;⭐&#x27;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">###[ package: name@version from package.json (https://docs.npmjs.com/files/package.json) ]####</span></span><br><span class="line">  <span class="comment"># Package color.</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_PACKAGE_FOREGROUND=0</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_PACKAGE_BACKGROUND=6</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Package format. The following parameters are available within the expansion.</span></span><br><span class="line">  <span class="comment">#</span></span><br><span class="line">  <span class="comment"># - P9K_PACKAGE_NAME     The value of `name` field in package.json.</span></span><br><span class="line">  <span class="comment"># - P9K_PACKAGE_VERSION  The value of `version` field in package.json.</span></span><br><span class="line">  <span class="comment">#</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_PACKAGE_CONTENT_EXPANSION=&#x27;$&#123;P9K_PACKAGE_NAME//\%/%%&#125;@$&#123;P9K_PACKAGE_VERSION//\%/%%&#125;&#x27;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Custom icon.</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_PACKAGE_VISUAL_IDENTIFIER_EXPANSION=&#x27;⭐&#x27;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">#######################[ rvm: ruby version from rvm (https://rvm.io) ]########################</span></span><br><span class="line">  <span class="comment"># Rvm color.</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_RVM_FOREGROUND=0</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_RVM_BACKGROUND=240</span></span><br><span class="line">  <span class="comment"># Don&#x27;t show @gemset at the end.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_RVM_SHOW_GEMSET=<span class="literal">false</span></span><br><span class="line">  <span class="comment"># Don&#x27;t show ruby- at the front.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_RVM_SHOW_PREFIX=<span class="literal">false</span></span><br><span class="line">  <span class="comment"># Custom icon.</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_RVM_VISUAL_IDENTIFIER_EXPANSION=&#x27;⭐&#x27;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">###########[ fvm: flutter version management (https://github.com/leoafarias/fvm) ]############</span></span><br><span class="line">  <span class="comment"># Fvm color.</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_FVM_FOREGROUND=0</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_FVM_BACKGROUND=4</span></span><br><span class="line">  <span class="comment"># Custom icon.</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_FVM_VISUAL_IDENTIFIER_EXPANSION=&#x27;⭐&#x27;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">##########[ luaenv: lua version from luaenv (https://github.com/cehoffman/luaenv) ]###########</span></span><br><span class="line">  <span class="comment"># Lua color.</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_LUAENV_FOREGROUND=0</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_LUAENV_BACKGROUND=4</span></span><br><span class="line">  <span class="comment"># Hide lua version if it doesn&#x27;t come from one of these sources.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_LUAENV_SOURCES=(shell <span class="built_in">local</span> global)</span><br><span class="line">  <span class="comment"># If set to false, hide lua version if it&#x27;s the same as global:</span></span><br><span class="line">  <span class="comment"># $(luaenv version-name) == $(luaenv global).</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_LUAENV_PROMPT_ALWAYS_SHOW=<span class="literal">false</span></span><br><span class="line">  <span class="comment"># If set to false, hide lua version if it&#x27;s equal to &quot;system&quot;.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_LUAENV_SHOW_SYSTEM=<span class="literal">true</span></span><br><span class="line">  <span class="comment"># Custom icon.</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_LUAENV_VISUAL_IDENTIFIER_EXPANSION=&#x27;⭐&#x27;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">###############[ jenv: java version from jenv (https://github.com/jenv/jenv) ]################</span></span><br><span class="line">  <span class="comment"># Java color.</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_JENV_FOREGROUND=1</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_JENV_BACKGROUND=7</span></span><br><span class="line">  <span class="comment"># Hide java version if it doesn&#x27;t come from one of these sources.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_JENV_SOURCES=(shell <span class="built_in">local</span> global)</span><br><span class="line">  <span class="comment"># If set to false, hide java version if it&#x27;s the same as global:</span></span><br><span class="line">  <span class="comment"># $(jenv version-name) == $(jenv global).</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_JENV_PROMPT_ALWAYS_SHOW=<span class="literal">false</span></span><br><span class="line">  <span class="comment"># If set to false, hide java version if it&#x27;s equal to &quot;system&quot;.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_JENV_SHOW_SYSTEM=<span class="literal">true</span></span><br><span class="line">  <span class="comment"># Custom icon.</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_JENV_VISUAL_IDENTIFIER_EXPANSION=&#x27;⭐&#x27;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">###########[ plenv: perl version from plenv (https://github.com/tokuhirom/plenv) ]############</span></span><br><span class="line">  <span class="comment"># Perl color.</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_PLENV_FOREGROUND=0</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_PLENV_BACKGROUND=4</span></span><br><span class="line">  <span class="comment"># Hide perl version if it doesn&#x27;t come from one of these sources.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_PLENV_SOURCES=(shell <span class="built_in">local</span> global)</span><br><span class="line">  <span class="comment"># If set to false, hide perl version if it&#x27;s the same as global:</span></span><br><span class="line">  <span class="comment"># $(plenv version-name) == $(plenv global).</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_PLENV_PROMPT_ALWAYS_SHOW=<span class="literal">false</span></span><br><span class="line">  <span class="comment"># If set to false, hide perl version if it&#x27;s equal to &quot;system&quot;.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_PLENV_SHOW_SYSTEM=<span class="literal">true</span></span><br><span class="line">  <span class="comment"># Custom icon.</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_PLENV_VISUAL_IDENTIFIER_EXPANSION=&#x27;⭐&#x27;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">############[ phpenv: php version from phpenv (https://github.com/phpenv/phpenv) ]############</span></span><br><span class="line">  <span class="comment"># PHP color.</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_PHPENV_FOREGROUND=0</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_PHPENV_BACKGROUND=5</span></span><br><span class="line">  <span class="comment"># Hide php version if it doesn&#x27;t come from one of these sources.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_PHPENV_SOURCES=(shell <span class="built_in">local</span> global)</span><br><span class="line">  <span class="comment"># If set to false, hide php version if it&#x27;s the same as global:</span></span><br><span class="line">  <span class="comment"># $(phpenv version-name) == $(phpenv global).</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_PHPENV_PROMPT_ALWAYS_SHOW=<span class="literal">false</span></span><br><span class="line">  <span class="comment"># If set to false, hide PHP version if it&#x27;s equal to &quot;system&quot;.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_PHPENV_SHOW_SYSTEM=<span class="literal">true</span></span><br><span class="line">  <span class="comment"># Custom icon.</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_PHPENV_VISUAL_IDENTIFIER_EXPANSION=&#x27;⭐&#x27;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">##########[ haskell_stack: haskell version from stack (https://haskellstack.org/) ]###########</span></span><br><span class="line">  <span class="comment"># Haskell color.</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_HASKELL_STACK_FOREGROUND=0</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_HASKELL_STACK_BACKGROUND=3</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Hide haskell version if it doesn&#x27;t come from one of these sources.</span></span><br><span class="line">  <span class="comment">#</span></span><br><span class="line">  <span class="comment">#   shell:  version is set by STACK_YAML</span></span><br><span class="line">  <span class="comment">#   local:  version is set by stack.yaml up the directory tree</span></span><br><span class="line">  <span class="comment">#   global: version is set by the implicit global project (~/.stack/global-project/stack.yaml)</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_HASKELL_STACK_SOURCES=(shell <span class="built_in">local</span>)</span><br><span class="line">  <span class="comment"># If set to false, hide haskell version if it&#x27;s the same as in the implicit global project.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_HASKELL_STACK_ALWAYS_SHOW=<span class="literal">true</span></span><br><span class="line">  <span class="comment"># Custom icon.</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_HASKELL_STACK_VISUAL_IDENTIFIER_EXPANSION=&#x27;⭐&#x27;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">################[ terraform: terraform workspace (https://www.terraform.io) ]#################</span></span><br><span class="line">  <span class="comment"># Don&#x27;t show terraform workspace if it&#x27;s literally &quot;default&quot;.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_TERRAFORM_SHOW_DEFAULT=<span class="literal">false</span></span><br><span class="line">  <span class="comment"># POWERLEVEL9K_TERRAFORM_CLASSES is an array with even number of elements. The first element</span></span><br><span class="line">  <span class="comment"># in each pair defines a pattern against which the current terraform workspace gets matched.</span></span><br><span class="line">  <span class="comment"># More specifically, it&#x27;s P9K_CONTENT prior to the application of context expansion (see below)</span></span><br><span class="line">  <span class="comment"># that gets matched. If you unset all POWERLEVEL9K_TERRAFORM_*CONTENT_EXPANSION parameters,</span></span><br><span class="line">  <span class="comment"># you&#x27;ll see this value in your prompt. The second element of each pair in</span></span><br><span class="line">  <span class="comment"># POWERLEVEL9K_TERRAFORM_CLASSES defines the workspace class. Patterns are tried in order. The</span></span><br><span class="line">  <span class="comment"># first match wins.</span></span><br><span class="line">  <span class="comment">#</span></span><br><span class="line">  <span class="comment"># For example, given these settings:</span></span><br><span class="line">  <span class="comment">#</span></span><br><span class="line">  <span class="comment">#   typeset -g POWERLEVEL9K_TERRAFORM_CLASSES=(</span></span><br><span class="line">  <span class="comment">#     &#x27;*prod*&#x27;  PROD</span></span><br><span class="line">  <span class="comment">#     &#x27;*test*&#x27;  TEST</span></span><br><span class="line">  <span class="comment">#     &#x27;*&#x27;       OTHER)</span></span><br><span class="line">  <span class="comment">#</span></span><br><span class="line">  <span class="comment"># If your current terraform workspace is &quot;project_test&quot;, its class is TEST because &quot;project_test&quot;</span></span><br><span class="line">  <span class="comment"># doesn&#x27;t match the pattern &#x27;*prod*&#x27; but does match &#x27;*test*&#x27;.</span></span><br><span class="line">  <span class="comment">#</span></span><br><span class="line">  <span class="comment"># You can define different colors, icons and content expansions for different classes:</span></span><br><span class="line">  <span class="comment">#</span></span><br><span class="line">  <span class="comment">#   typeset -g POWERLEVEL9K_TERRAFORM_TEST_FOREGROUND=2</span></span><br><span class="line">  <span class="comment">#   typeset -g POWERLEVEL9K_TERRAFORM_TEST_BACKGROUND=0</span></span><br><span class="line">  <span class="comment">#   typeset -g POWERLEVEL9K_TERRAFORM_TEST_VISUAL_IDENTIFIER_EXPANSION=&#x27;⭐&#x27;</span></span><br><span class="line">  <span class="comment">#   typeset -g POWERLEVEL9K_TERRAFORM_TEST_CONTENT_EXPANSION=&#x27;&gt; $&#123;P9K_CONTENT&#125; &lt;&#x27;</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_TERRAFORM_CLASSES=(</span><br><span class="line">      <span class="comment"># &#x27;*prod*&#x27;  PROD    # These values are examples that are unlikely</span></span><br><span class="line">      <span class="comment"># &#x27;*test*&#x27;  TEST    # to match your needs. Customize them as needed.</span></span><br><span class="line">      <span class="string">&#x27;*&#x27;</span>         OTHER)</span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_TERRAFORM_OTHER_FOREGROUND=4</span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_TERRAFORM_OTHER_BACKGROUND=0</span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_TERRAFORM_OTHER_VISUAL_IDENTIFIER_EXPANSION=&#x27;⭐&#x27;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">#############[ kubecontext: current kubernetes context (https://kubernetes.io/) ]#############</span></span><br><span class="line">  <span class="comment"># Show kubecontext only when the the command you are typing invokes one of these tools.</span></span><br><span class="line">  <span class="comment"># Tip: Remove the next line to always show kubecontext.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_KUBECONTEXT_SHOW_ON_COMMAND=<span class="string">&#x27;kubectl|helm|kubens|kubectx|oc|istioctl|kogito&#x27;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Kubernetes context classes for the purpose of using different colors, icons and expansions with</span></span><br><span class="line">  <span class="comment"># different contexts.</span></span><br><span class="line">  <span class="comment">#</span></span><br><span class="line">  <span class="comment"># POWERLEVEL9K_KUBECONTEXT_CLASSES is an array with even number of elements. The first element</span></span><br><span class="line">  <span class="comment"># in each pair defines a pattern against which the current kubernetes context gets matched.</span></span><br><span class="line">  <span class="comment"># More specifically, it&#x27;s P9K_CONTENT prior to the application of context expansion (see below)</span></span><br><span class="line">  <span class="comment"># that gets matched. If you unset all POWERLEVEL9K_KUBECONTEXT_*CONTENT_EXPANSION parameters,</span></span><br><span class="line">  <span class="comment"># you&#x27;ll see this value in your prompt. The second element of each pair in</span></span><br><span class="line">  <span class="comment"># POWERLEVEL9K_KUBECONTEXT_CLASSES defines the context class. Patterns are tried in order. The</span></span><br><span class="line">  <span class="comment"># first match wins.</span></span><br><span class="line">  <span class="comment">#</span></span><br><span class="line">  <span class="comment"># For example, given these settings:</span></span><br><span class="line">  <span class="comment">#</span></span><br><span class="line">  <span class="comment">#   typeset -g POWERLEVEL9K_KUBECONTEXT_CLASSES=(</span></span><br><span class="line">  <span class="comment">#     &#x27;*prod*&#x27;  PROD</span></span><br><span class="line">  <span class="comment">#     &#x27;*test*&#x27;  TEST</span></span><br><span class="line">  <span class="comment">#     &#x27;*&#x27;       DEFAULT)</span></span><br><span class="line">  <span class="comment">#</span></span><br><span class="line">  <span class="comment"># If your current kubernetes context is &quot;deathray-testing/default&quot;, its class is TEST</span></span><br><span class="line">  <span class="comment"># because &quot;deathray-testing/default&quot; doesn&#x27;t match the pattern &#x27;*prod*&#x27; but does match &#x27;*test*&#x27;.</span></span><br><span class="line">  <span class="comment">#</span></span><br><span class="line">  <span class="comment"># You can define different colors, icons and content expansions for different classes:</span></span><br><span class="line">  <span class="comment">#</span></span><br><span class="line">  <span class="comment">#   typeset -g POWERLEVEL9K_KUBECONTEXT_TEST_FOREGROUND=0</span></span><br><span class="line">  <span class="comment">#   typeset -g POWERLEVEL9K_KUBECONTEXT_TEST_BACKGROUND=2</span></span><br><span class="line">  <span class="comment">#   typeset -g POWERLEVEL9K_KUBECONTEXT_TEST_VISUAL_IDENTIFIER_EXPANSION=&#x27;⭐&#x27;</span></span><br><span class="line">  <span class="comment">#   typeset -g POWERLEVEL9K_KUBECONTEXT_TEST_CONTENT_EXPANSION=&#x27;&gt; $&#123;P9K_CONTENT&#125; &lt;&#x27;</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_KUBECONTEXT_CLASSES=(</span><br><span class="line">      <span class="comment"># &#x27;*prod*&#x27;  PROD    # These values are examples that are unlikely</span></span><br><span class="line">      <span class="comment"># &#x27;*test*&#x27;  TEST    # to match your needs. Customize them as needed.</span></span><br><span class="line">      <span class="string">&#x27;*&#x27;</span>       DEFAULT)</span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_KUBECONTEXT_DEFAULT_FOREGROUND=7</span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_KUBECONTEXT_DEFAULT_BACKGROUND=5</span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_KUBECONTEXT_DEFAULT_VISUAL_IDENTIFIER_EXPANSION=&#x27;⭐&#x27;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Use POWERLEVEL9K_KUBECONTEXT_CONTENT_EXPANSION to specify the content displayed by kubecontext</span></span><br><span class="line">  <span class="comment"># segment. Parameter expansions are very flexible and fast, too. See reference:</span></span><br><span class="line">  <span class="comment"># http://zsh.sourceforge.net/Doc/Release/Expansion.html#Parameter-Expansion.</span></span><br><span class="line">  <span class="comment">#</span></span><br><span class="line">  <span class="comment"># Within the expansion the following parameters are always available:</span></span><br><span class="line">  <span class="comment">#</span></span><br><span class="line">  <span class="comment"># - P9K_CONTENT                The content that would&#x27;ve been displayed if there was no content</span></span><br><span class="line">  <span class="comment">#                              expansion defined.</span></span><br><span class="line">  <span class="comment"># - P9K_KUBECONTEXT_NAME       The current context&#x27;s name. Corresponds to column NAME in the</span></span><br><span class="line">  <span class="comment">#                              output of `kubectl config get-contexts`.</span></span><br><span class="line">  <span class="comment"># - P9K_KUBECONTEXT_CLUSTER    The current context&#x27;s cluster. Corresponds to column CLUSTER in the</span></span><br><span class="line">  <span class="comment">#                              output of `kubectl config get-contexts`.</span></span><br><span class="line">  <span class="comment"># - P9K_KUBECONTEXT_NAMESPACE  The current context&#x27;s namespace. Corresponds to column NAMESPACE</span></span><br><span class="line">  <span class="comment">#                              in the output of `kubectl config get-contexts`. If there is no</span></span><br><span class="line">  <span class="comment">#                              namespace, the parameter is set to &quot;default&quot;.</span></span><br><span class="line">  <span class="comment"># - P9K_KUBECONTEXT_USER       The current context&#x27;s user. Corresponds to column AUTHINFO in the</span></span><br><span class="line">  <span class="comment">#                              output of `kubectl config get-contexts`.</span></span><br><span class="line">  <span class="comment">#</span></span><br><span class="line">  <span class="comment"># If the context points to Google Kubernetes Engine (GKE) or Elastic Kubernetes Service (EKS),</span></span><br><span class="line">  <span class="comment"># the following extra parameters are available:</span></span><br><span class="line">  <span class="comment">#</span></span><br><span class="line">  <span class="comment"># - P9K_KUBECONTEXT_CLOUD_NAME     Either &quot;gke&quot; or &quot;eks&quot;.</span></span><br><span class="line">  <span class="comment"># - P9K_KUBECONTEXT_CLOUD_ACCOUNT  Account/project ID.</span></span><br><span class="line">  <span class="comment"># - P9K_KUBECONTEXT_CLOUD_ZONE     Availability zone.</span></span><br><span class="line">  <span class="comment"># - P9K_KUBECONTEXT_CLOUD_CLUSTER  Cluster.</span></span><br><span class="line">  <span class="comment">#</span></span><br><span class="line">  <span class="comment"># P9K_KUBECONTEXT_CLOUD_* parameters are derived from P9K_KUBECONTEXT_CLUSTER. For example,</span></span><br><span class="line">  <span class="comment"># if P9K_KUBECONTEXT_CLUSTER is &quot;gke_my-account_us-east1-a_my-cluster-01&quot;:</span></span><br><span class="line">  <span class="comment">#</span></span><br><span class="line">  <span class="comment">#   - P9K_KUBECONTEXT_CLOUD_NAME=gke</span></span><br><span class="line">  <span class="comment">#   - P9K_KUBECONTEXT_CLOUD_ACCOUNT=my-account</span></span><br><span class="line">  <span class="comment">#   - P9K_KUBECONTEXT_CLOUD_ZONE=us-east1-a</span></span><br><span class="line">  <span class="comment">#   - P9K_KUBECONTEXT_CLOUD_CLUSTER=my-cluster-01</span></span><br><span class="line">  <span class="comment">#</span></span><br><span class="line">  <span class="comment"># If P9K_KUBECONTEXT_CLUSTER is &quot;arn:aws:eks:us-east-1:123456789012:cluster/my-cluster-01&quot;:</span></span><br><span class="line">  <span class="comment">#</span></span><br><span class="line">  <span class="comment">#   - P9K_KUBECONTEXT_CLOUD_NAME=eks</span></span><br><span class="line">  <span class="comment">#   - P9K_KUBECONTEXT_CLOUD_ACCOUNT=123456789012</span></span><br><span class="line">  <span class="comment">#   - P9K_KUBECONTEXT_CLOUD_ZONE=us-east-1</span></span><br><span class="line">  <span class="comment">#   - P9K_KUBECONTEXT_CLOUD_CLUSTER=my-cluster-01</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_KUBECONTEXT_DEFAULT_CONTENT_EXPANSION=</span><br><span class="line">  <span class="comment"># Show P9K_KUBECONTEXT_CLOUD_CLUSTER if it&#x27;s not empty and fall back to P9K_KUBECONTEXT_NAME.</span></span><br><span class="line">  POWERLEVEL9K_KUBECONTEXT_DEFAULT_CONTENT_EXPANSION+=<span class="string">&#x27;$&#123;P9K_KUBECONTEXT_CLOUD_CLUSTER:-$&#123;P9K_KUBECONTEXT_NAME&#125;&#125;&#x27;</span></span><br><span class="line">  <span class="comment"># Append the current context&#x27;s namespace if it&#x27;s not &quot;default&quot;.</span></span><br><span class="line">  POWERLEVEL9K_KUBECONTEXT_DEFAULT_CONTENT_EXPANSION+=<span class="string">&#x27;$&#123;$&#123;:-/$P9K_KUBECONTEXT_NAMESPACE&#125;:#/default&#125;&#x27;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Custom prefix.</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_KUBECONTEXT_PREFIX=&#x27;at &#x27;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">#[ aws: aws profile (https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-profiles.html) ]#</span></span><br><span class="line">  <span class="comment"># Show aws only when the the command you are typing invokes one of these tools.</span></span><br><span class="line">  <span class="comment"># Tip: Remove the next line to always show aws.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_AWS_SHOW_ON_COMMAND=<span class="string">&#x27;aws|awless|terraform|pulumi&#x27;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># POWERLEVEL9K_AWS_CLASSES is an array with even number of elements. The first element</span></span><br><span class="line">  <span class="comment"># in each pair defines a pattern against which the current AWS profile gets matched.</span></span><br><span class="line">  <span class="comment"># More specifically, it&#x27;s P9K_CONTENT prior to the application of context expansion (see below)</span></span><br><span class="line">  <span class="comment"># that gets matched. If you unset all POWERLEVEL9K_AWS_*CONTENT_EXPANSION parameters,</span></span><br><span class="line">  <span class="comment"># you&#x27;ll see this value in your prompt. The second element of each pair in</span></span><br><span class="line">  <span class="comment"># POWERLEVEL9K_AWS_CLASSES defines the profile class. Patterns are tried in order. The</span></span><br><span class="line">  <span class="comment"># first match wins.</span></span><br><span class="line">  <span class="comment">#</span></span><br><span class="line">  <span class="comment"># For example, given these settings:</span></span><br><span class="line">  <span class="comment">#</span></span><br><span class="line">  <span class="comment">#   typeset -g POWERLEVEL9K_AWS_CLASSES=(</span></span><br><span class="line">  <span class="comment">#     &#x27;*prod*&#x27;  PROD</span></span><br><span class="line">  <span class="comment">#     &#x27;*test*&#x27;  TEST</span></span><br><span class="line">  <span class="comment">#     &#x27;*&#x27;       DEFAULT)</span></span><br><span class="line">  <span class="comment">#</span></span><br><span class="line">  <span class="comment"># If your current AWS profile is &quot;company_test&quot;, its class is TEST</span></span><br><span class="line">  <span class="comment"># because &quot;company_test&quot; doesn&#x27;t match the pattern &#x27;*prod*&#x27; but does match &#x27;*test*&#x27;.</span></span><br><span class="line">  <span class="comment">#</span></span><br><span class="line">  <span class="comment"># You can define different colors, icons and content expansions for different classes:</span></span><br><span class="line">  <span class="comment">#</span></span><br><span class="line">  <span class="comment">#   typeset -g POWERLEVEL9K_AWS_TEST_FOREGROUND=28</span></span><br><span class="line">  <span class="comment">#   typeset -g POWERLEVEL9K_AWS_TEST_VISUAL_IDENTIFIER_EXPANSION=&#x27;⭐&#x27;</span></span><br><span class="line">  <span class="comment">#   typeset -g POWERLEVEL9K_AWS_TEST_CONTENT_EXPANSION=&#x27;&gt; $&#123;P9K_CONTENT&#125; &lt;&#x27;</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_AWS_CLASSES=(</span><br><span class="line">      <span class="comment"># &#x27;*prod*&#x27;  PROD    # These values are examples that are unlikely</span></span><br><span class="line">      <span class="comment"># &#x27;*test*&#x27;  TEST    # to match your needs. Customize them as needed.</span></span><br><span class="line">      <span class="string">&#x27;*&#x27;</span>       DEFAULT)</span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_AWS_DEFAULT_FOREGROUND=7</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_AWS_DEFAULT_BACKGROUND=1</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_AWS_DEFAULT_VISUAL_IDENTIFIER_EXPANSION=&#x27;⭐&#x27;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">#[ aws_eb_env: aws elastic beanstalk environment (https://aws.amazon.com/elasticbeanstalk/) ]#</span></span><br><span class="line">  <span class="comment"># AWS Elastic Beanstalk environment color.</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_AWS_EB_ENV_FOREGROUND=2</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_AWS_EB_ENV_BACKGROUND=0</span></span><br><span class="line">  <span class="comment"># Custom icon.</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_AWS_EB_ENV_VISUAL_IDENTIFIER_EXPANSION=&#x27;⭐&#x27;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">##########[ azure: azure account name (https://docs.microsoft.com/en-us/cli/azure) ]##########</span></span><br><span class="line">  <span class="comment"># Show azure only when the the command you are typing invokes one of these tools.</span></span><br><span class="line">  <span class="comment"># Tip: Remove the next line to always show azure.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_AZURE_SHOW_ON_COMMAND=<span class="string">&#x27;az|terraform|pulumi&#x27;</span></span><br><span class="line">  <span class="comment"># Azure account name color.</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_AZURE_FOREGROUND=7</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_AZURE_BACKGROUND=4</span></span><br><span class="line">  <span class="comment"># Custom icon.</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_AZURE_VISUAL_IDENTIFIER_EXPANSION=&#x27;⭐&#x27;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">##########[ gcloud: google cloud account and project (https://cloud.google.com/) ]###########</span></span><br><span class="line">  <span class="comment"># Show gcloud only when the the command you are typing invokes one of these tools.</span></span><br><span class="line">  <span class="comment"># Tip: Remove the next line to always show gcloud.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_GCLOUD_SHOW_ON_COMMAND=<span class="string">&#x27;gcloud|gcs&#x27;</span></span><br><span class="line">  <span class="comment"># Google cloud color.</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_GCLOUD_FOREGROUND=7</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_GCLOUD_BACKGROUND=4</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Google cloud format. Change the value of POWERLEVEL9K_GCLOUD_PARTIAL_CONTENT_EXPANSION and/or</span></span><br><span class="line">  <span class="comment"># POWERLEVEL9K_GCLOUD_COMPLETE_CONTENT_EXPANSION if the default is too verbose or not informative</span></span><br><span class="line">  <span class="comment"># enough. You can use the following parameters in the expansions. Each of them corresponds to the</span></span><br><span class="line">  <span class="comment"># output of `gcloud` tool.</span></span><br><span class="line">  <span class="comment">#</span></span><br><span class="line">  <span class="comment">#   Parameter                | Source</span></span><br><span class="line">  <span class="comment">#   -------------------------|--------------------------------------------------------------------</span></span><br><span class="line">  <span class="comment">#   P9K_GCLOUD_CONFIGURATION | gcloud config configurations list --format=&#x27;value(name)&#x27;</span></span><br><span class="line">  <span class="comment">#   P9K_GCLOUD_ACCOUNT       | gcloud config get-value account</span></span><br><span class="line">  <span class="comment">#   P9K_GCLOUD_PROJECT_ID    | gcloud config get-value project</span></span><br><span class="line">  <span class="comment">#   P9K_GCLOUD_PROJECT_NAME  | gcloud projects describe $P9K_GCLOUD_PROJECT_ID --format=&#x27;value(name)&#x27;</span></span><br><span class="line">  <span class="comment">#</span></span><br><span class="line">  <span class="comment"># Note: $&#123;VARIABLE//\%/%%&#125; expands to $&#123;VARIABLE&#125; with all occurences of &#x27;%&#x27; replaced with &#x27;%%&#x27;.</span></span><br><span class="line">  <span class="comment">#</span></span><br><span class="line">  <span class="comment"># Obtaining project name requires sending a request to Google servers. This can take a long time</span></span><br><span class="line">  <span class="comment"># and even fail. When project name is unknown, P9K_[&lt;64;37;10MGCLOUD_PROJECT_NAME is not set and gcloud</span></span><br><span class="line">  <span class="comment"># prompt segment is in state PARTIAL. When project name gets known, P9K_GCLOUD_PROJECT_NAME gets</span></span><br><span class="line">  <span class="comment"># set and gcloud prompt segment transitions to state COMPLETE.</span></span><br><span class="line">  <span class="comment">#</span></span><br><span class="line">  <span class="comment"># You can customize the format, icon and colors of gcloud segment separately for states PARTIAL</span></span><br><span class="line">  <span class="comment"># and COMPLETE. You can also hide gcloud in state PARTIAL by setting</span></span><br><span class="line">  <span class="comment"># POWERLEVEL9K_GCLOUD_PARTIAL_VISUAL_IDENTIFIER_EXPANSION and</span></span><br><span class="line">  <span class="comment"># POWERLEVEL9K_GCLOUD_PARTIAL_CONTENT_EXPANSION to empty.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_GCLOUD_PARTIAL_CONTENT_EXPANSION=<span class="string">&#x27;$&#123;P9K_GCLOUD_PROJECT_ID//\%/%%&#125;&#x27;</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_GCLOUD_COMPLETE_CONTENT_EXPANSION=<span class="string">&#x27;$&#123;P9K_GCLOUD_PROJECT_NAME//\%/%%&#125;&#x27;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Send a request to Google (by means of `gcloud projects describe ...`) t[&lt;64;37;10M[&lt;64;37;10Mo obtain project name</span></span><br><span class="line">  <span class="comment"># this often. Negative value disables periodic polling. In this mode project name is retrieved</span></span><br><span class="line">  <span class="comment"># only when the current configuration, account or project id changes.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_GCLOUD_REFRESH_PROJECT_NAME_SECONDS=60</span><br><span class="line"></span><br><span class="line">  <span class="comment"># Custom icon.</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_GCLOUD_VISUAL_IDENTIFIER_EXPANSION=&#x27;⭐&#x27;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">#[ google_app_cred: google application credentials (https://cloud.google.com/docs/authentication/production) ]#</span></span><br><span class="line">  <span class="comment"># Show google_app_cred only when the the command you are typing invokes one of these tools.</span></span><br><span class="line">  <span class="comment"># Tip: Remove the next line to always show google_app_cred.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_GOOGLE_APP_CRED_SHOW_ON_COMMAND=<span class="string">&#x27;terraform|pulumi&#x27;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Google application credentials classes for the purpose of using different [&lt;64;37;10M[&lt;64;37;10M[&lt;64;37;10M[&lt;64;37;10Mcolors, icons and</span></span><br><span class="line">  <span class="comment"># expansions with different credentials.</span></span><br><span class="line">  <span class="comment">#</span></span><br><span class="line">  <span class="comment"># POWERLEVEL9K_GOOGLE_APP_CRED_CLASSES is an array with even number of elements. The first</span></span><br><span class="line">  <span class="comment"># element in each pair defines a pattern against which the current kubernetes context gets</span></span><br><span class="line">  <span class="comment"># matched. More specifically, it&#x27;s P9K_CONTENT prior to the application of context expansion</span></span><br><span class="line">  <span class="comment"># (see below) that gets matched. If you unset all POWERLEVEL9K_GOOGLE_APP_CRED_*CONTENT_EXPANSION</span></span><br><span class="line">  <span class="comment"># parameters, you&#x27;ll see this value in your prompt. The second element of each pair in</span></span><br><span class="line">  <span class="comment"># POWERLEVEL9K_GOOGLE_APP_CRED_CLASSES defines the context class. Patterns are tried in order.</span></span><br><span class="line">  <span class="comment"># The first match wins.</span></span><br><span class="line">  <span class="comment">#</span></span><br><span class="line">  <span class="comment"># For example, given these settings:</span></span><br><span class="line">  <span class="comment">#</span></span><br><span class="line">  <span class="comment">#   typeset -g POWERLEVEL9K_GOOGLE_APP_CRED_CLASSES=(</span></span><br><span class="line">  <span class="comment">#    [&lt;64;37;10M[&lt;64;37;10M &#x27;*:*prod*:*&#x27;  PROD</span></span><br><span class="line">  <span class="comment">#     &#x27;*:*test*:*&#x27;  TEST</span></span><br><span class="line">  <span class="comment">#     &#x27;*&#x27;           DEFAULT)</span></span><br><span class="line">  <span class="comment">#</span></span><br><span class="line">  <span class="comment"># If your current Google application credentials is &quot;service_account deathray-testing x@y.com&quot;,</span></span><br><span class="line">  <span class="comment"># its class is TEST because it doesn&#x27;t match the pattern &#x27;* *prod* *&#x27; but does match &#x27;* *test* *&#x27;.</span></span><br><span class="line">  <span class="comment">#</span></span><br><span class="line">  <span class="comment"># You can define different colors, icons and content expansions for different classes:</span></span><br><span class="line">  <span class="comment">#</span></span><br><span class="line">  <span class="comment">#   typeset -g POWERLEVEL9K_GOOGLE_APP_CRED_TEST_FOREGROUND=28</span></span><br><span class="line">  <span class="comment">#   typeset -g POWERLEVEL9K_GOOGLE_APP_CRED_TEST_VISUAL_IDENTIFIER_EXPANSION=&#x27;⭐&#x27;</span></span><br><span class="line">  <span class="comment">#   typeset -g POWERLEVEL9K_GOOGLE_APP_CRED_TEST_CONTENT_EXPANSION=&#x27;$P9K_GOOGLE_APP_CRED_PROJECT_ID&#x27;</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_GOOGLE_APP_CRED_CLASSES=(</span><br><span class="line">      <span class="comment"># &#x27;*:*prod*:*&#x27;  PROD    # These values are examples that are unlikely</span></span><br><span class="line">      <span class="comment"># &#x27;*:[&lt;64;37;10M[&lt;64;37;10M[&lt;64;37;10M[&lt;64;37;10M*test*:*&#x27;  TEST    # to match your needs. Customize them as needed.</span></span><br><span class="line">      <span class="string">&#x27;*&#x27;</span>             DEFAULT)</span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_GOOGLE_APP_CRED_DEFAULT_FOREGROUND=7</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_GOOGLE_APP_CRED_DEFAULT_BACKGROUND=4</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_GOOGLE_APP_CRED_DEFAULT_VISUAL_IDENTIFIER_EXPANSION=&#x27;⭐&#x27;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Use POWERLEVEL9K_GOOGLE_APP_CRED_CONTENT_EXPANSION to specify the content displayed by</span></span><br><span class="line">  <span class="comment"># google_app_cred segment. Parameter expansions are very flexible and fast, too. See reference:</span></span><br><span class="line">  <span class="comment"># http://zsh.sourceforge.net/Doc/Release/Expansion.html#Parameter-Expansion.</span></span><br><span class="line">  <span class="comment">#</span></span><br><span class="line">  <span class="comment"># You can use the following parameters in the expansion. Each of them corresponds to one of the</span></span><br><span class="line">  <span class="comment"># fields in the JSON file pointed to by GOOGLE_APPLICATION_CREDENTIALS.</span></span><br><span class="line">  <span class="comment">#</span></span><br><span class="line">  <span class="comment">#   [&lt;64;37;10M[&lt;64;37;10M[&lt;64;37;10M[&lt;64;37;10MParameter                        | JSON key file field</span></span><br><span class="line">  <span class="comment">#   ---------------------------------+---------------</span></span><br><span class="line">  <span class="comment">#   P9K_GOOGLE_APP_CRED_TYPE         | type</span></span><br><span class="line">  <span class="comment">#   P9K_GOOGLE_APP_CRED_PROJECT_ID   | project_id</span></span><br><span class="line">  <span class="comment">#   P9K_GOOGLE_APP_CRED_CLIENT_EMAIL | client_email</span></span><br><span class="line">  <span class="comment">#</span></span><br><span class="line">  <span class="comment"># Note: $&#123;VARIABLE//\%/%%&#125; expands to $&#123;VARIABLE&#125; with all occurences of &#x27;%&#x27; replaced by &#x27;%%&#x27;.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_GOOGLE_APP_CRED_DEFAULT_CONTENT_EXPANSION=<span class="string">&#x27;$&#123;P9K_GOOGLE_APP_CRED_PROJECT_ID//\%/%%&#125;&#x27;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">###############################[ public_ip: public IP address ]###############################</span></span><br><span class="line">  <span class="comment"># Public IP color.</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_PUBLIC_IP_FOREGROUND=7</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_PUBLIC_IP_BACKGROUND=0</span></span><br><span class="line">  <span class="comment"># Custom icon.</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_PUBLIC_IP_VISUAL_IDENTIFIER[&lt;64;37;10M_EXPANSION=&#x27;⭐&#x27;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">########################[ vpn_ip: virtual private network indicator ]#########################</span></span><br><span class="line">  <span class="comment"># VPN IP color.</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_VPN_IP_FOREGROUND=0</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_VPN_IP_BACKGROUND=6</span></span><br><span class="line">  <span class="comment"># When on VPN, show just an icon without the IP address.</span></span><br><span class="line">  <span class="comment"># Tip: To display the private IP address when on VPN, remove the next line.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_VPN_IP_CONTENT_EXPANSION=</span><br><span class="line">  <span class="comment"># Regular expression for the VPN network interface. Run `ifconfig` or `ip -4 a show` while on VPN</span></span><br><span class="line">  <span class="comment"># to see the name of the interface.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_VPN_IP_INTERFACE=<span class="string">&#x27;(wg|(.*tun))[0-9]*&#x27;</span></span><br><span class="line">  <span class="comment"># If set to true, show one segment per matching network interface. If set to false, show only</span></span><br><span class="line">  <span class="comment"># one segment corresponding to the first matching ne[&lt;64;37;10M[&lt;64;37;10Mtwork interface.</span></span><br><span class="line">  <span class="comment"># Tip: If you set it to true, you&#x27;ll probably want to unset POWERLEVEL9K_VPN_IP_CONTENT_EXPANSION.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_VPN_IP_SHOW_ALL=<span class="literal">false</span></span><br><span class="line">  <span class="comment"># Custom icon.</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_VPN_IP_VISUAL_IDENTIFIER_EXPANSION=&#x27;⭐&#x27;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">###########[ ip: ip address and bandwidth usage for a specified network interface ]###########</span></span><br><span class="line">  <span class="comment"># IP color.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_IP_BACKGROUND=5</span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_IP_FOREGROUND=0</span><br><span class="line">  <span class="comment"># The following parameters are accessible within the expansion:</span></span><br><span class="line">  <span class="comment">#</span></span><br><span class="line">  <span class="comment">#   Parameter             | Meaning</span></span><br><span class="line">  <span class="comment">#   ----------------------+---------------</span></span><br><span class="line">  <span class="comment">#   P9K_IP_IP         | IP address</span></span><br><span class="line">  <span class="comment">#   P9K_IP_INTERFACE  | network interface</span></span><br><span class="line">  <span class="comment">#   P9K_IP_RX_BYTES   | total number of bytes received</span></span><br><span class="line">  <span class="comment">#   P9K_IP_TX_BYTES   | total number of bytes sent</span></span><br><span class="line">  <span class="comment">#   P9K_IP_RX_RATE    | receive rate (since last prompt)</span></span><br><span class="line">  <span class="comment">#   P9K_IP_TX_RATE    | send rate (since last prompt)</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_IP_CONTENT_EXPANSION=&#x27;$&#123;P9K_IP_RX_RATE:+⇣$P9K_IP_RX_RATE &#125;$&#123;P9K_IP_TX_RATE:+⇡$P9K_IP_TX_RATE &#125;$P9K_IP_IP&#x27;</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_IP_CONTENT_EXPANSION=&#x27;$&#123;P9K_IP_RX_RATE:+⇣$P9K_IP_RX_RATE &#125;$&#123;P9K_IP_TX_RATE:+⇡$P9K_IP_TX_RATE &#125;$P9K_IP_IP&#x27;</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_IP_CONTENT_EXPANSION=<span class="string">&#x27;$P9K_IP_IP&#x27;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Show information for the first network interface whose name matches this regular expression.</span></span><br><span class="line">  <span class="comment"># Run `ifconfig` or `ip -4 a show` to see the names of all network interfaces.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_IP_INTERFACE=<span class="string">&#x27;e.*&#x27;</span></span><br><span class="line">  <span class="comment"># Custom icon.</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_IP_VISUAL_IDENTIFIER_EXPANSION=&#x27;⭐&#x27;[&lt;64;37;10M[&lt;64;37;10M[&lt;64;37;10M[&lt;64;37;10M[&lt;64;37;10M</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">#########################[ proxy: system-wide http/https/ftp proxy ]##########################</span></span><br><span class="line">  <span class="comment"># Proxy color.</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_PROXY_FOREGROUND=4</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_PROXY_BACKGROUND=0</span></span><br><span class="line">  <span class="comment"># Custom icon.</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_PROXY_VISUAL_IDENTIFIER_EXPANSION=&#x27;⭐&#x27;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">################################[ battery: internal battery ]#################################</span></span><br><span class="line">  <span class="comment"># Show battery in red when it&#x27;s below this level and not connected to power supply.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_BATTERY_LOW_THRESHOLD=20</span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_BATTERY_LOW_FOREGROUND=1</span><br><span class="line">  <span class="comment"># Show battery in green when it&#x27;s charging or fully charged.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_BATTERY_&#123;CHARGING,CHARGED&#125;_FOREGROUND=2</span><br><span class="line">  <span class="comment"># Show battery in yellow when it&#x27;s discharging.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_BATTERY_DISCONNECTED_FOREGROUND=0</span><br><span class="line">  <span class="comment"># Battery pictograms going from low to high level of charge.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_BATTERY_STAGES=<span class="string">&#x27;\uf58d\uf579\uf57a\uf57b\uf57c\uf57d\uf57e\uf57f\uf580\uf581\uf578&#x27;</span></span><br><span class="line">  <span class="comment"># Don&#x27;t show the remaining time to charge/discharge.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_BATTERY_VERBOSE=<span class="literal">false</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_BATTERY_BACKGROUND=2</span><br><span class="line"></span><br><span class="line">  <span class="comment">#####################################[ wifi: wifi speed ]#####################################</span></span><br><span class="line">  <span class="comment"># WiFi color.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_WIFI_FOREGROUND=0</span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_WIFI_BACKGROUND=9</span><br><span class="line">  <span class="comment"># Custom icon.</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_WIFI_VISUAL_IDENTIFIER_EXPANSION=&#x27;⭐&#x27;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Use different colors and icons depending on signal strength ($P9K_WIFI_BARS).</span></span><br><span class="line">  <span class="comment">#</span></span><br><span class="line">  <span class="comment">#   # Wifi colors and [&lt;64;37;10M[&lt;64;37;10M[&lt;64;37;10M[&lt;64;37;10M[&lt;64;37;10M[&lt;64;37;10M[&lt;64;37;10M[&lt;64;37;10M[&lt;64;37;10M[&lt;64;37;10M[&lt;64;37;10M[&lt;64;37;10M[&lt;64;37;10M[&lt;64;37;10M[&lt;64;37;10Micons for different signal strength levels (low to high).</span></span><br><span class="line">  <span class="comment">#   typeset -g my_wifi_fg=(0 0 0 0 0)                                # &lt;-- change these values</span></span><br><span class="line">  <span class="comment">#   typeset -g my_wifi_icon=(&#x27;WiFi&#x27; &#x27;WiFi&#x27; &#x27;WiFi&#x27; &#x27;WiFi&#x27; &#x27;WiFi&#x27;)     # &lt;-- change these values</span></span><br><span class="line">  <span class="comment">#</span></span><br><span class="line">  <span class="comment">#   typeset -g POWERLEVEL9K_WIFI_CONTENT_EXPANSION=&#x27;%F&#123;$&#123;my_wifi_fg[P9K_WIFI_BARS+1]&#125;&#125;$P9K_WIFI_LAST_TX_RATE Mbps&#x27;</span></span><br><span class="line">  <span class="comment">#   typeset -g POWERLEVEL9K_WIFI_VISUAL_IDENTIFIER_EXPANSION=&#x27;%F&#123;$&#123;my_wifi_fg[P9K_WIFI_BARS+1]&#125;&#125;$&#123;my_wifi_icon[P9K_WIFI_BARS+1]&#125;&#x27;</span></span><br><span class="line">  <span class="comment">#</span></span><br><span class="line">  <span class="comment"># The following parameters are accessible within the expansions:</span></span><br><span class="line">  <span class="comment">#</span></span><br><span class="line">  <span class="comment">#   Parameter             | Meaning</span></span><br><span class="line">  <span class="comment">#   ----------------------+---------------</span></span><br><span class="line">  <span class="comment">#   P9K_WIFI_SSID         | service set identifier, a.k.a. network name</span></span><br><span class="line">  <span class="comment">#   P9K_WIFI_LINK_AUTH    | a[&lt;64;37;10M[&lt;64;37;10M[&lt;64;37;10M[&lt;64;37;10M[&lt;64;37;10M[&lt;64;37;10M[&lt;64;37;10M[&lt;64;37;10M[&lt;64;37;10M[&lt;64;37;10M[&lt;64;37;10M[&lt;64;37;10M[&lt;64;37;10M[&lt;64;37;10M[&lt;64;37;10Muthentication protocol such as &quot;wpa2-psk&quot; or &quot;none&quot;</span></span><br><span class="line">  <span class="comment">#   P9K_WIFI_LAST_TX_RATE | wireless transmit rate in megabits per second</span></span><br><span class="line">  <span class="comment">#   P9K_WIFI_RSSI         | signal strength in dBm, from -120 to 0</span></span><br><span class="line">  <span class="comment">#   P9K_WIFI_NOISE        | noise in dBm, from -120 to 0</span></span><br><span class="line">  <span class="comment">#   P9K_WIFI_BARS         | signal strength in bars, from 0 to 4 (derived from P9K_WIFI_RSSI and P9K_WIFI_NOISE)</span></span><br><span class="line">  <span class="comment">#</span></span><br><span class="line">  <span class="comment"># All parameters except P9K_WIFI_BARS are extracted from the output of the following command:</span></span><br><span class="line">  <span class="comment">#</span></span><br><span class="line">  <span class="comment">#   /System/Library/PrivateFrameworks/Apple80211.framework/Versions/Current/Resources/airport -I</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">####################################[ time: current time ]####################################</span></span><br><span class="line">  <span class="comment"># Current time color.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_TIME_FOREGROUND=0</span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_TIME_BACKGROUND=7</span><br><span class="line">  <span class="comment"># Format for the current time: 09:51:02. See `man 3 strftime`.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_TIME_FORMAT=<span class="string">&#x27;%D&#123;%I:%M:%S %p&#125;&#x27;</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_TIME_FORMAT=&#x27;%D&#123;%I:%M:%S %p&#125;&#x27;</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_TIME_FORMAT=&#x27;%D&#123;%Y.%-b.%-d %I:%M:%S %p&#125;&#x27;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># If set to true, time will update when you hit enter. This way prompts for the past</span></span><br><span class="line">  <span class="comment"># commands will contain the start times of their commands as opposed to the default</span></span><br><span class="line">  <span class="comment"># behavior where they contain the end times of their preceding commands.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_TIME_UPDATE_ON_COMMAND=<span class="literal">false</span></span><br><span class="line">  <span class="comment"># Custom icon.</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_TIME_VISUAL_IDENTIFIER_EXPANSION=&#x27;⭐&#x27;</span></span><br><span class="line">  <span class="comment"># Custom prefix.</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_TIME_PREFIX=&#x27;at &#x27;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Example of a user-defined prompt segment. Functi[&lt;64;37;10M[&lt;64;37;10M[&lt;64;37;10M[&lt;64;37;10M[&lt;64;37;10M[&lt;64;37;10M[&lt;64;37;10M[&lt;64;37;10M[&lt;64;37;10M[&lt;64;37;10M[&lt;64;37;10M[&lt;64;37;10M[&lt;64;37;10M[&lt;64;37;10Mon prompt_example will be called on every</span></span><br><span class="line">  <span class="comment"># prompt if `example` prompt segment is added to POWERLEVEL9K_LEFT_PROMPT_ELEMENTS or</span></span><br><span class="line">  <span class="comment"># POWERLEVEL9K_RIGHT_PROMPT_ELEMENTS. It displays an icon and yellow text on red background</span></span><br><span class="line">  <span class="comment"># greeting the user.</span></span><br><span class="line">  <span class="comment">#</span></span><br><span class="line">  <span class="comment"># Type `p10k help segment` for documentation and a more sophisticated example.</span></span><br><span class="line">  <span class="keyword">function</span> <span class="function"><span class="title">prompt_example</span></span>() &#123;</span><br><span class="line">    p10k segment -b 1 -f 3 -i <span class="string">&#x27;⭐&#x27;</span> -t <span class="string">&#x27;hello, %n&#x27;</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment"># User-defined prompt segments may optionally provide an instant_prompt_* function. Its job</span></span><br><span class="line">  <span class="comment"># is to generate the prompt segment for display in instant prompt. See</span></span><br><span class="line">  <span class="comment"># https://github.com/romkatv/powerlevel10k/blob/master/README.md#instant-prompt.</span></span><br><span class="line">  <span class="comment">#</span></span><br><span class="line">  <span class="comment"># Powerlevel10k will call instant_prompt_* at the same time as the regular prompt_* function</span></span><br><span class="line">  <span class="comment">#[&lt;64;37;10M[&lt;64;37;10M[&lt;64;37;10M[&lt;64;37;10M[&lt;64;37;10M[&lt;64;37;10M[&lt;64;37;10M[&lt;64;37;10M[&lt;64;37;10M[&lt;64;37;10M[&lt;64;37;10M[&lt;64;37;10M[&lt;64;37;10M[&lt;64;37;10M and will record all `p10k segment` calls it makes. When displaying instant prompt, Powerlevel10k</span></span><br><span class="line">  <span class="comment"># will replay these calls without actually calling instant_prompt_*. It is imperative that</span></span><br><span class="line">  <span class="comment"># instant_prompt_* always makes the same `p10k segment` calls regardless of environment. If this</span></span><br><span class="line">  <span class="comment"># rule is not observed, the content of instant prompt will be incorrect.</span></span><br><span class="line">  <span class="comment">#</span></span><br><span class="line">  <span class="comment"># Usually, you should either not define instant_prompt_* or simply call prompt_* from it. If</span></span><br><span class="line">  <span class="comment"># instant_prompt_* is not defined for a segment, the segment won&#x27;t be shown in instant prompt.</span></span><br><span class="line">  <span class="keyword">function</span> <span class="function"><span class="title">instant_prompt_example</span></span>() &#123;</span><br><span class="line">    <span class="comment"># Since prompt_example always makes the same `p10k segment` calls, we can call it from</span></span><br><span class="line">    <span class="comment"># instant_prompt_example. This will give us the same `example` prompt segment in the instant</span></span><br><span class="line">    <span class="comment"># and regular prompts.</span></span><br><span class="line">    prompt_example</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment"># User-defined prompt segments can be customized the same way as built-in segments.</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_EXAMPLE_FOREGROUND=3</span></span><br><span class="line">  <span class="comment"># typeset -g POWERLEVEL9K_EXAMPLE_VISUAL_IDENTIFIER_EXPANSION=&#x27;⭐&#x27;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Transient prompt works similarly to the builtin transient_rprompt option. It trims down prompt</span></span><br><span class="line">  <span class="comment"># when accepting a command line. Supported values:</span></span><br><span class="line">  <span class="comment">#</span></span><br><span class="line">  <span class="comment">#   - off:      Don&#x27;t change prompt when accepting a command line.</span></span><br><span class="line">  <span class="comment">#   - always:   Trim down prompt when accepting a command line.</span></span><br><span class="line">  <span class="comment">#   - same-dir: Trim down prompt when accepting a command line unless this is the first command</span></span><br><span class="line">  <span class="comment">#               typed after changing current working directory.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_TRANSIENT_PRO[&lt;64;37;10M[&lt;64;37;10M[&lt;64;37;10M[&lt;64;37;10M[&lt;64;37;10M[&lt;64;37;10M[&lt;64;37;10M[&lt;64;37;10M[&lt;64;37;10M[&lt;64;37;10M[&lt;64;37;10M[&lt;64;37;10M[&lt;64;37;10M[&lt;64;37;10MMPT=off</span><br><span class="line"></span><br><span class="line">  <span class="comment"># Instant prompt mode.</span></span><br><span class="line">  <span class="comment">#</span></span><br><span class="line">  <span class="comment">#   - off:     Disable instant prompt. Choose this if you&#x27;ve tried instant prompt and found</span></span><br><span class="line">  <span class="comment">#              it incompatible with your zsh configuration files.</span></span><br><span class="line">  <span class="comment">#   - quiet:   Enable instant prompt and don&#x27;t print warnings when detecting console output</span></span><br><span class="line">  <span class="comment">#              during zsh initialization. Choose this if you&#x27;ve read and understood</span></span><br><span class="line">  <span class="comment">#              https://github.com/romkatv/powerlevel10k/blob/master/README.md#instant-prompt.</span></span><br><span class="line">  <span class="comment">#   - verbose: Enable instant prompt and print a warning when detecting console output during</span></span><br><span class="line">  <span class="comment">#              zsh initialization. Choose this if you&#x27;ve never tried instant prompt, haven&#x27;t</span></span><br><span class="line">  <span class="comment">#              seen the warning, or if you are unsure what this all means.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_INSTANT_PROMPT=off</span><br><span class="line"></span><br><span class="line">  <span class="comment"># Hot reload allows you to change POWERLEVEL9K options after Powerlevel10k has been initialized.</span></span><br><span class="line">  <span class="comment"># For example, you can type POWERLEVEL9K_BACKGROUND=red and see your prompt turn red. Hot reload</span></span><br><span class="line">  <span class="comment"># can slow down prompt by 1-2 milliseconds, so it&#x27;s better to keep it turned off unless you</span></span><br><span class="line">  <span class="comment"># really need it.</span></span><br><span class="line">  <span class="built_in">typeset</span> -g POWERLEVEL9K_DISABLE_HOT_RELOAD=<span class="literal">true</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># If p10k is already loaded, reload configuration.</span></span><br><span class="line">  <span class="comment"># This works even with POWERLEVEL9K_DISABLE_HOT_RELOAD=true.</span></span><br><span class="line">  (( ! $+<span class="built_in">functions</span>[p10k] )) || p10k reload</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># Tell `p10k configure` which file it should overwrite.</span></span><br><span class="line"><span class="built_in">typeset</span> -g POWERLEVEL9K_CONFIG_FILE=<span class="variable">$&#123;<span class="variable">$&#123;(%):-%x&#125;</span>:a&#125;</span></span><br><span class="line"></span><br><span class="line">(( <span class="variable">$&#123;#p10k_config_opts&#125;</span> )) &amp;&amp; <span class="built_in">setopt</span> <span class="variable">$&#123;p10k_config_opts[@]&#125;</span></span><br><span class="line"><span class="string">&#x27;builtin&#x27;</span> <span class="string">&#x27;unset&#x27;</span> <span class="string">&#x27;p10k_config_opts&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>这个.p10k.zsh的配置方案并非本人原创，为之前配置时Google搜索所寻得，因时间较久寻不到当时的链接，故在此说明一下。</p>
]]></content>
  </entry>
</search>
